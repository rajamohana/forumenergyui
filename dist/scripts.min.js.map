{"version":3,"sources":["filters.js","assetService.js","backendService.js","areaChart/areaChart.js","barChartHoriz/barChartHoriz.js","donut/donut.js","dropdown/dropdown.js","fixedSidebar/fixedSidebar.js","genericDropdown/genericDropdown.js","genericDropdown/position.js","histogram/histogram.js","lifeChart/lifeChart.js","lineDashedLine/lineDashedLine.js","loader/loader.js","miniLifeChart/miniLifeChart.js","onFinishRender/onFinishRender.js","popup/popup.js","progressArc/progressArc.js","progressBar/progressBar.js","scrollOnClick/scrollOnClick.js","scrollToWhen/scrollToWhen.js","slider/slider.js","slimScroll/angular-slimscroll.js","slimScroll/jquery.slimscroll.js","app.js","assetdetails/assetdetails.js","assetgroupdetails/assetgroupdetails.js","assetgroups/assetgroups.js","assets/assets.js","geography/geography.js","insights/insights.js","login/login.js"],"names":["angular","module","filter","$filter","input","places","isNaN","factor","Array","join","Math","round","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","date","Date","split","reverse","output","precision","_","ceil","floor","abs","AssetsFactory","$resource","getData","method","isArray","AssetService","assetServiceInstance","imagesBaseUrl","_this","this","data","getAssetPath","token","path","assets","asset","factory","$inject","getServerPath","basePath","serverPaths","LoginService","$q","$http","$log","$httpParamSerializer","Endpoints","$cookies","loginService","loginData","baseParams","login","urlString","staticPaths","defer","isAuthenticated","loginToken","getObject","getUserDetails","loginObj","post","then","response","status","resp","putObject","Promise","reject","err","setData","forgotPassword","username","params","resolve","error","warn","promise","DashboardService","sites","getSites","userId","get","SiteDetailsService","siteData","getAllTrucks","siteId","category","sort","trucks","payloadData","type","getSiteData","getParametersData","truckNumber","parameterName","parametersData","parameterData","paramName","siteID","lookupData","len","Object","keys","length","obj","cancelRequest","TruckDetailsService","getTruck","truckId","assetType","config","headers","Authorization","result","getChartData","getCategories","jsonname","InsightsService","assetId","categoryId","sensorNames","parsedData","map","d","getDaysData","WhatIfScenarioService","$timeout","getDefaultData","basePath2","tweakParameter","allParameters","whatIfTweakData","payload","fuelConsumption","gearShiftCount","binOrDate","JSON","parse","loadScenarios","scenario","saveNewScenario","scenarioName","whatIfSaveNewScenario","SocketAPIService","socket","ws","WebSocket","apiPath","send","stringify","onmessage","callback","onopen","event","onerror","setTimeout","onclose","AllSitesService","getAssetGrp","id","getFracSite","AllAssetsService","postObj","GeographyService","getGeoData","appName","context","sync","timeout","isOffline","truck","insightsData","whatIfDefaultData","whatIfLoadScenarios","assetGroups","assetGroup","assetDetails","assetDetailsChart","geography","secondsData","hoursData","whatIfScenarios","constant","directive","$window","scope","compressedMode","tripVals","xlabel","ylabel","bandMin","bandMax","height","restrict","templateUrl","link","elem","attrs","render","addTransparentRects","brushg","insert","attr","width","height2","brushed","x","domain","brush","empty","x2","extent","tripsGroup","selectAll","avgLine","focus","select","call","xAxis","addHandles","append","hW","hH","showHoverNodes","xVal","siteAvgY","find","siteAvgXKey","siteAvgYKey","parseFloat","toFixed","old","hoverLine","siteAvgHoverCircle","y","hideHoveLine","showTripsAvg","showSiteAvg","showTrips","hideSiteAvgHoverLine","classed","hideHoverNodes","tripAvgY","tripY","tripAvgVals","siteAvgVals","d3","container","text","containerWidth","clipId","random","$","margin","top","right","bottom","left","margin2","scale","linear","range","y2","count","svg","axis","orient","outerTickSize","ticks","tickFormat","xAxisCount","xAxis2","yAxis","num","on","line2","line","interpolate","focusGraphs","labelx","style","trWidth","trHeight","rAngle","concat","max","siteAvgLine","datum","node","getTotalLength","enter","$apply","showOptimalValue","toggleTripsAvgGraph","toggleTripsGraph","toggleOptimalValueGraph","toggleSiteAvgGraph","$watch","newVal","oldVal","element","bind","innerWidth","$digest","$sce","sumVal","sumBy","renderHTML","trustAsHtml","mode","numVal","numLabel","totalVal","bottomLabel","valLabel","colorLabel","radius","pie","layout","value","arc","innerRadius","outerRadius","transition","duration","attrTween","i","startAngle","endAngle","t","textGroup","upperGroup","tabs","numAllTrucks","numCriticalTrucks","numStableTrucks","numGoodTrucks","onCategoryChange","activeTab","numTrucks","hideMenu","selectCategory","clickedCategory","toggleDropDown","$event","stopPropagation","closeDropDown","fixedSidebar","reAdjust","hasClass","parent","css","position","appendToOpenClass","openClass","service","$document","$rootScope","openScope","open","dropdownScope","closeDropdown","keybindFilter","isOpen","close","off","evt","getAutoClose","which","toggleElement","getToggleElement","contains","target","dropdownElement","getDropdownElement","focusToggleElement","$$phase","isKeynavEnabled","indexOf","preventDefault","focusDropdownEntry","controller","$scope","$element","$attrs","$parse","dropdownConfig","uibDropdownService","$animate","$position","$compile","$templateRequest","templateScope","getIsOpen","self","$new","setIsOpen","noop","toggleInvoker","onToggle","appendToBody","appendTo","keynavEnabled","body","addClass","init","assign","isDefined","dropdownAppendTo","appendToEl","dropdownAppendToBody","keyboardNav","dropdownMenu","remove","toggle","arguments","isFunction","autoClose","getElement","keyCode","elems","eq","isNumber","selectedOption","wasOpen","rightalign","scrollbarWidth","pos","positionElements","display","window","prop","appendOffset","offset","openContainer","hasOpenClass","dropdownMenuTemplateUrl","tplContent","trim","newEl","replaceWith","$destroy","dropdownCtrl","require","dropdownNested","tplUrl","toggleDropdown","disabled","aria-haspopup","aria-expanded","$on","unbind","SCROLLBAR_WIDTH","BODY_SCROLLBAR_WIDTH","OVERFLOW_REGEX","normal","hidden","PLACEMENT_REGEX","auto","primary","secondary","vertical","BODY_REGEX","getRawNode","nodeName","parseStyle","isFinite","offsetParent","isStaticPositioned","el","getComputedStyle","documentElement","isBody","isUndefined","bodyElem","clientWidth","removeClass","scrollElem","offsetWidth","scrollbarPadding","elemStyle","paddingRight","paddingBottom","scrollParent","test","tagName","widthOverflow","scrollWidth","originalRight","heightOverflow","scrollHeight","clientHeight","originalBottom","isScrollable","includeHidden","overflowRegex","overflow","overflowY","overflowX","includeSelf","documentEl","excludeStatic","parentElement","spStyle","includeMagins","elemOffset","marginTop","marginLeft","parentOffset","clientTop","scrollTop","clientLeft","scrollLeft","offsetHeight","elemBCR","getBoundingClientRect","pageYOffset","pageXOffset","viewportOffset","useDocument","includePadding","offsetBCR","offsetParentBCR","offsetParentStyle","paddingTop","paddingLeft","parsePlacement","placement","autoPlace","hostElem","targetElem","targetWidth","targetHeight","hostElemPos","targetElemPos","targetElemStyle","adjustedSize","marginRight","marginBottom","xOverflow","yOverflow","positionArrow","innerElem","querySelector","isTooltip","arrowElem","arrowCss","borderProp","borderWidth","borderRadiusProp","borderRadius","toolTipValue","containerHeight","formatPercent","format","ordinal","rangeRoundBands","xValue","yValue","rangeBand","delay","run","$templateCache","put","$state","todayX","todayY","xvalue","trendvalue","siteavgvalue","healthvalue","rulminvalue","rulmaxvalue","optimalmin","optimalmax","chartType","ngModel","compare","a","b","padding","minOptimalValue","maxOptimalValue","inline","current","name","isOptimal","isRULLegend","isRULTodayLine","isRULHealthLine","isRULTrendLine","isRULSiteAvgLine","isRULArea","toggleRULTodayLine","toggleRULTrendLine","toggleRULHealthLine","toggleRULSiteAvgLine","toggleRULArea","isDeteriotationLegend","isRODTodayLine","isRODTrendLine","isROD","isRODOptimalVal","isRODSiteAvgLine","toggleRODTodayLine","toggleRODTrendLine","toggleROD","toggleOptimalVal","toggleRODSiteAvgLine","showHoverLine","healthLineCircle","rulAvgCircle","rulMinCircle","rulMaxCircle","hideHoverLine","today","healthDataTemp","trendGraph","healthData","healthGraph","sortBy","todayPoint","ele","splice","first_smallest","Number","POSITIVE_INFINITY","mainData","rulData","rulMinData","rulMaxData","todayIndex","slice","rulData2","e","yAxisMin","yAxisMax","omit","push","yMaxValue","children","chartBody","xAxisLine","tickSize","tickPadding","yAxisLine","xTranslateHeight","area","y0","y1","class","x1","fill","shape-rendering","stroke","stroke-width","healthLine","totalLength","ease","minPoint","minBy","maxPoint","maxBy","showMoreLines","dataPoints","rulLine","rulArea","o","rulMinArea","head","last","rulMaxArea","uniqBy","rulAvgLine","rulMaxLine","rulMinLine","lineData","todayGroup","mouseover","mouseout","mouseX","mouse","xPoint","invert","healthLinePoint","RULPoint","RULMinPoint","RULMaxPoint","rulMinLastPoint","rulAvgLastPoint","rulMaxLastPoint","rulMinLastData","rulAvgLastData","rulMaxLastData","rulMinLabelLine","rulMinLabelLineLength","xRulMinLabelPos","rulAvgLabelLine","rulAvgLabelLineLength","xRulAvgLabelPos","rulMaxLabelLine","rulMaxLabelLineLength","xRulMaxLabelPos","yLabel","xLabel","newValue","failures","time","color","category10","xKey","yKey","key","min","c","values","v","failure","elm","isLoading","pendingRequests","val","show","hide","smh","rul","dotRadius","onresize","dots","originPos","xTodayPos","yTodayPos","rulPos","first_largest","apply","j","label","mainArea","field","mainTickValue","data2","todayLine","todayLineLength","$last","$emit","onFinishRender","transclude","onClose","progress","radiusDiff","avg","hidePointer","PI","foregroundColor","backgroundColor","textColor","radianScale","clamp","degreeScale","progressStartAngle","progressEndAngle","avgArcStartAngle","avgArcEndAngle","backgroundArc","foregroundArc","avgArc","meter","foreground","pHeight","pDisp","pointer","centroid","tip","html","destroy","progressController","progressConfig","getMaxOrDefault","maxParam","animate","$parent","$eval","bars","addBar","bar","title","recalculatePercentage","totalPercentage","reduce","total","percent","removeBar","forEach","textval","progressCtrl","scrollToWhen","scrollToDelay","ticksNumber","onSlide","sourceEvent","handle","xb","valChanged","diff","stepVal","rangeMin","rangeMax","units","firstTimeBrushCall","start","end","optimal","parentNode","appendChild","cloneNode","currValMark","slider","lineFunction","$elem","$attr","option","refresh","slimscroll","slimscrollOption","slimScroll","registerWatch","noWatch","$watchCollection","slimscrollWatch","slimscrolllistento","destructor","fn","extend","options","defaults","size","distance","opacity","alwaysVisible","disableFadeOut","railVisible","railColor","railOpacity","railDraggable","railClass","barClass","wrapperClass","allowPageScroll","wheelStep","touchScrollStep","railBorderRadius","each","_onWheel","isOverPanel","delta","wheelDelta","detail","srcTarget","srcElement","closest","is","me","scrollContent","releaseScroll","returnValue","isWheel","isJump","maxTop","outerHeight","parseInt","percentScroll","offsetTop","trigger","showBar","hideBar","attachWheel","addEventListener","document","attachEvent","getBarHeight","barHeight","minBarHeight","clearTimeout","queueHide","lastScroll","msg","stop","fadeIn","rail","isOverBar","isDragg","fadeOut","touchDif","divS","siblings","isPlainObject","h","scrollTo","scrollBy","unwrap","wrapper","border-radius","background","zIndex","BorderRadius","MozBorderRadius","WebkitBorderRadius","posCss","wrap","$doc","pageY","currTop","hover","originalEvent","touches","jQuery","Header","$location","ngOidcClient","checkImageUrl","url","match","header","fullName","userFirstName","userImage","userImgUrl","logout","currentState","cookies","getAll","signoutRedirect","authenticated","gotoState","search","scrollY","scrolledDown","app","$routeProvider","when","ngOidcClientProvider","setSettings","authority","client_id","redirect_uri","response_type","post_logout_redirect_uri","AssetDetails","currentCategories","sections","SensorPositions","fracpump","imageUrl","sensors","deacription","state","consumables","catwalk","ironroughneck","categoriesData","sectionName","categories","categoryName","variables","disName","limiting","wsdata","section","cat","ti","itemName","truckdetails","showRODGraph","truckData","healthGraphData","deteriorationGraphData","showTruckDetails","mainTruckCategories","showImgSection","temp","assetHealthData","assetMetaData","healthGraphDatas","deteriorationGraphs","detgraph","openInsights","index","variableName","parentIndex","uniqCategNames","chain","sensor","displayName","uniq","assetName","toggleToolTip","flag","showTooltip","switchDetails","partName","sensorName","showPreviewTooltip","closeAssetPreviewTooltp","part","changeLimit","navigateToAssetsList","paramObj","assetGrpType","siteType","assetGrpName","siteName","assetGrpId","navigateDirectly","AssetGroupDetails","loginDataObjectLength","frackList","rigList","currentSiteType","currentSiteGroup","allAssetGrpsData","localStorage","getItem","rigAvgData","fracsiteData","getAssetList","res","console","log","rigAvgHealth","rigAvgROD","assetsData","healthPercentage","metaData","assetGrpMetaData","gotoSiteDetails","assetLocation","changeDropdown","navigateBack","openExpandedTruck","alert","Allsites","getTabsData","all","exhaustiveList","fracpumps","ele2","some","ele3","roughneck","monitor","good","critical","checkStability","condition","list","setItem","parameterInsights","isOrder","trucks.orderSymbol","selectedType","selectedText","filterSelectedText","NewValue","OldValue","toggleOrder","orderSymbol","selection","selectionText","filterSelectedOption","filterAssets","qdata","Assets","singleSiteData","assetTypeName","expandTruck","collapseExpanded","siteCardSectionActive","showView","removeItem","progressGraph","graphData","xAxisToday","item","openExpanded","setActive","menuItem","activeMenuItem","goToDashboard","retrieveAllTrucks","closeExpanded","openCollapsedExpandedTruck","closeCollapsedExpandedTruck","retrieveAllTrucksList","retrieveCriticalTrucksList","retrieveStableTrucksList","retrieveGoodTrucksList","filterTrucks","Geography","processData","geoData","fpData","totalAssets","cwData","dataToShowOnHover","initializeMap","template","location","tval","getDate","getMonth","getFullYear","cIcon","L","divIcon","className","iconSize","aType","mid","guid","markersList","marker","coordinates","icon","draggable","addTo","mymap","bindPopup","openPopup","closePopup","odata","jdata","s4","toString","substring","mapviews","viewMap","currentAsset","wData","changeLocation","loc","ind","removeLayer","setView","view","tileLayer","OpenStreetMap","attribution","noWrap","setUrl","Insights","ins","popupData","currIndex","findIndex","goToState","changeCategory","getCategoryData","firstTimeCall","ngRepeatFinishedEvent","showGraphPopup","variable","variableData","minOptimal","maxOptimal","popupLineGraph","variableGraph","nowDate","now","showPopup","paramtype","varTrend","lineGraph","Graph","totalObj","avgObj","overLoadObj","navigateToOverview","Login","checkForAuthentication","manager","getUser","user","token_type","access_token","profile","userData","firstName","lastName","sub","userName","preferred_username","cookieObj","userLastName","credentials","password","messages","invalidUser","emailSent","isLoginProgress","loginError","oldLogin","go","authStatus","signinRedirect","getPath"],"mappings":"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","file":"scripts.min.js","sourcesContent":["'use strict';\r\n(function(){\r\n  angular.module('cyient.filters', [])\r\n  /**\r\n   * Set decimal\r\n   */\r\n   .filter('setDecimal', ['$filter', function ($filter) {\r\n      return function (input, places) {\r\n          if (isNaN(input)) {\r\n            return input;\r\n          }\r\n          // If we want 1 decimal place, we want to mult/div by 10\r\n          // If we want 2 decimal places, we want to mult/div by 100, etc\r\n          // So use the following to create that factor\r\n          var factor = \"1\" + Array(+(places > 0 && places + 1)).join(\"0\");\r\n          input = Math.round(input * factor) / factor;\r\n          if(input > 0){\r\n            return input;\r\n          } else {\r\n            return null;\r\n          }\r\n      };\r\n  }])\r\n  /**\r\n   * Convert all first characters in a sequence of words to uppercase\r\n   */\r\n  .filter('firstLetterUppercase', [function(){\r\n    return function(str) {\r\n      if(str){\r\n        return str.replace(/\\w\\S*/g, function(txt){\r\n          return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n        });\r\n      }\r\n    };\r\n  }])\r\n  /**\r\n   * Converts date to its string representation\r\n   * E.g. 04/12/2014 will be converted to 4 Dec 2014\r\n   */\r\n  .filter('dateToString', ['$filter', function($filter){\r\n    return function(input){\r\n      if(input){\r\n        var date = new Date(input.split(\"/\").reverse().join(\"-\"));\r\n        var output = $filter('date')(date, 'd MMM yyyy'); // use predefined Date filter\r\n        return output;\r\n      }\r\n    };\r\n  }])\r\n  .filter('round', [function(){\r\n    return function(input) {\r\n      return Math.round(input);\r\n    };\r\n  }])\r\n  .filter('roundTo', [function(){\r\n    return function(input, precision) {\r\n      if (typeof input !== 'number') {\r\n        return input;\r\n      }\r\n      return _.round(input, precision);\r\n    };\r\n  }])\r\n  .filter('ceil', [function(){\r\n    return function(input) {\r\n      return Math.ceil(input);\r\n    };\r\n  }])\r\n  .filter('floor', [function(){\r\n    return function(input) {\r\n      return Math.floor(input);\r\n    };\r\n  }])\r\n  .filter('abs', [function(){\r\n    return function(input) {\r\n      return Math.abs(input);\r\n    };\r\n  }]);\r\n})();\r\n","'use strict';\n(function(){\n  angular.module('cyient.assetService', [])\n  .factory('AssetsFactory', AssetsFactory)\n  .factory('AssetService', AssetService);\n\n  AssetsFactory.$inject = ['$resource'];\n  function AssetsFactory($resource) {\n    return $resource('data/assets.json',{ }, {\n      getData: {method:'GET', isArray: false}\n    });\n  }\n  AssetService.$inject = ['$resource', 'AssetsFactory'];\n  function AssetService($resource, AssetsFactory) {\n    var assetServiceInstance = {};\n    var imagesBaseUrl = 'assets/images/';\n    var _this = this;\n    AssetsFactory.getData(function(data){\n      _this.data = data;\n    });\n    assetServiceInstance.getAssetPath = function(token){\n      var path = '';\n      var assets = _this.data;\n      if(token) {\n        for(var asset in assets) {\n          if(asset === token) {\n            path = assets[asset];\n          }\n        }\n      }\n      return imagesBaseUrl + path;\n    }\n    return assetServiceInstance;\n  }\n\n})();\n","'use strict';\r\n(function() {\r\n\tvar apiPath = \"54.210.193.228\";\r\n\tvar insightsBasePath = \"http://\" + apiPath + \":34211/jobs?\";\r\n\tvar basePath = \"http://\" + apiPath + \":8081\" + \"/forumenergyweb\";\r\n\tvar basePath2 = basePath;// \"http://\"+apiPath +\":3000\";\r\n\tvar tempBasePathRN = basePath;// \"http://\"+apiPath\r\n\t// +\":3000/assets/asset/roughneck/\";\r\n\tvar tempBasePathCW = basePath;// \"http://\"+apiPath\r\n\t// +\":3000/assets/asset/catwalk/\";\r\n\tvar baseParams = {\r\n\t\tappName : 'am102',\r\n\t\tcontext : 'sql-contex1',\r\n\t\tsync : true,\r\n\t\ttimeout : 60\r\n\t};\r\n\t// Use in development mode only\r\n\t// Set default value 'false' in production mode.\r\n\t// Truth value indicates offline.\r\n\tvar isOffline = false;\r\n\t// Offline API endpoints\r\n\tvar staticPaths = {\r\n\t\tlogin : '/login',\r\n\t\tsites : '/api/sites',\r\n\t\ttrucks : '/api/trucks?',\r\n\t\ttruck : '/api/truck?',\r\n\t\tparametersData : '/api/params',\r\n\t\tinsightsData : '/api/insights',\r\n\t\twhatIfDefaultData : '/api/whatifdefault',\r\n\t\twhatIfTweakData : '/api/whatif',\r\n\t\twhatIfLoadScenarios : '/api/whatif',\r\n\t\twhatIfSaveNewScenario : '/api/whatif`',\r\n\t\tforgotPassword : '/api/forgotPassword'\r\n\t};\r\n\r\n\tfunction getServerPath(path) {\r\n\t\treturn basePath + serverPaths[path];\r\n\t}\r\n\r\n\t// function prepareHeaders() {\r\n\t// var loginToken=\"Bearer\r\n\t// eyJhbGciOiJSUzI1NiIsImtpZCI6IjBiNzQ5MWQ0YTJjODk4OTYzNjljY2Y5OThjZTVmNDM4IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDA4OTU4NDQsImV4cCI6MTU0MDg5NjQ0NCwiaXNzIjoiaHR0cHM6Ly9mZXRpZGVudGl0eWRldi5henVyZXdlYnNpdGVzLm5ldCIsImF1ZCI6WyJodHRwczovL2ZldGlkZW50aXR5ZGV2LmF6dXJld2Vic2l0ZXMubmV0L3Jlc291cmNlcyIsImFwaTEiXSwiY2xpZW50X2lkIjoianMiLCJzdWIiOiI0ZmI4M2UxYS1jYWU3LTRmMTMtYTlhYy0yZTAwYWJhYjVhMDciLCJhdXRoX3RpbWUiOjE1NDA4OTU4NDMsImlkcCI6ImxvY2FsIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsImFwaTEiXSwiYW1yIjpbInB3ZCJdfQ.lfCfYMwOwi7Iozo4TVdxRLnbKPR2Zuo_AK7xJW5yUX2fgQDdb9qUVI_HRe2-OYm6Fipmmu2rZzsSzQ30l3K9tXE-aifw3ulLng7dhyEHNUDgAh8P5v87Fr1W8kuHZn9e0R_FI5f1AIgVqiSwbZd58UVYooHSQEYCS08sE9v0utrGfXD8nVV4I26M9l5CLHqOxg0bqwWgJnzXk_VSfdNnwX2EUPV2uHqFrh2Sq4q4Y8bYJfHnnhT5YfqpYMdk3fqa1rff2DenLoUO68im7rob1JWn1VIP8H1E_681w2vcvZBO5aiRLW8q0BHldeqKftoQOlMriWUgglPBY_iY6hXiew\";//$cookies.getObject(\"login-token\");\r\n\r\n\t// var config = {\r\n\t// headers: {\r\n\t// 'Authorization': loginToken\r\n\t// }\r\n\t// };\r\n\t// return config;\r\n\t// }\r\n\r\n\tvar serverPaths = {\r\n\t\tlogin : '/login',\r\n\t\tassetGroups : '/assetGroups/assetGroup',\r\n\t\tassetGroup : '/assetGroups/assetGroupdetailsUser/',\r\n\t\tassets : '/assets/assetsuser/',\r\n\t\tassetDetails : '/assets/assetDetails/',\r\n\t\tassetDetailsChart : '/assets/assetDetails/chartData/',\r\n\t\tgeography : '/assetGroups/geographicData',\r\n\t\tsecondsData : '/category/fracType?filter=5hrs',\r\n\t\thoursData : '/category/fracType?filter=30days',\r\n\t\twhatIfScenarios : '/whatIfScenarios'\r\n\t};\r\n\r\n\tangular.module('cyient.urls', []).constant('Endpoints', {\r\n\t\tlogin : 'loginAM',\r\n\t\tsites : 'GetSitesDataAM',\r\n\t\ttrucks : 'callfourAM3',\r\n\t\ttruck : 'callTen',\r\n\t\tparametersData : 'GetParametersDataAM',\r\n\t\tinsightsData : 'Variable_Payload',\r\n\t\twhatIfDefaultData : 'WhatIfFirstAM3',\r\n\t\twhatIfTweakData : 'WhatIfNext',\r\n\t\twhatIfLoadScenarios : 'scenarioLoadAM',\r\n\t\twhatIfSaveNewScenario : 'scenarioSaveAM2',\r\n\t\tforgotPassword : '/api/forgotPassword'\r\n\t});\r\n\r\n\tangular.module('cyient.backendservice', [ 'cyient.urls' ]).factory(\r\n\t\t\t'LoginService', LoginService).factory('DashboardService',\r\n\t\t\tDashboardService).factory('SiteDetailsService', SiteDetailsService)\r\n\t\t\t.factory('TruckDetailsService', TruckDetailsService).factory(\r\n\t\t\t\t\t'InsightsService', InsightsService).factory(\r\n\t\t\t\t\t'WhatIfScenarioService', WhatIfScenarioService).factory(\r\n\t\t\t\t\t'SocketAPIService', SocketAPIService).factory(\r\n\t\t\t\t\t'AllSitesService', AllSitesService).factory(\r\n\t\t\t\t\t'AllAssetsService', AllAssetsService).factory(\r\n\t\t\t\t\t'GeographyService', GeographyService);\r\n\r\n\tLoginService.$inject = [ '$q', '$http', '$log', '$httpParamSerializer',\r\n\t\t\t'Endpoints', '$cookies' ];\r\n\tfunction LoginService($q, $http, $log, $httpParamSerializer, Endpoints,\r\n\t\t\t$cookies) {\r\n\t\tvar loginService = {}\r\n\t\tvar loginData = {};\r\n\t\tbaseParams[\"classPath\"] = \"\";\r\n\t\tbaseParams[\"classPath\"] = \"spark.jobserver\" + \".\" + Endpoints.login;\r\n\t\tvar urlString = (isOffline) ? (staticPaths.login)\r\n\t\t\t\t: getServerPath('login');\r\n\t\tvar defer = null;\r\n\r\n\t\t// loginService.authenticated = true;\r\n\r\n\t\tloginService.isAuthenticated = function() {\r\n\t\t\tvar loginToken = $cookies.getObject('login-token');\r\n\t\t\treturn loginToken ? true : false;\r\n\t\t};\r\n\r\n\t\tloginService.getUserDetails = function(loginObj) {\r\n\t\t\treturn $http.post(urlString, loginObj).then(function(response) {\r\n\t\t\t\tif (response.status == 200) {\r\n\t\t\t\t\t// loginService.authenticated = true;\r\n\t\t\t\t\tvar resp = response.data;\r\n\t\t\t\t\t$cookies.putObject('login-token', resp['Authorization']);\r\n\t\t\t\t\treturn resp;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// loginService.authenticated = false;\r\n\t\t\t\t\tPromise.reject(response);\r\n\t\t\t\t}\r\n\t\t\t}, function(err) {\r\n\t\t\t\t// loginService.authenticated = false;\r\n\t\t\t\tPromise.reject(err);\r\n\t\t\t});\r\n\r\n\t\t\t// $http.get(\"data/loginOutput.json\").then(function(response) {\r\n\t\t\t// if(response.status !== \"ERROR\"){\r\n\t\t\t// loginService.authenticated = true;\r\n\t\t\t// defer.resolve(response);\r\n\t\t\t// } else {\r\n\t\t\t// loginService.authenticated = false;\r\n\t\t\t// return defer.reject(response);\r\n\t\t\t// }\r\n\t\t\t// });\r\n\r\n\t\t\t// return defer.promise;\r\n\t\t};\r\n\t\tloginService.setData = function(data) {\r\n\t\t\tloginData = data;\r\n\t\t};\r\n\t\tloginService.getData = function() {\r\n\t\t\treturn loginData;\r\n\t\t};\r\n\r\n\t\tloginService.forgotPassword = function(username) {\r\n\t\t\tdefer = $q.defer();\r\n\t\t\t$http.post(Endpoints.forgotPassword, {\r\n\t\t\t\tparams : {\r\n\t\t\t\t\tusername : username\r\n\t\t\t\t}\r\n\t\t\t}).then(function(response) {\r\n\t\t\t\tif (response.status !== 'ERROR') {\r\n\t\t\t\t\tdefer.resolve(data);\r\n\t\t\t\t}\r\n\t\t\t}, function(error) {\r\n\t\t\t\t$log.warn(\"Forgot password. Try again ...\");\r\n\t\t\t});\r\n\t\t\treturn defer.promise;\r\n\t\t};\r\n\t\treturn loginService;\r\n\t}\r\n\r\n\tDashboardService.$inject = [ '$q', '$http', '$log', '$httpParamSerializer',\r\n\t\t\t'Endpoints' ];\r\n\tfunction DashboardService($q, $http, $log, $httpParamSerializer, Endpoints) {\r\n\t\tvar defer = $q.defer();\r\n\t\tbaseParams[\"classPath\"] = \"\";\r\n\t\tbaseParams[\"classPath\"] = \"spark.jobserver\" + \".\" + Endpoints.sites;\r\n\t\tvar urlString = (isOffline) ? staticPaths.sites\r\n\t\t\t\t: (basePath + $httpParamSerializer(baseParams));\r\n\t\treturn {\r\n\t\t\tgetSites : function(userId) {\r\n\t\t\t\tvar userData = {\r\n\t\t\t\t\t\"userId\" : userId\r\n\t\t\t\t};\r\n\t\t\t\t/*\r\n\t\t\t\t * $http.post(urlString, userData).then(function(response){ if\r\n\t\t\t\t * (response.status !== 'ERROR') { defer.resolve(response); } },\r\n\t\t\t\t * function(error){ $log.warn(\"Cannot retrieve sites ...\"); });\r\n\t\t\t\t */\r\n\t\t\t\t$http.get(\"data/getsitesdataoutput.json\").then(\r\n\t\t\t\t\t\tfunction(response) {\r\n\t\t\t\t\t\t\tif (response.status !== \"ERROR\") {\r\n\t\t\t\t\t\t\t\tdefer.resolve(response);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn defer.reject(response);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\treturn defer.promise;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tSiteDetailsService.$inject = [ '$q', '$http', '$log',\r\n\t\t\t'$httpParamSerializer', 'Endpoints' ];\r\n\tfunction SiteDetailsService($q, $http, $log, $httpParamSerializer,\r\n\t\t\tEndpoints) {\r\n\t\tvar defer = null;\r\n\t\tvar siteData = {};\r\n\t\treturn {\r\n\t\t\tgetAllTrucks : function(userId, siteId, category, filter, sort) {\r\n\t\t\t\tcategory = \"All\";\r\n\t\t\t\tbaseParams[\"classPath\"] = \"spark.jobserver\" + \".\"\r\n\t\t\t\t\t\t+ Endpoints.trucks;\r\n\t\t\t\tvar payloadData = {\r\n\t\t\t\t\t\"userId\" : userId,\r\n\t\t\t\t\t\"siteId\" : siteId,\r\n\t\t\t\t\t\"sort\" : sort,\r\n\t\t\t\t\t\"filter\" : filter,\r\n\t\t\t\t\t\"type\" : category\r\n\t\t\t\t};\r\n\t\t\t\tvar urlString = (isOffline) ? (staticPaths.trucks + $httpParamSerializer(payloadData))\r\n\t\t\t\t\t\t: (basePath + $httpParamSerializer(baseParams));\r\n\t\t\t\tdefer = $q.defer();\r\n\t\t\t\t/*\r\n\t\t\t\t * $http.post(urlString, payloadData).then(function(response){\r\n\t\t\t\t * if (response.status !== 'ERROR') { defer.resolve(response); } },\r\n\t\t\t\t * function(error){ $log.warn(\"Unable to load truck details\r\n\t\t\t\t * ...\"); });\r\n\t\t\t\t */\r\n\r\n\t\t\t\t$http.get(\"data/gettrucksdataoutput-all2.json\").then(\r\n\t\t\t\t\t\tfunction(response) {\r\n\t\t\t\t\t\t\tif (response.status !== \"ERROR\") {\r\n\t\t\t\t\t\t\t\tdefer.resolve(response);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn defer.reject(response);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\treturn defer.promise;\r\n\t\t\t},\r\n\r\n\t\t\tgetSiteData : function(userId, siteId) {\r\n\t\t\t\tvar userData = {\r\n\t\t\t\t\t\"userId\" : userId,\r\n\t\t\t\t\t\"siteId\" : siteId\r\n\t\t\t\t};\r\n\t\t\t\t/*\r\n\t\t\t\t * $http.post(urlString, userData).then(function(response){ if\r\n\t\t\t\t * (response.status !== 'ERROR') { defer.resolve(response); } },\r\n\t\t\t\t * function(error){ $log.warn(\"Cannot retrieve sites ...\"); });\r\n\t\t\t\t */\r\n\t\t\t\treturn $http.get(\"data/getsitesdataoutput.json\").then(\r\n\t\t\t\t\t\tfunction(response) {\r\n\t\t\t\t\t\t\tif (response.status !== \"ERROR\") {\r\n\t\t\t\t\t\t\t\treturn response;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tPromise.reject(response);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t// return defer.promise;\r\n\t\t\t},\r\n\t\t\tgetParametersData : function(userId, siteId, truckNumber,\r\n\t\t\t\t\tparameterName) {\r\n\t\t\t\tbaseParams[\"classPath\"] = \"spark.jobserver\" + \".\"\r\n\t\t\t\t\t\t+ Endpoints.parametersData;\r\n\t\t\t\tvar urlString = basePath + $httpParamSerializer(baseParams);\r\n\t\t\t\tvar parameterData = {\r\n\t\t\t\t\t\"userId\" : userId,\r\n\t\t\t\t\t\"siteId\" : siteId,\r\n\t\t\t\t\t\"truckNumber\" : truckNumber,\r\n\t\t\t\t\t\"paramName\" : parameterName\r\n\t\t\t\t};\r\n\t\t\t\tdefer = $q.defer();\r\n\t\t\t\t$http.post(urlString, parameterData).then(function(response) {\r\n\t\t\t\t\tif (response.status !== 'ERROR') {\r\n\t\t\t\t\t\tdefer.resolve(response);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function(error) {\r\n\t\t\t\t\t$log.warn(\"Unable to retrieve parameter data ...\");\r\n\t\t\t\t});\r\n\t\t\t\treturn defer.promise;\r\n\t\t\t},\r\n\t\t\tsetData : function(data) {\r\n\t\t\t\tsiteData = data;\r\n\t\t\t},\r\n\t\t\tgetData : function(siteID) {\r\n\t\t\t\tvar lookupData = {};\r\n\t\t\t\tvar len = Object.keys(siteData).length;\r\n\t\t\t\tif (len !== 0) {\r\n\t\t\t\t\tvar lookupData = siteData.filter(function(obj) {\r\n\t\t\t\t\t\treturn obj.siteId == siteID;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn lookupData[0];\r\n\t\t\t},\r\n\t\t\tcancelRequest : function() {\r\n\t\t\t\tif (defer) {\r\n\t\t\t\t\tdefer.resolve(\"Cancel request ...\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\tTruckDetailsService.$inject = [ '$q', '$http', '$log',\r\n\t\t\t'$httpParamSerializer', 'Endpoints', '$cookies' ];\r\n\tfunction TruckDetailsService($q, $http, $log, $httpParamSerializer,\r\n\t\t\tEndpoints, $cookies) {\r\n\t\tvar defer = null;\r\n\t\tbaseParams[\"classPath\"] = \"\";\r\n\t\treturn {\r\n\t\t\tgetTruck : function(truckId, assetType) {\r\n\t\t\t\t// baseParams[\"classPath\"] = \"spark.jobserver\" + \".\" +\r\n\t\t\t\t// Endpoints.truck;\r\n\t\t\t\t// var payloadData = {\r\n\t\t\t\t// \"userId\": userId,\r\n\t\t\t\t// \"siteId\": siteId,\r\n\t\t\t\t// \"truckNumber\": truckId,\r\n\t\t\t\t// \"binOrDate\": 'Date' //for bins this should be 'Bin'\r\n\t\t\t\t// };\r\n\t\t\t\t// var urlString = (isOffline) ? (staticPaths.truck +\r\n\t\t\t\t// $httpParamSerializer(payloadData)) : (basePath +\r\n\t\t\t\t// $httpParamSerializer(baseParams));\r\n\r\n\t\t\t\tvar loginToken = $cookies.getObject(\"login-token\");\r\n\t\t\t\tvar config = {\r\n\t\t\t\t\theaders : {\r\n\t\t\t\t\t\t'Authorization' : loginToken\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tvar urlString = (isOffline) ? (staticPaths.assetGroups)\r\n\t\t\t\t\t\t: getServerPath('assetDetails');\r\n\t\t\t\t\r\n\t\t\t\turlString = urlString + truckId;\r\n\r\n\t\t\t\tvar jsonType = \"new-asset-details-cw.json\";\r\n\t\t\t\t// defer = $q.defer();\r\n\t\t\t\treturn $http.get(urlString, config).then(function(response) {\r\n\t\t\t\t\tif (response.status == 200) {\r\n\t\t\t\t\t\tif (response.data.result) {\r\n\t\t\t\t\t\t\treturn response.data.result;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn response.data;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tPromise.reject(response);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t},\r\n\t\t\tcancelRequest : function() {\r\n\t\t\t\tdefer.resolve(\"Cancel request ...\");\r\n\t\t\t},\r\n\t\t\tgetChartData : function(truckId, assetType) {\r\n\t\t\t\t// baseParams[\"classPath\"] = \"spark.jobserver\" + \".\" +\r\n\t\t\t\t// Endpoints.truck;\r\n\t\t\t\t// var urlString = (isOffline) ? (staticPaths.truck +\r\n\t\t\t\t// $httpParamSerializer(payloadData)) : (basePath +\r\n\t\t\t\t// $httpParamSerializer(baseParams));\r\n\t\t\t\t// defer = $q.defer();\r\n\t\t\t\t/*\r\n\t\t\t\t * $http.post(urlString, payloadData).then(function(response){\r\n\t\t\t\t * if (response.status !== 'ERROR') { defer.resolve(response); } },\r\n\t\t\t\t * function(error){ $log.warn(\"Unable to load truck details\r\n\t\t\t\t * ...\"); });\r\n\t\t\t\t */\r\n\r\n\t\t\t\tvar loginToken = $cookies.getObject(\"login-token\");\r\n\t\t\t\tvar config = {\r\n\t\t\t\t\theaders : {\r\n\t\t\t\t\t\t'Authorization' : loginToken\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tvar urlString = (isOffline) ? (staticPaths.assetGroups)\r\n\t\t\t\t\t\t: getServerPath('assetDetailsChart');\r\n\t\t\t\turlString = urlString + truckId;\r\n\t\t\t\treturn $http.get(urlString, config).then(function(response) {\r\n\t\t\t\t\tif (response.status == 200) {\r\n\t\t\t\t\t\treturn response.data;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tPromise.reject(response);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t// getCategories: function (truckId) {\r\n\r\n\t\t\t// var loginToken=\"Bearer\r\n\t\t\t// eyJhbGciOiJSUzI1NiIsImtpZCI6IjBiNzQ5MWQ0YTJjODk4OTYzNjljY2Y5OThjZTVmNDM4IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NDA4OTU4NDQsImV4cCI6MTU0MDg5NjQ0NCwiaXNzIjoiaHR0cHM6Ly9mZXRpZGVudGl0eWRldi5henVyZXdlYnNpdGVzLm5ldCIsImF1ZCI6WyJodHRwczovL2ZldGlkZW50aXR5ZGV2LmF6dXJld2Vic2l0ZXMubmV0L3Jlc291cmNlcyIsImFwaTEiXSwiY2xpZW50X2lkIjoianMiLCJzdWIiOiI0ZmI4M2UxYS1jYWU3LTRmMTMtYTlhYy0yZTAwYWJhYjVhMDciLCJhdXRoX3RpbWUiOjE1NDA4OTU4NDMsImlkcCI6ImxvY2FsIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsImFwaTEiXSwiYW1yIjpbInB3ZCJdfQ.lfCfYMwOwi7Iozo4TVdxRLnbKPR2Zuo_AK7xJW5yUX2fgQDdb9qUVI_HRe2-OYm6Fipmmu2rZzsSzQ30l3K9tXE-aifw3ulLng7dhyEHNUDgAh8P5v87Fr1W8kuHZn9e0R_FI5f1AIgVqiSwbZd58UVYooHSQEYCS08sE9v0utrGfXD8nVV4I26M9l5CLHqOxg0bqwWgJnzXk_VSfdNnwX2EUPV2uHqFrh2Sq4q4Y8bYJfHnnhT5YfqpYMdk3fqa1rff2DenLoUO68im7rob1JWn1VIP8H1E_681w2vcvZBO5aiRLW8q0BHldeqKftoQOlMriWUgglPBY_iY6hXiew\";//$cookies.getObject(\"login-token\");\r\n\t\t\t// var config = {\r\n\t\t\t// headers: {\r\n\t\t\t// 'Authorization': loginToken\r\n\t\t\t// }\r\n\t\t\t// };\r\n\t\t\t// var urlString = (isOffline) ? (staticPaths.assetGroups) :\r\n\t\t\t// getServerPath('categories');\r\n\t\t\t// urlString = urlString + truckId;\r\n\r\n\t\t\t// return $http.get(urlString, config).then(function (response) {\r\n\t\t\t// if (response.status !== \"ERROR\") {\r\n\t\t\t// return respons.data;\r\n\t\t\t// } else {\r\n\t\t\t// Promise.reject(response);\r\n\t\t\t// }\r\n\t\t\t// });\r\n\t\t\t// }\r\n\t\t\tgetCategories : function(type) {\r\n\t\t\t\tvar jsonname;\r\n\t\t\t\tif (type == 'catwalk') {\r\n\t\t\t\t\tjsonname = \"data/categories-catwalk.json\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tjsonname = \"data/categories-fracpump.json\";\r\n\t\t\t\t}\r\n\t\t\t\treturn $http.get(jsonname).then(function(response) {\r\n\t\t\t\t\tif (response.status !== \"ERROR\") {\r\n\t\t\t\t\t\treturn response;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tPromise.reject(response);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tInsightsService.$inject = [ '$q', '$http', '$httpParamSerializer',\r\n\t\t\t'Endpoints', '$cookies' ];\r\n\tfunction InsightsService($q, $http, $httpParamSerializer, Endpoints,\r\n\t\t\t$cookies) {\r\n\t\treturn {\r\n\t\t\tgetData : function(userId, siteId, assetId, categoryId, assetType,\r\n\t\t\t\t\tsensorNames) {\r\n\t\t\t\t// baseParams[\"classPath\"] = \"spark.jobserver\" + \".\" +\r\n\t\t\t\t// Endpoints.insightsData;\r\n\t\t\t\t// var urlString = insightsBasePath +\r\n\t\t\t\t// $httpParamSerializer(baseParams);\r\n\t\t\t\tvar loginToken = $cookies.getObject(\"login-token\");\r\n\t\t\t\tvar config = {\r\n\t\t\t\t\theaders : {\r\n\t\t\t\t\t\t'Authorization' : loginToken\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tvar urlString = (isOffline) ? (staticPaths.assetGroups)\r\n\t\t\t\t\t\t: getServerPath('secondsData');\r\n\t\t\t\tvar parameterData = {\r\n\t\t\t\t\t\"userId\" : userId,\r\n\t\t\t\t\t\"siteId\" : siteId,\r\n\t\t\t\t\t\"assetId\" : assetId,\r\n\t\t\t\t\t\"assetType\" : assetType,\r\n\t\t\t\t\t\"categoryId\" : categoryId,\r\n\t\t\t\t\t\"sensorNames\" : sensorNames\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\t//TODO Remove\r\n\t\t\t\tparameterData.sensorNames=[\"inletTemp\", \"outletTemp\"];\r\n\t\t\t\tvar defer = $q.defer();\r\n\t\t\t\t$http.post(urlString, parameterData, config).then(\r\n\t\t\t\t\t\tfunction(response) {\r\n\t\t\t\t\t\t\tif (response.status !== 'ERROR') {\r\n\t\t\t\t\t\t\t\tvar parsedData = response.data.map(function(d) {\r\n\t\t\t\t\t\t\t\t\treturn d;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tdefer.resolve(parsedData);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\t\t\tdefer.reject(\"ERROR\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\treturn defer.promise;\r\n\t\t\t},\r\n\r\n\t\t\tgetDaysData : function(userId, siteId, assetId, assetType,\r\n\t\t\t\t\tcategoryId, sensorNames) {\r\n\t\t\t\tvar loginToken = $cookies.getObject(\"login-token\");\r\n\t\t\t\tvar config = {\r\n\t\t\t\t\theaders : {\r\n\t\t\t\t\t\t'Authorization' : loginToken\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tvar urlString = (isOffline) ? (staticPaths.assetGroups)\r\n\t\t\t\t\t\t: getServerPath('hoursData');\r\n\t\t\t\tvar parameterData = {\r\n\t\t\t\t\t\"userId\" : userId,\r\n\t\t\t\t\t\"siteId\" : siteId,\r\n\t\t\t\t\t\"assetId\" : assetId,\r\n\t\t\t\t\t\"assetType\" : assetType,\r\n\t\t\t\t\t\"categoryId\" : categoryId,\r\n\t\t\t\t\t\"sensorNames\" : sensorNames\r\n\t\t\t\t};\r\n\t\t\t\tvar defer = $q.defer();\r\n\t\t\t\t// $http.get(\"data/hoursData.json\").then(function (response) {\r\n\t\t\t\t$http.post(urlString, parameterData, config).then(\r\n\t\t\t\t\t\tfunction(response) {\r\n\t\t\t\t\t\t\tif (response.status !== 'ERROR') {\r\n\t\t\t\t\t\t\t\tvar parsedData = response.data.map(function(d) {\r\n\t\t\t\t\t\t\t\t\treturn d;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tdefer.resolve(parsedData);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\t\t\tdefer.reject(\"ERROR\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\treturn defer.promise;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tWhatIfScenarioService.$inject = [ '$q', '$http', '$log',\r\n\t\t\t'$httpParamSerializer', 'Endpoints', '$timeout', '$cookies' ];\r\n\tfunction WhatIfScenarioService($q, $http, $log, $httpParamSerializer,\r\n\t\t\tEndpoints, $timeout, $cookies) {\r\n\t\treturn {\r\n\t\t\tgetDefaultData : function(truckNumber) {\r\n\t\t\t\tvar loginToken = $cookies.getObject(\"login-token\");\r\n\t\t\t\tvar config = {\r\n\t\t\t\t\theaders : {\r\n\t\t\t\t\t\t'Authorization' : loginToken\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tvar urlString = (isOffline) ? (staticPaths.assetGroups)\r\n\t\t\t\t\t\t: basePath2 + serverPaths['whatIfScenarios'];\r\n\r\n\t\t\t\turlString = urlString + \"/\" + truckNumber;\r\n\r\n\t\t\t\tvar defer = $q.defer();\r\n\t\t\t\t$http.get(urlString).then(function(response) {\r\n\t\t\t\t\tvar parsedData = response.data;\r\n\t\t\t\t\tdefer.resolve(parsedData);\r\n\t\t\t\t}, function(error) {\r\n\t\t\t\t\t$log.warn(\"Unable to retrieve data ...\");\r\n\t\t\t\t})\r\n\t\t\t\treturn defer.promise;\r\n\t\t\t},\r\n\t\t\ttweakParameter : function(userId, siteId, truckNumber,\r\n\t\t\t\t\tallParameters) {\r\n\t\t\t\tbaseParams[\"classPath\"] = \"spark.jobserver\" + \".\"\r\n\t\t\t\t\t\t+ Endpoints.whatIfTweakData;\r\n\t\t\t\tvar urlString = basePath + $httpParamSerializer(baseParams);\r\n\t\t\t\tvar parameterData = {\r\n\t\t\t\t\t\"userId\" : userId,\r\n\t\t\t\t\t\"siteId\" : siteId,\r\n\t\t\t\t\t\"truckNumber\" : truckNumber,\r\n\t\t\t\t\t\"payload\" : allParameters.payload,\r\n\t\t\t\t\t\"fuelConsumption\" : allParameters.fuelConsumption,\r\n\t\t\t\t\t\"gearShiftCount\" : allParameters.gearShiftCount,\r\n\t\t\t\t\t\"binOrDate\" : 'Date' // for bins this should be 'Bin'\r\n\t\t\t\t};\r\n\t\t\t\tvar defer = $q.defer();\r\n\t\t\t\t$http.post(urlString, parameterData).then(function(response) {\r\n\t\t\t\t\tif (response.status !== 'ERROR') {\r\n\t\t\t\t\t\tvar parsedData = JSON.parse(response.data.result[0]);\r\n\t\t\t\t\t\tdefer.resolve(parsedData);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function(error) {\r\n\t\t\t\t\t$log.warn(\"Unable to retrieve data ...\");\r\n\t\t\t\t});\r\n\t\t\t\treturn defer.promise;\r\n\t\t\t},\r\n\t\t\tloadScenarios : function(userId, siteId, truckNumber) {\r\n\t\t\t\t// baseParams[\"classPath\"] = \"spark.jobserver\" + \".\" +\r\n\t\t\t\t// Endpoints.whatIfLoadScenarios;\r\n\t\t\t\t// var urlString = basePath + $httpParamSerializer(baseParams);\r\n\t\t\t\t// var parameterData = {\r\n\t\t\t\t// \"userId\" : userId,\r\n\t\t\t\t// \"siteId\" : siteId,\r\n\t\t\t\t// \"truckNumber\": truckNumber\r\n\t\t\t\t// };\r\n\t\t\t\tvar defer = $q.defer();\r\n\t\t\t\t$http.get(\"data/whatif-second.json\").then(\r\n\t\t\t\t\t\tfunction(response) {\r\n\t\t\t\t\t\t\tif (response.status !== 'ERROR') {\r\n\t\t\t\t\t\t\t\tvar parsedData = response.data.result\r\n\t\t\t\t\t\t\t\t\t\t.map(function(scenario) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn scenario;\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\tdefer.resolve(parsedData);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\t\t\t$log.warn(\"Unable to retrieve data ...\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\treturn defer.promise;\r\n\t\t\t},\r\n\t\t\tsaveNewScenario : function(userId, siteId, truckNumber,\r\n\t\t\t\t\tscenarioName, params) {\r\n\t\t\t\tbaseParams[\"classPath\"] = \"spark.jobserver\" + \".\"\r\n\t\t\t\t\t\t+ Endpoints.whatIfSaveNewScenario;\r\n\t\t\t\tvar urlString = basePath + $httpParamSerializer(baseParams);\r\n\t\t\t\tvar parameterData = {\r\n\t\t\t\t\t\"scenarioName\" : scenarioName,\r\n\t\t\t\t\t\"userId\" : userId,\r\n\t\t\t\t\t\"siteId\" : siteId,\r\n\t\t\t\t\t\"truckNumber\" : truckNumber,\r\n\t\t\t\t\t\"payload\" : params.payload,\r\n\t\t\t\t\t\"fuelConsumption\" : params.fuelConsumption,\r\n\t\t\t\t\t\"gearShiftCount\" : params.gearShiftCount\r\n\t\t\t\t};\r\n\t\t\t\tvar defer = $q.defer();\r\n\t\t\t\t$http.post(urlString, parameterData).then(function(response) {\r\n\t\t\t\t\tif (response.status !== 'ERROR') {\r\n\t\t\t\t\t\tvar status = JSON.parse(response.data.result).status\r\n\t\t\t\t\t\tdefer.resolve(response)\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function(error) {\r\n\t\t\t\t\t$log.warn(\"Unable to save scenario ...\");\r\n\t\t\t\t});\r\n\t\t\t\treturn defer.promise;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t// Socket-api service to handle web-socket calls.\r\n\tSocketAPIService.$inject = [];\r\n\tfunction SocketAPIService() {\r\n\t\tvar onmessageDefer;\r\n\t\tvar socket = {\r\n\t\t\tws : new WebSocket('ws://' + apiPath + ':8089'),\r\n\t\t\tsend : function(data) {\r\n\t\t\t\tdata = JSON.stringify(data);\r\n\t\t\t\tsocket.ws.send(data);\r\n\t\t\t},\r\n\t\t\tonmessage : function(callback) {\r\n\t\t\t\tsocket.ws.onmessage = callback;\r\n\t\t\t}\r\n\t\t};\r\n\t\tsocket.ws.onopen = function(event) {\r\n\t\t\t// Connection established...\r\n\t\t};\r\n\t\tsocket.ws.onerror = function(event) {\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\tsocket.ws = new WebSocket('ws://apiPath:8089');\r\n\t\t\t}, 1000);\r\n\t\t};\r\n\t\tsocket.ws.onclose = function(event) {\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\tsocket.ws = new WebSocket('ws://apiPath:8089');\r\n\t\t\t}, 1000);\r\n\t\t};\r\n\t\treturn socket;\r\n\t}\r\n\r\n\tAllSitesService.$inject = [ '$q', '$http', '$log', '$httpParamSerializer',\r\n\t\t\t'Endpoints', '$cookies' ];\r\n\tfunction AllSitesService($q, $http, $log, $httpParamSerializer, Endpoints,\r\n\t\t\t$cookies) {\r\n\t\tvar defer = $q.defer();\r\n\t\tbaseParams[\"classPath\"] = \"\";\r\n\t\tbaseParams[\"classPath\"] = \"spark.jobserver\" + \".\" + Endpoints.sites;\r\n\t\tvar urlString = (isOffline) ? staticPaths.sites\r\n\t\t\t\t: (basePath + $httpParamSerializer(baseParams));\r\n\t\treturn {\r\n\t\t\tgetSites : function() {\r\n\t\t\t\tvar loginToken = $cookies.getObject(\"login-token\");\r\n\t\t\t\tvar loginData = $cookies.getObject(\"loginData\");\r\n\t\t\t\tvar config = {\r\n\t\t\t\t\theaders : {\r\n\t\t\t\t\t\t'Authorization' : loginToken,\r\n\t\t\t\t\t\t'userId' : loginData.userId\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tvar urlString = (isOffline) ? (staticPaths.assetGroups)\r\n\t\t\t\t\t\t: getServerPath('assetGroups');\r\n\r\n\t\t\t\treturn $http.get(urlString, config).then(function(response) {\r\n\t\t\t\t\tif (response.status == 200) {\r\n\t\t\t\t\t\t// defer.resolve(response);\r\n\t\t\t\t\t\treturn response.data;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function(error) {\r\n\t\t\t\t\t$log.warn(\"Cannot retrieve sites ...\");\r\n\t\t\t\t});\r\n\t\t\t\t// $http.get(\"data/getallsites.json\").then(function (response) {\r\n\t\t\t\t// if (response.status !== \"ERROR\") {\r\n\t\t\t\t// defer.resolve(response);\r\n\t\t\t\t// } else {\r\n\t\t\t\t// return defer.reject(response);\r\n\t\t\t\t// }\r\n\t\t\t\t// });\r\n\t\t\t\t// return defer.promise;\r\n\t\t\t},\r\n\t\t\tgetAssetGrp : function(id) {\r\n\t\t\t\t/*\r\n\t\t\t\t * $http.post(urlString, userData).then(function(response){ if\r\n\t\t\t\t * (response.status !== 'ERROR') { defer.resolve(response); } },\r\n\t\t\t\t * function(error){ $log.warn(\"Cannot retrieve sites ...\"); });\r\n\t\t\t\t */\r\n\t\t\t\tvar loginToken = $cookies.getObject(\"login-token\");\r\n\t\t\t\tvar config = {\r\n\t\t\t\t\theaders : {\r\n\t\t\t\t\t\t'Authorization' : loginToken\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tvar urlString = (isOffline) ? (staticPaths.assetGroups)\r\n\t\t\t\t\t\t: getServerPath('assetGroup');\r\n\t\t\t\turlString = urlString + id;\r\n\r\n\t\t\t\treturn $http.get(urlString, config).then(function(response) {\r\n\t\t\t\t\tif (response.status == 200) {\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn response.data;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tPromise.reject(response);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tgetFracSite : function() {\r\n\t\t\t\tvar loginToken = $cookies.getObject(\"login-token\");\r\n\t\t\t\tvar config = {\r\n\t\t\t\t\theaders : {\r\n\t\t\t\t\t\t'Authorization' : loginToken\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tvar urlString = (isOffline) ? (staticPaths.assetGroups)\r\n\t\t\t\t\t\t: getServerPath('assetGroup');\r\n\r\n\t\t\t\treturn $http.get(urlString, config).then(function(response) {\r\n\t\t\t\t\tif (response.status == 200) {\r\n\t\t\t\t\t\treturn response.data;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tPromise.reject(response);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t};\r\n\t}\r\n\r\n\tAllAssetsService.$inject = [ '$q', '$http', '$log', '$httpParamSerializer',\r\n\t\t\t'Endpoints', '$cookies' ];\r\n\tfunction AllAssetsService($q, $http, $log, $httpParamSerializer, Endpoints,\r\n\t\t\t$cookies) {\r\n\t\tvar defer = $q.defer();\r\n\t\tbaseParams[\"classPath\"] = \"\";\r\n\t\tbaseParams[\"classPath\"] = \"spark.jobserver\" + \".\" + Endpoints.sites;\r\n\t\tvar urlString = (isOffline) ? staticPaths.sites\r\n\t\t\t\t: (basePath + $httpParamSerializer(baseParams));\r\n\t\treturn {\r\n\t\t\tgetSites : function(postObj) {\r\n\t\t\t\tvar loginToken = $cookies.getObject(\"login-token\");\r\n\t\t\t\tvar loginData = $cookies.getObject(\"loginData\");\r\n\t\t\t\tvar config = {\r\n\t\t\t\t\theaders : {\r\n\t\t\t\t\t\t'Authorization' : loginToken,\r\n\t\t\t\t\t\t'userId' : loginData.userId\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tvar urlString = (isOffline) ? (staticPaths.assetGroups)\r\n\t\t\t\t\t\t: getServerPath('assets');\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t * $http.post(urlString, userData).then(function(response){ if\r\n\t\t\t\t * (response.status !== 'ERROR') { defer.resolve(response); } },\r\n\t\t\t\t * function(error){ $log.warn(\"Cannot retrieve sites ...\"); });\r\n\t\t\t\t */\r\n\t\t\t\treturn $http.get(urlString, config).then(function(response) {\r\n\t\t\t\t\tif (response.status == 200) {\r\n\t\t\t\t\t\treturn response.data;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tPromise.reject(response);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tGeographyService.$inject = [ '$q', '$http', '$log', '$cookies' ];\r\n\tfunction GeographyService($q, $http, $log, $cookies) {\r\n\t\tvar obj = {};\r\n\r\n\t\tobj.getGeoData = function() {\r\n\r\n\t\t\tvar loginToken = $cookies.getObject(\"login-token\");\r\n\t\t\tvar loginData = $cookies.getObject(\"loginData\");\r\n\t\t\tvar config = {\r\n\t\t\t\theaders : {\r\n\t\t\t\t\t'Authorization' : loginToken,\r\n\t\t\t\t\t'userId' : loginData.userId\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tvar urlString = (isOffline) ? (staticPaths.assetGroups)\r\n\t\t\t\t\t: getServerPath('geography');\r\n\r\n\t\t\treturn $http.get(urlString, config).then(function(response) {\r\n\t\t\t\tif (response.status == 200) {\r\n\t\t\t\t\treturn response.data;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tPromise.reject(response);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n})();\r\n","'use strict';\r\nangular.module('cyient.areachart', [])\r\n.directive('areaChart', ['$window', '$log', function($window, $log) {\r\n    return {\r\n        scope: {\r\n            compressedMode: '=',\r\n            tripVals: \"=\",\r\n            xlabel: \"=\",\r\n            ylabel: \"=\",\r\n            bandMin: \"=\",\r\n            bandMax: \"=\",\r\n            height: \"@\"\r\n        },\r\n        restrict: \"AE\",\r\n        templateUrl: \"directives/areaChart/areachart.html\",\r\n        link: function(scope, elem, attrs) {\r\n\r\n            var container = elem[0];\r\n\r\n            scope.$watch(\"tripVals\", function(newVal, oldVal) {\r\n                render();\r\n            }, true);\r\n\r\n            angular.element($window).bind('resize', function() {\r\n                if ($window.innerWidth >= 1024) {\r\n                    render();\r\n                    scope.$digest();\r\n                }\r\n            });\r\n\r\n            function render() {\r\n\r\n                if (!scope.tripAvgVals && !scope.siteAvgVals && !scope.tripVals) {\r\n                    return;\r\n                }\r\n\r\n                d3.select(container).select(\"svg\").text(\"\");\r\n\r\n                // Storing key names in variables makes them changing\r\n                // easy later.\r\n                // var tripsAvgXKey = 'xValue', tripsAvgYKey = 'yValue';\r\n                var siteAvgXKey  = 'xValue', siteAvgYKey  = 'yValue';\r\n                // var tripsXKey    = 'xValue', tripsYKey    = 'yValue';\r\n\r\n                var containerWidth;\r\n                var barMaxWidth = 10;\r\n                /*\r\n                 * Multiple area-charts in the same page are having same clip ID.\r\n                 * So, prevent the clash by generating it randomly.\r\n                 */\r\n                var clipId = \"area-clip-\" + _.random(0, 10000);\r\n\r\n                // Hacky way of calcuating the width.\r\n                // Find a way to remove the hardcoded number '200'\r\n                if (scope.compressedMode) {\r\n                    containerWidth = $(elem).width() - 250;\r\n                } else {\r\n                    containerWidth = $(elem).width() - 200;\r\n                }\r\n\r\n                var margin  = {top: 10, right: 10, bottom: 150, left: 55},\r\n                    margin2 = {top: 180, right: 10, bottom: 20, left: 55},\r\n                    width   = containerWidth + 100,\r\n                    height  = 300 - margin.top - margin.bottom,\r\n                    height2 = 300 - margin2.top - margin2.bottom;\r\n\r\n                if (!scope.compressedMode) {\r\n                    height  = height - 10;\r\n                    height2 = height2 - 10;\r\n                }\r\n\r\n                if (!scope.compressedMode) {\r\n                \tmargin2.top += 30;\r\n                \theight += 50;\r\n                }\r\n\r\n                \r\n\r\n                var x  = d3.scale.linear().range([0, width]),\r\n                    x2 = d3.scale.linear().range([0, width]),\r\n                    y  = d3.scale.linear().range([height, 0]),\r\n                    y2 = d3.scale.linear().range([height2, 0]);\r\n\r\n                var count = 5;\r\n\r\n                if(scope.compressedMode){\r\n                    var xAxis  = d3.svg.axis()\r\n                                .scale(x).orient(\"bottom\").outerTickSize(0)\r\n                                .ticks(5)\r\n                                .tickFormat(function(){\r\n                                    count = count - 1;\r\n                                    return count+\"hrs\";\r\n                                })\r\n                               \r\n                }  else{\r\n                    var xAxis  = d3.svg.axis()\r\n                                .scale(x).orient(\"bottom\").outerTickSize(0)\r\n                                .ticks(0)\r\n                } \r\n                \r\n                var xAxisCount = 31;\r\n                var xAxis2 = d3.svg.axis()\r\n                            .scale(x2).orient(\"bottom\").outerTickSize(0)\r\n                            .ticks(30)\r\n                            .tickFormat(function(d) { \r\n                                xAxisCount = xAxisCount - 1;\r\n                                return xAxisCount;\r\n                            })\r\n                            \r\n                var yAxis  = d3.svg.axis().scale(y).orient(\"left\").outerTickSize(0)\r\n                                    .ticks(scope.compressedMode ? 5 : 6)\r\n                                    .tickFormat(function(d){\r\n                                        var num = d;\r\n                                        if (num >= 1000000000) {\r\n                                            return (num / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'G';\r\n                                         }\r\n                                         if (num >= 1000000) {\r\n                                            return (num / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\r\n                                         }\r\n                                         if (num >= 1000) {\r\n                                            return (num / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\r\n                                         }\r\n                                         return num;\r\n                                    })\r\n                \r\n                var brush = d3.svg.brush()\r\n                    .x(x2)\r\n                    .on(\"brush\", brushed)\r\n                    .extent([0.95, 0.05]);\r\n\r\n                // define line\r\n                // var line = d3.svg.line()\r\n                //         .interpolate(\"monotone\")\r\n                //         .x(function(d) { return x(d[siteAvgXKey]) })\r\n                //         .y(function(d) { return y(d[siteAvgYKey])    });\r\n\r\n                var line2 = d3.svg.line()\r\n                  .interpolate(\"monotone\")\r\n                  .x(function(d) { return x2(d[siteAvgXKey]) })\r\n                  .y(function(d) { return y2(d[siteAvgYKey]) });\r\n\r\n\r\n                var svg = d3.select(container).select(\"svg\")\r\n                    .attr(\"width\", width + margin.left + margin.right)\r\n                    .attr(\"height\", height + margin.top + margin.bottom);\r\n\r\n                    svg.append(\"defs\")\r\n                    .append(\"clipPath\")\r\n                        .attr(\"id\", clipId)\r\n                      .append(\"rect\")\r\n                        .attr(\"x\", 0)\r\n                        .attr(\"y\", 0)\r\n                        .attr(\"width\", width)\r\n                        .attr(\"height\", height);\r\n\r\n                var focus = svg.append(\"g\")\r\n                    .attr(\"class\", \"focus-cnt\")\r\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n                var focusGraphs = focus.append(\"g\")\r\n                    .attr(\"class\", \"focus-graphs-cnt\")\r\n                    .attr( \"clip-path\", \"url(#\" + clipId + \")\" );\r\n\r\n                var context = svg.append(\"g\")\r\n                    .attr(\"class\", \"context-cnt\")\r\n                    .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\r\n\r\n                if(scope.compressedMode){\r\n                    var labelx = scope.xlabel+\" (last 5 hrs)\";\r\n                    var xAxisLabel = focus.append(\"text\")\r\n                        .attr(\"class\", \"label-text\")\r\n                        .style(\"text-anchor\", \"middle\")\r\n                        .text(labelx)\r\n                        .attr(\"transform\", function() {\r\n                            var trWidth  = width / 2;\r\n                            var trHeight = scope.compressedMode ? (height + 27) : (height + 65);\r\n                            return \"translate(\" + trWidth + \",\" + trHeight + \")\";\r\n                        });\r\n                } else{\r\n                    var labelx = scope.xlabel+\" (last 30 days)\";\r\n                    var xAxisLabel = focus.append(\"text\")\r\n                        .attr(\"class\", \"label-text\")\r\n                        .style(\"text-anchor\", \"middle\")\r\n                        .text(labelx)\r\n                        .attr(\"transform\", function() {\r\n                            var trWidth  = width / 2;\r\n                            var trHeight = scope.compressedMode ? (height + 27) : (height + 145);\r\n                            return \"translate(\" + trWidth + \",\" + trHeight + \")\";\r\n                        });\r\n                }\r\n                \r\n\r\n                var yAxisLabel = svg.append(\"text\")\r\n                    .attr(\"class\", \"label-text\")\r\n                    .attr(\"dy\", \"3em\")\r\n                    .style(\"text-anchor\", \"middle\")\r\n                    .text(scope.ylabel)\r\n                    .attr(\"transform\", function () {\r\n                        var trWidth  = scope.compressedMode ? -20 : -30;\r\n                        var trHeight = height / 2;\r\n                        var rAngle   = -90;\r\n                        return \"translate(\" + trWidth + \",\" + trHeight + \")\"\r\n                                + \"rotate(\" + rAngle + \")\";\r\n                    });\r\n\r\n               \r\n                x.domain(d3.extent(\r\n                    [].concat(\r\n                        scope.tripVals.map(function(d) { \r\n                            return d[siteAvgXKey]; \r\n                        })\r\n                    )\r\n                ));\r\n\r\n                y.domain([0, d3.max(\r\n                    [].concat(\r\n                        scope.tripVals.map(function(d) { return d[siteAvgYKey] }),\r\n                        [scope.bandMax]\r\n                    )\r\n                )]); // +5 to prevent points getting cut\r\n                x2.domain(x.domain());\r\n                y2.domain(y.domain());\r\n\r\n                var tripsGroup = focusGraphs.append(\"g\")\r\n                    .attr(\"class\", \"trips-grp\");\r\n                \r\n                // define line\r\n                var avgLine = d3.svg.line()\r\n                    .interpolate(\"monotone\")\r\n                    .x(function(d) { return x(d[siteAvgXKey]) })\r\n                    .y(function(d) { return y(d[siteAvgYKey]) });\r\n\r\n                var siteAvgLine = tripsGroup.append(\"path\")\r\n                    .datum(scope.tripVals)\r\n                    .attr(\"class\", \"site-avg-line\")\r\n                    .attr(\"d\", avgLine)\r\n                    .attr(\"fill\", \"#4bb3ba\")\r\n\r\n                var totalLength = siteAvgLine.node().getTotalLength();\r\n                var dashing = \"2, 2\";\r\n                // var dashLength = dashing\r\n                //     .split(/[\\s,]/)\r\n                //     .map(function (a) { return parseFloat(a) || 0 })\r\n                //     .reduce(function (a, b) { return a + b });\r\n\r\n                // //How many of these dash patterns will fit inside the entire path?\r\n                // var dashCount = Math.ceil( totalLength / dashLength );\r\n\r\n                // //Create an array that holds the pattern as often so it will fill the entire path\r\n                // var newDashes = new Array(dashCount).join( dashing + \" \" );\r\n                // //Then add one more dash pattern, namely with a visible part of length 0 (so nothing) and a white part\r\n                // //that is the same length as the entire path\r\n                // var dashArray = newDashes + \" 0, \" + totalLength;\r\n\r\n                // siteAvgLine\r\n                //     .attr(\"stroke-dashoffset\", totalLength)\r\n                //         .attr(\"stroke-dasharray\", dashArray)\t//This is where it differs with the solid line example\r\n                //         .transition().duration(2000).ease(\"linear\")\r\n                //         .attr(\"stroke-dashoffset\", 0);\r\n\r\n                             \r\n                focusGraphs.append(\"g\")\r\n                    .selectAll(\"circle\")\r\n                    .data(scope.tripVals)\r\n                    .enter().append(\"circle\")\r\n                    .attr(\"class\", \"trip-circles\")\r\n                    .attr(\"r\", 3.5)\r\n                    .attr(\"cx\", function(d) { return x(d[siteAvgXKey])})\r\n                    .attr(\"cy\", function(d) {return y(d[siteAvgYKey])})\r\n                    .on(\"mouseover\", function(d) {\r\n                        var xVal = d[siteAvgXKey];\r\n                        showHoverNodes(xVal);\r\n                        scope.$apply();\r\n                    })\r\n                    .on(\"mouseout\", function(d) {\r\n                        hideHoverNodes();\r\n                        scope.$apply();\r\n                    })\r\n\r\n                focus.append(\"g\")\r\n                    .attr(\"class\", \"x axis\")\r\n                    .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n                    .call(xAxis)\r\n                    .selectAll(\"text\")\r\n                    .attr(\"y\", 9)\r\n                    .attr(\"x\", 1)\r\n                   \r\n                focus.append(\"g\")   \r\n                    .attr(\"class\", \"y axis\")\r\n                    .call(yAxis);\r\n\r\n                context.append(\"path\")\r\n                    .datum(scope.tripVals)\r\n                    .attr(\"class\", \"mini-arc\")\r\n                    .attr(\"d\", line2);\r\n                \r\n                    \r\n                context.append(\"g\")\r\n                    .attr(\"class\", \"x axis\")\r\n                    .attr(\"transform\", \"translate(0,\" + height2 + \")\")\r\n                    .call(xAxis2);\r\n\r\n                var brushg = context.append(\"g\")\r\n                    .attr(\"class\", \"x brush\")\r\n                    .call(brush)\r\n\r\n                brushg.selectAll(\"rect\")\r\n                    .attr(\"y\", -6)\r\n                    .attr(\"height\", height2 + 7)\r\n\r\n\r\n                // Not working. Disabled temporarily\r\n                // brushed();\r\n\r\n                addHandles();\r\n                addTransparentRects();\r\n\r\n                function addTransparentRects() {\r\n\r\n                    var lRect = brushg.insert(\"rect\", \":first-child\")\r\n                        .attr(\"class\", \"brush-lbgc\")\r\n                        .attr(\"x\",  0)\r\n                        .attr(\"y\", -4)\r\n                        .attr(\"width\", 0.05 * width)\r\n                        .attr(\"height\", height2 + 4)\r\n\r\n                    var rRect = brushg.insert(\"rect\", \":first-child\")\r\n                        .attr(\"class\", \"brush-rbgc\")\r\n                        .attr(\"x\",  0.95 * width)\r\n                        .attr(\"y\", -4)\r\n                        .attr(\"width\", 0.05 * width)\r\n                        .attr(\"height\", height2 + 4)\r\n\r\n                }\r\n\r\n                function brushed() {\r\n\r\n                    x.domain(brush.empty() ? x2.domain() : brush.extent());\r\n\r\n                    var extent = brush.extent();\r\n\r\n                    // x.domain(brush.empty() ? x2.domain() : brush.extent());\r\n                    tripsGroup.selectAll(\".site-avg-line\").attr(\"d\",  avgLine);\r\n                    focus.select(\".x.axis\").call(xAxis);\r\n\r\n                    var lRect = brushg.select(\".brush-lbgc\")\r\n                        .attr(\"width\", x2(extent[0]))\r\n\r\n                    var rRect = brushg.select(\".brush-rbgc\")\r\n                        .attr(\"x\", x2(extent[1]))\r\n                        .attr(\"width\", width - x2(extent[1]))\r\n\r\n                }\r\n\r\n\r\n                function addHandles() {\r\n\r\n                   brushg.selectAll(\".resize\").append(\"line\")\r\n                        .attr(\"x1\", 0)\r\n                        .attr(\"y1\", -4) // 0 isn't working. Find out why later\r\n                        .attr(\"x2\", 0)\r\n                        .attr(\"y2\", height2)\r\n                        .attr(\"stroke\", \"#3A4555\")\r\n                        .attr(\"stroke-width\", 1)\r\n                        .attr(\"fill\", \"#3A4555\")\r\n\r\n                    // Handle width & Handle height\r\n                    var hW = 8, hH = 22;\r\n\r\n                    brushg.selectAll(\".resize\").append(\"rect\")\r\n                        .attr(\"x\", -hW / 2)\r\n                        .attr(\"y\", 0)\r\n                        .attr(\"rx\", hW / 2)\r\n                        .attr(\"ry\", hW / 2)\r\n                        .attr(\"width\", hW)\r\n                        .attr(\"height\", hH)\r\n                        .attr(\"transform\", \"translate(0,\" +  (height2 / 2 - hH / 2) + \")\")\r\n                        .attr(\"stroke\", \"#fff\")\r\n                        .attr(\"stroke-width\", 1)\r\n                        .attr(\"fill\", \"#3A4555\")\r\n\r\n                }\r\n\r\n                var hoverLine = focusGraphs.append(\"line\")\r\n                    .attr(\"class\", \"hover-line\")\r\n                    .style(\"stroke\", \"black\")\r\n                    .attr(\"x1\", 0)\r\n                    .attr(\"y1\", 0)\r\n                    .attr(\"x2\", 0)\r\n                    .attr(\"y2\", height)\r\n                    .classed(\"hide-node\", true);\r\n               \r\n                var siteAvgHoverCircle = focusGraphs.append(\"circle\")\r\n                    .attr(\"class\", \"siteavg-circles-hover\")\r\n                    .attr(\"r\", 3.5)\r\n                    .attr(\"cx\", 0)\r\n                    .attr(\"cy\", 0)\r\n                    .classed(\"hide-node\", true);\r\n\r\n                function showHoverNodes(xVal) {\r\n                    scope.xVal = xVal;\r\n\r\n                    scope.siteAvgY = _.find(scope.tripVals, function(obj) {\r\n                         return obj[siteAvgXKey] === xVal;\r\n                    })[siteAvgYKey];\r\n\r\n                    scope.siteAvgY = parseFloat(scope.siteAvgY).toFixed(2);\r\n                    \r\n                   if(scope.old != scope.siteAvgY){\r\n                        hoverLine.attr(\"transform\", \"translate(\" + x(xVal) + \",0)\");\r\n                        siteAvgHoverCircle.attr(\"transform\", \"translate(\" + x(xVal) + \", \" + y(scope.siteAvgY) + \")\");\r\n\r\n                        var hideHoveLine = (!scope.showTripsAvg && !scope.showSiteAvg && !scope.showTrips) || false;\r\n                        var hideSiteAvgHoverLine = !scope.showTrips || false;\r\n\r\n                        hoverLine.classed(\"hide-node\", hideHoveLine);\r\n                        siteAvgHoverCircle.classed(\"hide-node\", hideSiteAvgHoverLine);\r\n\r\n                        scope.old = scope.siteAvgY;\r\n                   }\r\n                   \r\n\r\n                }\r\n                function hideHoverNodes() {\r\n                    hoverLine.classed(\"hide-node\", true);\r\n                    // tripAvgHoverCircle.classed(\"hide-node\", true);\r\n                    siteAvgHoverCircle.classed(\"hide-node\", true);\r\n                    \r\n                    scope.xVal     = null;\r\n                    scope.tripAvgY = null;\r\n                    scope.tripY    = null;\r\n                    scope.siteAvgY = null;\r\n                }\r\n\r\n                // Checkbox variables\r\n                scope.showTripsAvg = true;\r\n                scope.showTrips = true;\r\n                scope.showOptimalValue = true;\r\n                scope.showSiteAvg = true;\r\n\r\n                // Click Handlers\r\n                scope.toggleTripsAvgGraph = function() {\r\n                    if (scope.showTripsAvg) {\r\n                        d3.select(container).select('.trips-avg-line').classed(\"hide-node\", false);\r\n                    } else {\r\n                        d3.select(container).select('.trips-avg-line').classed(\"hide-node\", true);\r\n                        d3.select(container).select('.tripavg-circles-hover').classed(\"hide-node\", true);\r\n                    }\r\n                };\r\n                scope.toggleTripsGraph = function() {\r\n                    if (scope.showTrips) {\r\n                        d3.select(container).select('.trips-grp').classed(\"hide-node\", false);\r\n                    } else {\r\n                        d3.select(container).select('.trips-grp').classed(\"hide-node\", true);\r\n                    }\r\n                };\r\n                scope.toggleOptimalValueGraph = function() {\r\n                    // if (scope.showOptimalValue) {\r\n                    //     d3.select(container).select('.band-rect').classed(\"hide-node\", false);\r\n                    // } else {\r\n                    //     d3.select(container).select('.band-rect').classed(\"hide-node\", true);\r\n                    // }\r\n                };\r\n                scope.toggleSiteAvgGraph = function() {\r\n                    if (scope.showSiteAvg) {\r\n                        d3.select(container).select('.site-avg-line').classed(\"hide-node\", false);\r\n                    } else {\r\n                        d3.select(container).select('.site-avg-line').classed(\"hide-node\", true);\r\n                        d3.select(container).select('.siteavg-circles-hover').classed(\"hide-node\", true);\r\n                    }\r\n                };\r\n\r\n                // Default display variables at the top of the graph\r\n                // scope.xVal     = scope.tripAvgVals[0][tripsAvgXKey];\r\n                // scope.tripAvgY = scope.tripAvgVals[0][tripsAvgYKey];\r\n                // scope.siteAvgY = scope.tripAvgVals[0][siteAvgYKey];\r\n                // scope.tripY    = scope.tripAvgVals[0][tripsYKey];\r\n\r\n            } // End of render function\r\n        } // End of link function\r\n    }; // End of return object\r\n\r\n}]);\r\n","'use strict';\r\nangular.module('cyient.barcharthoriz', [])\r\n.directive('barChartHoriz', ['$sce', function($sce) {\r\n    return {\r\n        scope: {\r\n            data: \"=\"\r\n        },\r\n        restrict: \"AE\",\r\n        templateUrl: 'directives/barChartHoriz/barcharthoriz.html',\r\n        link: function(scope, elem, attrs) {\r\n\r\n            scope.sumVal = _.sumBy(scope.data, 'val')\r\n\r\n            scope.renderHTML = function(str) {\r\n                return $sce.trustAsHtml(str);;\r\n            }\r\n\r\n        }\r\n    };\r\n}]);\r\n","'use strict';\r\nangular.module('cyient.donut', [])\r\n.directive('donut', [function() {\r\n    return {\r\n        scope: {\r\n            type: '=',\r\n            mode: '=',\r\n            data: '=',\r\n            numVal: '=',\r\n            numLabel: '=',\r\n            totalVal: '=',\r\n            bottomLabel: '=',\r\n            valLabel: '=',\r\n            colorLabel: '='\r\n        },\r\n        restrict: \"AE\",\r\n        link: function(scope, elem, attrs) {\r\n\r\n            var container = elem[0];\r\n\r\n            var width = elem.width(),\r\n                height = elem.width(),\r\n                radius = width / 2;\r\n\r\n            var pie = d3.layout.pie()\r\n                .sort(null)\r\n                .value(function(d) { return d[scope.valLabel] });\r\n\r\n            var arc = d3.svg.arc()\r\n                .innerRadius(radius - 10)\r\n                .outerRadius(radius);\r\n\r\n            var svg = d3.select(container).append(\"svg\")\r\n                .attr(\"width\", width)\r\n                .attr(\"height\", height)\r\n                .append(\"g\")\r\n\t\t\t\t.attr(\"class\", function() {\r\n\t\t\t\t\tif (radius < 50) {\r\n\t\t\t\t\t\treturn \"small-donut\";\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n                .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\r\n\r\n            var path = svg.selectAll(\"path\")\r\n                .data(pie(scope.data))\r\n              .enter().append(\"path\")\r\n                .attr(\"fill\", function(d) { return d.data[scope.colorLabel] })\r\n                .attr(\"d\", arc)\r\n                .transition()\r\n                .duration(1500)\r\n                .attrTween('d', function(d) {\r\n                   var i = d3.interpolate(d.startAngle+0.1, d.endAngle);\r\n                   return function(t) {\r\n                       d.endAngle = i(t);\r\n                     return arc(d);\r\n                   }\r\n                });\r\n\r\n            if (scope.type === 'type1') {\r\n                var textGroup = svg.append(\"g\")\r\n                    .attr(\"text-anchor\", \"middle\")\r\n                    .attr(\"transform\", \"translate(0, 15)\")\r\n                if (scope.mode === 'small') {\r\n                    textGroup.append(\"text\")\r\n                        .attr(\"transform\", \"translate(0, -16)\")\r\n                        .attr(\"fill\", \"#2aaef9\")\r\n                        .attr(\"font-family\", \"OpenSansSemiBold\")\r\n                        .attr(\"font-size\", 20)\r\n                        .text(scope.numVal);\r\n                    textGroup.append(\"line\")\r\n                        .attr(\"shape-rendering\", \"crispEdges\")\r\n                        .attr(\"stroke-width\", \"1\")\r\n                        .attr(\"stroke\", \"#72787e\")\r\n                    \t.attr(\"x1\", -10)\r\n                    \t.attr(\"y1\", 0)\r\n                    \t.attr(\"x2\", 10)\r\n                    \t.attr(\"y2\", 0)\r\n                    \t.attr(\"transform\", \"translate(0, -12)\")\r\n                    textGroup.append(\"text\")\r\n                        .attr(\"font-size\", 10)\r\n                        .text(scope.totalVal);\r\n                } else if (scope.mode === 'big') {\r\n                    var upperGroup = textGroup.append(\"g\")\r\n                        .attr(\"transform\", \"translate(0, -25)\");\r\n                    upperGroup.append(\"text\")\r\n                        .attr(\"transform\", \"translate(0, 5)\")\r\n                    \t.attr(\"font-family\", \"OpenSansSemiBold\")\r\n                        .attr(\"fill\", \"#2aaef9\")\r\n                        .attr(\"font-size\", 35)\r\n                        .text(scope.numVal);\r\n                    // upperGroup.append(\"line\")\r\n                    //     .attr(\"stroke-width\", \"1\")\r\n                    // \t.attr(\"fill\", \"#000\")\r\n                    // \t.attr(\"x1\", -10)\r\n                    // \t.attr(\"y1\", 0)\r\n                    // \t.attr(\"x2\", 10)\r\n                    // \t.attr(\"y2\", 0)\r\n                    // \t.attr(\"transform\", \"translate(0, -15)\")\r\n                    // upperGroup.append(\"text\")\r\n                    //     .text(\"343\");\r\n                    textGroup.append(\"text\")\r\n                        .attr(\"font-size\", \"12\")\r\n                        .text(scope.totalVal + \" across site\");\r\n                }\r\n            } else if (scope.type === 'type2'){\r\n                var textGroup = svg.append(\"g\")\r\n                    .attr(\"text-anchor\", \"middle\")\r\n                    .attr(\"transform\", \"translate(0, 8)\")\r\n                textGroup.append(\"text\")\r\n                    .attr(\"class\", \"overload-text\")\r\n                    .text(scope.numVal)\r\n            }\r\n\r\n            // var textGroup = svg.append(\"g\")\r\n            //     .attr(\"transform\", \"translate(0, 15)\");\r\n//\t\t\t\t.attr(\"transform\", function() {\r\n//\t\t\t\t\tif(radius < 50) {\r\n//\t\t\t\t\t\treturn \"translate(0, 15)\";\r\n//\t\t\t\t\t} else {\r\n//\t\t\t\t\t\treturn \"translate(0, 20)\"\r\n//\t\t\t\t\t}\r\n//\t\t\t\t});\r\n\r\n            // var upperText = textGroup.append(\"g\")\r\n            //     .attr(\"class\", \"upper-text\")\r\n            //     .attr(\"text-anchor\", \"middle\")\r\n            //     .attr(\"transform\", \"translate(0, -20)\")\r\n\r\n            // upperText.append(\"text\")\r\n            //     .attr(\"class\", \"upper-left-text\")\r\n            //     .attr(\"transform\", \"translate(0, 5)\")\r\n            //     // .attr(\"text-anchor\", \"end\")\r\n            //     .text(scope.numVal)\r\n            // upperText.append(\"text\")\r\n            //     .attr(\"class\", \"upper-right-text\")\r\n            //     // .attr(\"text-anchor\", \"start\")\r\n// //                .attr(\"transform\", \"translate(0, 20)\")\r\n\t\t\t\t// .attr(\"transform\", function() {\r\n\t\t\t\t\t// if(radius < 50) {\r\n\t\t\t\t\t\t// return \"translate(0, 20)\";\r\n\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t// return \"translate(0, 25)\"\r\n\t\t\t\t\t// }\r\n\t\t\t\t// })\r\n            //     .text(scope.numLabel);\r\n\r\n//            var lowerText = textGroup.append(\"text\")\r\n//                .attr(\"class\", \"lower-text\")\r\n//                .attr(\"text-anchor\", \"middle\")\r\n//                .text(scope.bottomLabel);\r\n\r\n        }\r\n    };\r\n}]);\r\n","'use strict';\r\nangular.module(\"cyient.dropdown\", ['angular-click-outside'])\r\n.directive(\"dropdown\", [function() {\r\n    return {\r\n        scope: {\r\n            tabs: \"=\",\r\n            numAllTrucks: \"=\",\r\n            numCriticalTrucks: \"=\",\r\n            numStableTrucks: \"=\",\r\n            numGoodTrucks: \"=\",\r\n            onCategoryChange: \"&\"\r\n        },\r\n        restrict: \"AE\",\r\n        templateUrl: \"directives/dropdown/dropdown.html\",\r\n        link: function(scope, elem, attrs) {\r\n\r\n            scope.$watch('tabs', function(newVal, oldVal) {\r\n\r\n                if (scope.tabs.activeTab === 'All') {\r\n                    scope.category = \"all\";\r\n                    scope.numTrucks = scope.numAllTrucks;\r\n                } else if (scope.tabs.activeTab === 'critical') {\r\n                    scope.category = \"critical\";\r\n                    scope.numTrucks = scope.numCriticalTrucks;\r\n                } else if (scope.tabs.activeTab === 'monitor') {\r\n                    scope.category = \"stable\";\r\n                    scope.numTrucks = scope.numStableTrucks;\r\n                } else if (scope.tabs.activeTab === 'good') {\r\n                    scope.category = \"good\";\r\n                    scope.numTrucks = scope.numGoodTrucks;\r\n                }\r\n                \r\n            }, true);\r\n\r\n            scope.hideMenu = true;\r\n\r\n            scope.selectCategory = function(category) {\r\n                scope.category = category;\r\n                switch (scope.category) {\r\n                    case \"all\":\r\n                        scope.numTrucks = scope.numAllTrucks;\r\n                        scope.category = \"all\";\r\n                        scope.onCategoryChange({clickedCategory: \"All Trucks\"});\r\n                        break;\r\n                    case \"critical\":\r\n                        scope.numTrucks = scope.numCriticalTrucks;\r\n                        scope.category = \"critical\";\r\n                        scope.onCategoryChange({clickedCategory: \"Critical\"});\r\n                        break;\r\n                    case \"stable\":\r\n                        scope.numTrucks = scope.numStableTrucks;\r\n                        scope.category = \"stable\";\r\n                        scope.onCategoryChange({clickedCategory: \"Stable\"});\r\n                        break;\r\n                    case \"good\":\r\n                        scope.numTrucks = scope.numGoodTrucks;\r\n                        scope.category = \"good\";\r\n                        scope.onCategoryChange({clickedCategory: \"Good\"});\r\n                        break;\r\n                }\r\n            };\r\n\r\n            scope.toggleDropDown = function($event) {\r\n                $event.stopPropagation();\r\n                scope.hideMenu = !scope.hideMenu;\r\n            }\r\n\r\n            scope.closeDropDown = function() {\r\n                scope.hideMenu = true;\r\n            }\r\n            \r\n        } // End of Link function\r\n    }; // End of return object\r\n}]); // End of directive\r\n","'use strict';\r\nangular.module('cyient.fixedsidebar', [])\r\n.directive('fixedSidebar', ['$timeout', '$window', function($timeout, $window) {\r\n    return {\r\n        scope: {\r\n            fixedSidebar: \"=\"\r\n        },\r\n        restrict: \"A\",\r\n        link: function(scope, elem, attrs) {\r\n\r\n            scope.$watch('fixedSidebar', function(newVal, oldVal) {\r\n                $timeout(function() {\r\n                    reAdjust();\r\n                }, 1000)\r\n            });\r\n\r\n            angular.element($window).bind('resize', function(){\r\n                reAdjust();\r\n                scope.$digest();\r\n            });\r\n\r\n            function reAdjust() {\r\n                if (elem.hasClass('active')) {\r\n                    var parent = elem.parent();\r\n                    elem.css('left', parent.position().left );\r\n                }\r\n            }\r\n\r\n        }\r\n    };\r\n}]);\r\n","/*\r\n * angular-ui-bootstrap dropdown\r\n * http://angular-ui.github.io/bootstrap/\r\n * Version: 1.3.3 - 2016-05-22\r\n * License: MIT\r\n */\r\nangular.module('ui.bootstrap.dropdown', ['ui.bootstrap.position'])\r\n\r\n.constant('uibDropdownConfig', {\r\n  appendToOpenClass: 'uib-dropdown-open',\r\n  openClass: 'open'\r\n})\r\n\r\n.service('uibDropdownService', ['$document', '$rootScope', function($document, $rootScope) {\r\n  var openScope = null;\r\n\r\n  this.open = function(dropdownScope, element) {\r\n    if (!openScope) {\r\n      $document.on('click', closeDropdown);\r\n      element.on('keydown', keybindFilter);\r\n    }\r\n\r\n    if (openScope && openScope !== dropdownScope) {\r\n      openScope.isOpen = false;\r\n    }\r\n\r\n    openScope = dropdownScope;\r\n  };\r\n\r\n  this.close = function(dropdownScope, element) {\r\n    if (openScope === dropdownScope) {\r\n      openScope = null;\r\n      $document.off('click', closeDropdown);\r\n      element.off('keydown', keybindFilter);\r\n    }\r\n  };\r\n\r\n  var closeDropdown = function(evt) {\r\n    // This method may still be called during the same mouse event that\r\n    // unbound this event handler. So check openScope before proceeding.\r\n    if (!openScope) { return; }\r\n\r\n    if (evt && openScope.getAutoClose() === 'disabled') { return; }\r\n\r\n    if (evt && evt.which === 3) { return; }\r\n\r\n    var toggleElement = openScope.getToggleElement();\r\n    if (evt && toggleElement && toggleElement[0].contains(evt.target)) {\r\n      return;\r\n    }\r\n\r\n    var dropdownElement = openScope.getDropdownElement();\r\n    if (evt && openScope.getAutoClose() === 'outsideClick' &&\r\n      dropdownElement && dropdownElement[0].contains(evt.target)) {\r\n      return;\r\n    }\r\n\r\n    openScope.isOpen = false;\r\n    openScope.focusToggleElement();\r\n\r\n    if (!$rootScope.$$phase) {\r\n      openScope.$apply();\r\n    }\r\n  };\r\n\r\n  var keybindFilter = function(evt) {\r\n    if (evt.which === 27) {\r\n      evt.stopPropagation();\r\n      openScope.focusToggleElement();\r\n      closeDropdown();\r\n    } else if (openScope.isKeynavEnabled() && [38, 40].indexOf(evt.which) !== -1 && openScope.isOpen) {\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n      openScope.focusDropdownEntry(evt.which);\r\n    }\r\n  };\r\n}])\r\n\r\n.controller('UibDropdownController', ['$scope', '$element', '$attrs', '$parse', 'uibDropdownConfig', 'uibDropdownService', '$animate', '$uibPosition', '$document', '$compile', '$templateRequest', function($scope, $element, $attrs, $parse, dropdownConfig, uibDropdownService, $animate, $position, $document, $compile, $templateRequest) {\r\n  var self = this,\r\n    scope = $scope.$new(), // create a child scope so we are not polluting original one\r\n    templateScope,\r\n    appendToOpenClass = dropdownConfig.appendToOpenClass,\r\n    openClass = dropdownConfig.openClass,\r\n    getIsOpen,\r\n    setIsOpen = angular.noop,\r\n    toggleInvoker = $attrs.onToggle ? $parse($attrs.onToggle) : angular.noop,\r\n    appendToBody = false,\r\n    appendTo = null,\r\n    keynavEnabled = false,\r\n    selectedOption = null,\r\n    body = $document.find('body');\r\n\r\n  $element.addClass('dropdown');\r\n\r\n  this.init = function() {\r\n    if ($attrs.isOpen) {\r\n      getIsOpen = $parse($attrs.isOpen);\r\n      setIsOpen = getIsOpen.assign;\r\n\r\n      $scope.$watch(getIsOpen, function(value) {\r\n        scope.isOpen = !!value;\r\n      });\r\n    }\r\n\r\n    if (angular.isDefined($attrs.dropdownAppendTo)) {\r\n      var appendToEl = $parse($attrs.dropdownAppendTo)(scope);\r\n      if (appendToEl) {\r\n        appendTo = angular.element(appendToEl);\r\n      }\r\n    }\r\n\r\n    appendToBody = angular.isDefined($attrs.dropdownAppendToBody);\r\n    keynavEnabled = angular.isDefined($attrs.keyboardNav);\r\n\r\n    if (appendToBody && !appendTo) {\r\n      appendTo = body;\r\n    }\r\n\r\n    if (appendTo && self.dropdownMenu) {\r\n      appendTo.append(self.dropdownMenu);\r\n      $element.on('$destroy', function handleDestroyEvent() {\r\n        self.dropdownMenu.remove();\r\n      });\r\n    }\r\n  };\r\n\r\n  this.toggle = function(open) {\r\n    scope.isOpen = arguments.length ? !!open : !scope.isOpen;\r\n    if (angular.isFunction(setIsOpen)) {\r\n      setIsOpen(scope, scope.isOpen);\r\n    }\r\n\r\n    return scope.isOpen;\r\n  };\r\n\r\n  // Allow other directives to watch status\r\n  this.isOpen = function() {\r\n    return scope.isOpen;\r\n  };\r\n\r\n  scope.getToggleElement = function() {\r\n    return self.toggleElement;\r\n  };\r\n\r\n  scope.getAutoClose = function() {\r\n    return $attrs.autoClose || 'always'; //or 'outsideClick' or 'disabled'\r\n  };\r\n\r\n  scope.getElement = function() {\r\n    return $element;\r\n  };\r\n\r\n  scope.isKeynavEnabled = function() {\r\n    return keynavEnabled;\r\n  };\r\n\r\n  scope.focusDropdownEntry = function(keyCode) {\r\n    var elems = self.dropdownMenu ? //If append to body is used.\r\n      angular.element(self.dropdownMenu).find('a') :\r\n      $element.find('ul').eq(0).find('a');\r\n\r\n    switch (keyCode) {\r\n      case 40: {\r\n        if (!angular.isNumber(self.selectedOption)) {\r\n          self.selectedOption = 0;\r\n        } else {\r\n          self.selectedOption = self.selectedOption === elems.length - 1 ?\r\n            self.selectedOption :\r\n            self.selectedOption + 1;\r\n        }\r\n        break;\r\n      }\r\n      case 38: {\r\n        if (!angular.isNumber(self.selectedOption)) {\r\n          self.selectedOption = elems.length - 1;\r\n        } else {\r\n          self.selectedOption = self.selectedOption === 0 ?\r\n            0 : self.selectedOption - 1;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    elems[self.selectedOption].focus();\r\n  };\r\n\r\n  scope.getDropdownElement = function() {\r\n    return self.dropdownMenu;\r\n  };\r\n\r\n  scope.focusToggleElement = function() {\r\n    if (self.toggleElement) {\r\n      self.toggleElement[0].focus();\r\n    }\r\n  };\r\n\r\n  scope.$watch('isOpen', function(isOpen, wasOpen) {\r\n    if (appendTo && self.dropdownMenu) {\r\n      var pos = $position.positionElements($element, self.dropdownMenu, 'bottom-left', true),\r\n        css,\r\n        rightalign,\r\n        scrollbarWidth;\r\n\r\n      css = {\r\n        top: pos.top + 'px',\r\n        display: isOpen ? 'block' : 'none'\r\n      };\r\n\r\n      rightalign = self.dropdownMenu.hasClass('dropdown-menu-right');\r\n      if (!rightalign) {\r\n        css.left = pos.left + 'px';\r\n        css.right = 'auto';\r\n      } else {\r\n        css.left = 'auto';\r\n        scrollbarWidth = $position.scrollbarWidth(true);\r\n        css.right = window.innerWidth - scrollbarWidth -\r\n          (pos.left + $element.prop('offsetWidth')) + 'px';\r\n      }\r\n\r\n      // Need to adjust our positioning to be relative to the appendTo container\r\n      // if it's not the body element\r\n      if (!appendToBody) {\r\n        var appendOffset = $position.offset(appendTo);\r\n\r\n        css.top = pos.top - appendOffset.top + 'px';\r\n\r\n        if (!rightalign) {\r\n          css.left = pos.left - appendOffset.left + 'px';\r\n        } else {\r\n          css.right = window.innerWidth -\r\n            (pos.left - appendOffset.left + $element.prop('offsetWidth')) + 'px';\r\n        }\r\n      }\r\n\r\n      self.dropdownMenu.css(css);\r\n    }\r\n\r\n    var openContainer = appendTo ? appendTo : $element;\r\n    var hasOpenClass = openContainer.hasClass(appendTo ? appendToOpenClass : openClass);\r\n\r\n    if (hasOpenClass === !isOpen) {\r\n      $animate[isOpen ? 'addClass' : 'removeClass'](openContainer, appendTo ? appendToOpenClass : openClass).then(function() {\r\n        if (angular.isDefined(isOpen) && isOpen !== wasOpen) {\r\n          toggleInvoker($scope, { open: !!isOpen });\r\n        }\r\n      });\r\n    }\r\n\r\n    if (isOpen) {\r\n      if (self.dropdownMenuTemplateUrl) {\r\n        $templateRequest(self.dropdownMenuTemplateUrl).then(function(tplContent) {\r\n          templateScope = scope.$new();\r\n          $compile(tplContent.trim())(templateScope, function(dropdownElement) {\r\n            var newEl = dropdownElement;\r\n            self.dropdownMenu.replaceWith(newEl);\r\n            self.dropdownMenu = newEl;\r\n          });\r\n        });\r\n      }\r\n\r\n      scope.focusToggleElement();\r\n      uibDropdownService.open(scope, $element);\r\n    } else {\r\n      if (self.dropdownMenuTemplateUrl) {\r\n        if (templateScope) {\r\n          templateScope.$destroy();\r\n        }\r\n        var newEl = angular.element('<ul class=\"dropdown-menu\"></ul>');\r\n        self.dropdownMenu.replaceWith(newEl);\r\n        self.dropdownMenu = newEl;\r\n      }\r\n\r\n      uibDropdownService.close(scope, $element);\r\n      self.selectedOption = null;\r\n    }\r\n\r\n    if (angular.isFunction(setIsOpen)) {\r\n      setIsOpen($scope, isOpen);\r\n    }\r\n  });\r\n}])\r\n\r\n.directive('uibDropdown', function() {\r\n  return {\r\n    controller: 'UibDropdownController',\r\n    link: function(scope, element, attrs, dropdownCtrl) {\r\n      dropdownCtrl.init();\r\n    }\r\n  };\r\n})\r\n\r\n.directive('uibDropdownMenu', function() {\r\n  return {\r\n    restrict: 'A',\r\n    require: '?^uibDropdown',\r\n    link: function(scope, element, attrs, dropdownCtrl) {\r\n      if (!dropdownCtrl || angular.isDefined(attrs.dropdownNested)) {\r\n        return;\r\n      }\r\n\r\n      element.addClass('dropdown-menu');\r\n\r\n      var tplUrl = attrs.templateUrl;\r\n      if (tplUrl) {\r\n        dropdownCtrl.dropdownMenuTemplateUrl = tplUrl;\r\n      }\r\n\r\n      if (!dropdownCtrl.dropdownMenu) {\r\n        dropdownCtrl.dropdownMenu = element;\r\n      }\r\n    }\r\n  };\r\n})\r\n\r\n.directive('uibDropdownToggle', function() {\r\n  return {\r\n    require: '?^uibDropdown',\r\n    link: function(scope, element, attrs, dropdownCtrl) {\r\n      if (!dropdownCtrl) {\r\n        return;\r\n      }\r\n\r\n      element.addClass('dropdown-toggle');\r\n\r\n      dropdownCtrl.toggleElement = element;\r\n\r\n      var toggleDropdown = function(event) {\r\n        event.preventDefault();\r\n\r\n        if (!element.hasClass('disabled') && !attrs.disabled) {\r\n          scope.$apply(function() {\r\n            dropdownCtrl.toggle();\r\n          });\r\n        }\r\n      };\r\n\r\n      element.bind('click', toggleDropdown);\r\n\r\n      // WAI-ARIA\r\n      element.attr({ 'aria-haspopup': true, 'aria-expanded': false });\r\n      scope.$watch(dropdownCtrl.isOpen, function(isOpen) {\r\n        element.attr('aria-expanded', !!isOpen);\r\n      });\r\n\r\n      scope.$on('$destroy', function() {\r\n        element.unbind('click', toggleDropdown);\r\n      });\r\n    }\r\n  };\r\n});\r\n","angular.module('ui.bootstrap.position', [])\r\n\r\n/**\r\n * A set of utility methods for working with the DOM.\r\n * It is meant to be used where we need to absolute-position elements in\r\n * relation to another element (this is the case for tooltips, popovers,\r\n * typeahead suggestions etc.).\r\n */\r\n  .factory('$uibPosition', ['$document', '$window', function($document, $window) {\r\n    /**\r\n     * Used by scrollbarWidth() function to cache scrollbar's width.\r\n     * Do not access this variable directly, use scrollbarWidth() instead.\r\n     */\r\n    var SCROLLBAR_WIDTH;\r\n    /**\r\n     * scrollbar on body and html element in IE and Edge overlay\r\n     * content and should be considered 0 width.\r\n     */\r\n    var BODY_SCROLLBAR_WIDTH;\r\n    var OVERFLOW_REGEX = {\r\n      normal: /(auto|scroll)/,\r\n      hidden: /(auto|scroll|hidden)/\r\n    };\r\n    var PLACEMENT_REGEX = {\r\n      auto: /\\s?auto?\\s?/i,\r\n      primary: /^(top|bottom|left|right)$/,\r\n      secondary: /^(top|bottom|left|right|center)$/,\r\n      vertical: /^(top|bottom)$/\r\n    };\r\n    var BODY_REGEX = /(HTML|BODY)/;\r\n\r\n    return {\r\n\r\n      /**\r\n       * Provides a raw DOM element from a jQuery/jQLite element.\r\n       *\r\n       * @param {element} elem - The element to convert.\r\n       *\r\n       * @returns {element} A HTML element.\r\n       */\r\n      getRawNode: function(elem) {\r\n        return elem.nodeName ? elem : elem[0] || elem;\r\n      },\r\n\r\n      /**\r\n       * Provides a parsed number for a style property.  Strips\r\n       * units and casts invalid numbers to 0.\r\n       *\r\n       * @param {string} value - The style value to parse.\r\n       *\r\n       * @returns {number} A valid number.\r\n       */\r\n      parseStyle: function(value) {\r\n        value = parseFloat(value);\r\n        return isFinite(value) ? value : 0;\r\n      },\r\n\r\n      /**\r\n       * Provides the closest positioned ancestor.\r\n       *\r\n       * @param {element} element - The element to get the offest parent for.\r\n       *\r\n       * @returns {element} The closest positioned ancestor.\r\n       */\r\n      offsetParent: function(elem) {\r\n        elem = this.getRawNode(elem);\r\n\r\n        var offsetParent = elem.offsetParent || $document[0].documentElement;\r\n\r\n        function isStaticPositioned(el) {\r\n          return ($window.getComputedStyle(el).position || 'static') === 'static';\r\n        }\r\n\r\n        while (offsetParent && offsetParent !== $document[0].documentElement && isStaticPositioned(offsetParent)) {\r\n          offsetParent = offsetParent.offsetParent;\r\n        }\r\n\r\n        return offsetParent || $document[0].documentElement;\r\n      },\r\n\r\n      /**\r\n       * Provides the scrollbar width, concept from TWBS measureScrollbar()\r\n       * function in https://github.com/twbs/bootstrap/blob/master/js/modal.js\r\n       * In IE and Edge, scollbar on body and html element overlay and should\r\n       * return a width of 0.\r\n       *\r\n       * @returns {number} The width of the browser scollbar.\r\n       */\r\n      scrollbarWidth: function(isBody) {\r\n        if (isBody) {\r\n          if (angular.isUndefined(BODY_SCROLLBAR_WIDTH)) {\r\n            var bodyElem = $document.find('body');\r\n            bodyElem.addClass('uib-position-body-scrollbar-measure');\r\n            BODY_SCROLLBAR_WIDTH = $window.innerWidth - bodyElem[0].clientWidth;\r\n            BODY_SCROLLBAR_WIDTH = isFinite(BODY_SCROLLBAR_WIDTH) ? BODY_SCROLLBAR_WIDTH : 0;\r\n            bodyElem.removeClass('uib-position-body-scrollbar-measure');\r\n          }\r\n          return BODY_SCROLLBAR_WIDTH;\r\n        }\r\n\r\n        if (angular.isUndefined(SCROLLBAR_WIDTH)) {\r\n          var scrollElem = angular.element('<div class=\"uib-position-scrollbar-measure\"></div>');\r\n          $document.find('body').append(scrollElem);\r\n          SCROLLBAR_WIDTH = scrollElem[0].offsetWidth - scrollElem[0].clientWidth;\r\n          SCROLLBAR_WIDTH = isFinite(SCROLLBAR_WIDTH) ? SCROLLBAR_WIDTH : 0;\r\n          scrollElem.remove();\r\n        }\r\n\r\n        return SCROLLBAR_WIDTH;\r\n      },\r\n\r\n      /**\r\n       * Provides the padding required on an element to replace the scrollbar.\r\n       *\r\n       * @returns {object} An object with the following properties:\r\n       *   <ul>\r\n       *     <li>**scrollbarWidth**: the width of the scrollbar</li>\r\n       *     <li>**widthOverflow**: whether the the width is overflowing</li>\r\n       *     <li>**right**: the amount of right padding on the element needed to replace the scrollbar</li>\r\n       *     <li>**rightOriginal**: the amount of right padding currently on the element</li>\r\n       *     <li>**heightOverflow**: whether the the height is overflowing</li>\r\n       *     <li>**bottom**: the amount of bottom padding on the element needed to replace the scrollbar</li>\r\n       *     <li>**bottomOriginal**: the amount of bottom padding currently on the element</li>\r\n       *   </ul>\r\n       */\r\n      scrollbarPadding: function(elem) {\r\n        elem = this.getRawNode(elem);\r\n\r\n        var elemStyle = $window.getComputedStyle(elem);\r\n        var paddingRight = this.parseStyle(elemStyle.paddingRight);\r\n        var paddingBottom = this.parseStyle(elemStyle.paddingBottom);\r\n        var scrollParent = this.scrollParent(elem, false, true);\r\n        var scrollbarWidth = this.scrollbarWidth(scrollParent, BODY_REGEX.test(scrollParent.tagName));\r\n\r\n        return {\r\n          scrollbarWidth: scrollbarWidth,\r\n          widthOverflow: scrollParent.scrollWidth > scrollParent.clientWidth,\r\n          right: paddingRight + scrollbarWidth,\r\n          originalRight: paddingRight,\r\n          heightOverflow: scrollParent.scrollHeight > scrollParent.clientHeight,\r\n          bottom: paddingBottom + scrollbarWidth,\r\n          originalBottom: paddingBottom\r\n         };\r\n      },\r\n\r\n      /**\r\n       * Checks to see if the element is scrollable.\r\n       *\r\n       * @param {element} elem - The element to check.\r\n       * @param {boolean=} [includeHidden=false] - Should scroll style of 'hidden' be considered,\r\n       *   default is false.\r\n       *\r\n       * @returns {boolean} Whether the element is scrollable.\r\n       */\r\n      isScrollable: function(elem, includeHidden) {\r\n        elem = this.getRawNode(elem);\r\n\r\n        var overflowRegex = includeHidden ? OVERFLOW_REGEX.hidden : OVERFLOW_REGEX.normal;\r\n        var elemStyle = $window.getComputedStyle(elem);\r\n        return overflowRegex.test(elemStyle.overflow + elemStyle.overflowY + elemStyle.overflowX);\r\n      },\r\n\r\n      /**\r\n       * Provides the closest scrollable ancestor.\r\n       * A port of the jQuery UI scrollParent method:\r\n       * https://github.com/jquery/jquery-ui/blob/master/ui/scroll-parent.js\r\n       *\r\n       * @param {element} elem - The element to find the scroll parent of.\r\n       * @param {boolean=} [includeHidden=false] - Should scroll style of 'hidden' be considered,\r\n       *   default is false.\r\n       * @param {boolean=} [includeSelf=false] - Should the element being passed be\r\n       * included in the scrollable llokup.\r\n       *\r\n       * @returns {element} A HTML element.\r\n       */\r\n      scrollParent: function(elem, includeHidden, includeSelf) {\r\n        elem = this.getRawNode(elem);\r\n\r\n        var overflowRegex = includeHidden ? OVERFLOW_REGEX.hidden : OVERFLOW_REGEX.normal;\r\n        var documentEl = $document[0].documentElement;\r\n        var elemStyle = $window.getComputedStyle(elem);\r\n        if (includeSelf && overflowRegex.test(elemStyle.overflow + elemStyle.overflowY + elemStyle.overflowX)) {\r\n          return elem;\r\n        }\r\n        var excludeStatic = elemStyle.position === 'absolute';\r\n        var scrollParent = elem.parentElement || documentEl;\r\n\r\n        if (scrollParent === documentEl || elemStyle.position === 'fixed') {\r\n          return documentEl;\r\n        }\r\n\r\n        while (scrollParent.parentElement && scrollParent !== documentEl) {\r\n          var spStyle = $window.getComputedStyle(scrollParent);\r\n          if (excludeStatic && spStyle.position !== 'static') {\r\n            excludeStatic = false;\r\n          }\r\n\r\n          if (!excludeStatic && overflowRegex.test(spStyle.overflow + spStyle.overflowY + spStyle.overflowX)) {\r\n            break;\r\n          }\r\n          scrollParent = scrollParent.parentElement;\r\n        }\r\n\r\n        return scrollParent;\r\n      },\r\n\r\n      /**\r\n       * Provides read-only equivalent of jQuery's position function:\r\n       * http://api.jquery.com/position/ - distance to closest positioned\r\n       * ancestor.  Does not account for margins by default like jQuery position.\r\n       *\r\n       * @param {element} elem - The element to caclulate the position on.\r\n       * @param {boolean=} [includeMargins=false] - Should margins be accounted\r\n       * for, default is false.\r\n       *\r\n       * @returns {object} An object with the following properties:\r\n       *   <ul>\r\n       *     <li>**width**: the width of the element</li>\r\n       *     <li>**height**: the height of the element</li>\r\n       *     <li>**top**: distance to top edge of offset parent</li>\r\n       *     <li>**left**: distance to left edge of offset parent</li>\r\n       *   </ul>\r\n       */\r\n      position: function(elem, includeMagins) {\r\n        elem = this.getRawNode(elem);\r\n\r\n        var elemOffset = this.offset(elem);\r\n        if (includeMagins) {\r\n          var elemStyle = $window.getComputedStyle(elem);\r\n          elemOffset.top -= this.parseStyle(elemStyle.marginTop);\r\n          elemOffset.left -= this.parseStyle(elemStyle.marginLeft);\r\n        }\r\n        var parent = this.offsetParent(elem);\r\n        var parentOffset = {top: 0, left: 0};\r\n\r\n        if (parent !== $document[0].documentElement) {\r\n          parentOffset = this.offset(parent);\r\n          parentOffset.top += parent.clientTop - parent.scrollTop;\r\n          parentOffset.left += parent.clientLeft - parent.scrollLeft;\r\n        }\r\n\r\n        return {\r\n          width: Math.round(angular.isNumber(elemOffset.width) ? elemOffset.width : elem.offsetWidth),\r\n          height: Math.round(angular.isNumber(elemOffset.height) ? elemOffset.height : elem.offsetHeight),\r\n          top: Math.round(elemOffset.top - parentOffset.top),\r\n          left: Math.round(elemOffset.left - parentOffset.left)\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Provides read-only equivalent of jQuery's offset function:\r\n       * http://api.jquery.com/offset/ - distance to viewport.  Does\r\n       * not account for borders, margins, or padding on the body\r\n       * element.\r\n       *\r\n       * @param {element} elem - The element to calculate the offset on.\r\n       *\r\n       * @returns {object} An object with the following properties:\r\n       *   <ul>\r\n       *     <li>**width**: the width of the element</li>\r\n       *     <li>**height**: the height of the element</li>\r\n       *     <li>**top**: distance to top edge of viewport</li>\r\n       *     <li>**right**: distance to bottom edge of viewport</li>\r\n       *   </ul>\r\n       */\r\n      offset: function(elem) {\r\n        elem = this.getRawNode(elem);\r\n\r\n        var elemBCR = elem.getBoundingClientRect();\r\n        return {\r\n          width: Math.round(angular.isNumber(elemBCR.width) ? elemBCR.width : elem.offsetWidth),\r\n          height: Math.round(angular.isNumber(elemBCR.height) ? elemBCR.height : elem.offsetHeight),\r\n          top: Math.round(elemBCR.top + ($window.pageYOffset || $document[0].documentElement.scrollTop)),\r\n          left: Math.round(elemBCR.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft))\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Provides offset distance to the closest scrollable ancestor\r\n       * or viewport.  Accounts for border and scrollbar width.\r\n       *\r\n       * Right and bottom dimensions represent the distance to the\r\n       * respective edge of the viewport element.  If the element\r\n       * edge extends beyond the viewport, a negative value will be\r\n       * reported.\r\n       *\r\n       * @param {element} elem - The element to get the viewport offset for.\r\n       * @param {boolean=} [useDocument=false] - Should the viewport be the document element instead\r\n       * of the first scrollable element, default is false.\r\n       * @param {boolean=} [includePadding=true] - Should the padding on the offset parent element\r\n       * be accounted for, default is true.\r\n       *\r\n       * @returns {object} An object with the following properties:\r\n       *   <ul>\r\n       *     <li>**top**: distance to the top content edge of viewport element</li>\r\n       *     <li>**bottom**: distance to the bottom content edge of viewport element</li>\r\n       *     <li>**left**: distance to the left content edge of viewport element</li>\r\n       *     <li>**right**: distance to the right content edge of viewport element</li>\r\n       *   </ul>\r\n       */\r\n      viewportOffset: function(elem, useDocument, includePadding) {\r\n        elem = this.getRawNode(elem);\r\n        includePadding = includePadding !== false ? true : false;\r\n\r\n        var elemBCR = elem.getBoundingClientRect();\r\n        var offsetBCR = {top: 0, left: 0, bottom: 0, right: 0};\r\n\r\n        var offsetParent = useDocument ? $document[0].documentElement : this.scrollParent(elem);\r\n        var offsetParentBCR = offsetParent.getBoundingClientRect();\r\n\r\n        offsetBCR.top = offsetParentBCR.top + offsetParent.clientTop;\r\n        offsetBCR.left = offsetParentBCR.left + offsetParent.clientLeft;\r\n        if (offsetParent === $document[0].documentElement) {\r\n          offsetBCR.top += $window.pageYOffset;\r\n          offsetBCR.left += $window.pageXOffset;\r\n        }\r\n        offsetBCR.bottom = offsetBCR.top + offsetParent.clientHeight;\r\n        offsetBCR.right = offsetBCR.left + offsetParent.clientWidth;\r\n\r\n        if (includePadding) {\r\n          var offsetParentStyle = $window.getComputedStyle(offsetParent);\r\n          offsetBCR.top += this.parseStyle(offsetParentStyle.paddingTop);\r\n          offsetBCR.bottom -= this.parseStyle(offsetParentStyle.paddingBottom);\r\n          offsetBCR.left += this.parseStyle(offsetParentStyle.paddingLeft);\r\n          offsetBCR.right -= this.parseStyle(offsetParentStyle.paddingRight);\r\n        }\r\n\r\n        return {\r\n          top: Math.round(elemBCR.top - offsetBCR.top),\r\n          bottom: Math.round(offsetBCR.bottom - elemBCR.bottom),\r\n          left: Math.round(elemBCR.left - offsetBCR.left),\r\n          right: Math.round(offsetBCR.right - elemBCR.right)\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Provides an array of placement values parsed from a placement string.\r\n       * Along with the 'auto' indicator, supported placement strings are:\r\n       *   <ul>\r\n       *     <li>top: element on top, horizontally centered on host element.</li>\r\n       *     <li>top-left: element on top, left edge aligned with host element left edge.</li>\r\n       *     <li>top-right: element on top, lerightft edge aligned with host element right edge.</li>\r\n       *     <li>bottom: element on bottom, horizontally centered on host element.</li>\r\n       *     <li>bottom-left: element on bottom, left edge aligned with host element left edge.</li>\r\n       *     <li>bottom-right: element on bottom, right edge aligned with host element right edge.</li>\r\n       *     <li>left: element on left, vertically centered on host element.</li>\r\n       *     <li>left-top: element on left, top edge aligned with host element top edge.</li>\r\n       *     <li>left-bottom: element on left, bottom edge aligned with host element bottom edge.</li>\r\n       *     <li>right: element on right, vertically centered on host element.</li>\r\n       *     <li>right-top: element on right, top edge aligned with host element top edge.</li>\r\n       *     <li>right-bottom: element on right, bottom edge aligned with host element bottom edge.</li>\r\n       *   </ul>\r\n       * A placement string with an 'auto' indicator is expected to be\r\n       * space separated from the placement, i.e: 'auto bottom-left'  If\r\n       * the primary and secondary placement values do not match 'top,\r\n       * bottom, left, right' then 'top' will be the primary placement and\r\n       * 'center' will be the secondary placement.  If 'auto' is passed, true\r\n       * will be returned as the 3rd value of the array.\r\n       *\r\n       * @param {string} placement - The placement string to parse.\r\n       *\r\n       * @returns {array} An array with the following values\r\n       * <ul>\r\n       *   <li>**[0]**: The primary placement.</li>\r\n       *   <li>**[1]**: The secondary placement.</li>\r\n       *   <li>**[2]**: If auto is passed: true, else undefined.</li>\r\n       * </ul>\r\n       */\r\n      parsePlacement: function(placement) {\r\n        var autoPlace = PLACEMENT_REGEX.auto.test(placement);\r\n        if (autoPlace) {\r\n          placement = placement.replace(PLACEMENT_REGEX.auto, '');\r\n        }\r\n\r\n        placement = placement.split('-');\r\n\r\n        placement[0] = placement[0] || 'top';\r\n        if (!PLACEMENT_REGEX.primary.test(placement[0])) {\r\n          placement[0] = 'top';\r\n        }\r\n\r\n        placement[1] = placement[1] || 'center';\r\n        if (!PLACEMENT_REGEX.secondary.test(placement[1])) {\r\n          placement[1] = 'center';\r\n        }\r\n\r\n        if (autoPlace) {\r\n          placement[2] = true;\r\n        } else {\r\n          placement[2] = false;\r\n        }\r\n\r\n        return placement;\r\n      },\r\n\r\n      /**\r\n       * Provides coordinates for an element to be positioned relative to\r\n       * another element.  Passing 'auto' as part of the placement parameter\r\n       * will enable smart placement - where the element fits. i.e:\r\n       * 'auto left-top' will check to see if there is enough space to the left\r\n       * of the hostElem to fit the targetElem, if not place right (same for secondary\r\n       * top placement).  Available space is calculated using the viewportOffset\r\n       * function.\r\n       *\r\n       * @param {element} hostElem - The element to position against.\r\n       * @param {element} targetElem - The element to position.\r\n       * @param {string=} [placement=top] - The placement for the targetElem,\r\n       *   default is 'top'. 'center' is assumed as secondary placement for\r\n       *   'top', 'left', 'right', and 'bottom' placements.  Available placements are:\r\n       *   <ul>\r\n       *     <li>top</li>\r\n       *     <li>top-right</li>\r\n       *     <li>top-left</li>\r\n       *     <li>bottom</li>\r\n       *     <li>bottom-left</li>\r\n       *     <li>bottom-right</li>\r\n       *     <li>left</li>\r\n       *     <li>left-top</li>\r\n       *     <li>left-bottom</li>\r\n       *     <li>right</li>\r\n       *     <li>right-top</li>\r\n       *     <li>right-bottom</li>\r\n       *   </ul>\r\n       * @param {boolean=} [appendToBody=false] - Should the top and left values returned\r\n       *   be calculated from the body element, default is false.\r\n       *\r\n       * @returns {object} An object with the following properties:\r\n       *   <ul>\r\n       *     <li>**top**: Value for targetElem top.</li>\r\n       *     <li>**left**: Value for targetElem left.</li>\r\n       *     <li>**placement**: The resolved placement.</li>\r\n       *   </ul>\r\n       */\r\n      positionElements: function(hostElem, targetElem, placement, appendToBody) {\r\n        hostElem = this.getRawNode(hostElem);\r\n        targetElem = this.getRawNode(targetElem);\r\n\r\n        // need to read from prop to support tests.\r\n        var targetWidth = angular.isDefined(targetElem.offsetWidth) ? targetElem.offsetWidth : targetElem.prop('offsetWidth');\r\n        var targetHeight = angular.isDefined(targetElem.offsetHeight) ? targetElem.offsetHeight : targetElem.prop('offsetHeight');\r\n\r\n        placement = this.parsePlacement(placement);\r\n\r\n        var hostElemPos = appendToBody ? this.offset(hostElem) : this.position(hostElem);\r\n        var targetElemPos = {top: 0, left: 0, placement: ''};\r\n\r\n        if (placement[2]) {\r\n          var viewportOffset = this.viewportOffset(hostElem, appendToBody);\r\n\r\n          var targetElemStyle = $window.getComputedStyle(targetElem);\r\n          var adjustedSize = {\r\n            width: targetWidth + Math.round(Math.abs(this.parseStyle(targetElemStyle.marginLeft) + this.parseStyle(targetElemStyle.marginRight))),\r\n            height: targetHeight + Math.round(Math.abs(this.parseStyle(targetElemStyle.marginTop) + this.parseStyle(targetElemStyle.marginBottom)))\r\n          };\r\n\r\n          placement[0] = placement[0] === 'top' && adjustedSize.height > viewportOffset.top && adjustedSize.height <= viewportOffset.bottom ? 'bottom' :\r\n                         placement[0] === 'bottom' && adjustedSize.height > viewportOffset.bottom && adjustedSize.height <= viewportOffset.top ? 'top' :\r\n                         placement[0] === 'left' && adjustedSize.width > viewportOffset.left && adjustedSize.width <= viewportOffset.right ? 'right' :\r\n                         placement[0] === 'right' && adjustedSize.width > viewportOffset.right && adjustedSize.width <= viewportOffset.left ? 'left' :\r\n                         placement[0];\r\n\r\n          placement[1] = placement[1] === 'top' && adjustedSize.height - hostElemPos.height > viewportOffset.bottom && adjustedSize.height - hostElemPos.height <= viewportOffset.top ? 'bottom' :\r\n                         placement[1] === 'bottom' && adjustedSize.height - hostElemPos.height > viewportOffset.top && adjustedSize.height - hostElemPos.height <= viewportOffset.bottom ? 'top' :\r\n                         placement[1] === 'left' && adjustedSize.width - hostElemPos.width > viewportOffset.right && adjustedSize.width - hostElemPos.width <= viewportOffset.left ? 'right' :\r\n                         placement[1] === 'right' && adjustedSize.width - hostElemPos.width > viewportOffset.left && adjustedSize.width - hostElemPos.width <= viewportOffset.right ? 'left' :\r\n                         placement[1];\r\n\r\n          if (placement[1] === 'center') {\r\n            if (PLACEMENT_REGEX.vertical.test(placement[0])) {\r\n              var xOverflow = hostElemPos.width / 2 - targetWidth / 2;\r\n              if (viewportOffset.left + xOverflow < 0 && adjustedSize.width - hostElemPos.width <= viewportOffset.right) {\r\n                placement[1] = 'left';\r\n              } else if (viewportOffset.right + xOverflow < 0 && adjustedSize.width - hostElemPos.width <= viewportOffset.left) {\r\n                placement[1] = 'right';\r\n              }\r\n            } else {\r\n              var yOverflow = hostElemPos.height / 2 - adjustedSize.height / 2;\r\n              if (viewportOffset.top + yOverflow < 0 && adjustedSize.height - hostElemPos.height <= viewportOffset.bottom) {\r\n                placement[1] = 'top';\r\n              } else if (viewportOffset.bottom + yOverflow < 0 && adjustedSize.height - hostElemPos.height <= viewportOffset.top) {\r\n                placement[1] = 'bottom';\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        switch (placement[0]) {\r\n          case 'top':\r\n            targetElemPos.top = hostElemPos.top - targetHeight;\r\n            break;\r\n          case 'bottom':\r\n            targetElemPos.top = hostElemPos.top + hostElemPos.height;\r\n            break;\r\n          case 'left':\r\n            targetElemPos.left = hostElemPos.left - targetWidth;\r\n            break;\r\n          case 'right':\r\n            targetElemPos.left = hostElemPos.left + hostElemPos.width;\r\n            break;\r\n        }\r\n\r\n        switch (placement[1]) {\r\n          case 'top':\r\n            targetElemPos.top = hostElemPos.top;\r\n            break;\r\n          case 'bottom':\r\n            targetElemPos.top = hostElemPos.top + hostElemPos.height - targetHeight;\r\n            break;\r\n          case 'left':\r\n            targetElemPos.left = hostElemPos.left;\r\n            break;\r\n          case 'right':\r\n            targetElemPos.left = hostElemPos.left + hostElemPos.width - targetWidth;\r\n            break;\r\n          case 'center':\r\n            if (PLACEMENT_REGEX.vertical.test(placement[0])) {\r\n              targetElemPos.left = hostElemPos.left + hostElemPos.width / 2 - targetWidth / 2;\r\n            } else {\r\n              targetElemPos.top = hostElemPos.top + hostElemPos.height / 2 - targetHeight / 2;\r\n            }\r\n            break;\r\n        }\r\n\r\n        targetElemPos.top = Math.round(targetElemPos.top);\r\n        targetElemPos.left = Math.round(targetElemPos.left);\r\n        targetElemPos.placement = placement[1] === 'center' ? placement[0] : placement[0] + '-' + placement[1];\r\n\r\n        return targetElemPos;\r\n      },\r\n\r\n      /**\r\n      * Provides a way for positioning tooltip & dropdown\r\n      * arrows when using placement options beyond the standard\r\n      * left, right, top, or bottom.\r\n      *\r\n      * @param {element} elem - The tooltip/dropdown element.\r\n      * @param {string} placement - The placement for the elem.\r\n      */\r\n      positionArrow: function(elem, placement) {\r\n        elem = this.getRawNode(elem);\r\n\r\n        var innerElem = elem.querySelector('.tooltip-inner, .popover-inner');\r\n        if (!innerElem) {\r\n          return;\r\n        }\r\n\r\n        var isTooltip = angular.element(innerElem).hasClass('tooltip-inner');\r\n\r\n        var arrowElem = isTooltip ? elem.querySelector('.tooltip-arrow') : elem.querySelector('.arrow');\r\n        if (!arrowElem) {\r\n          return;\r\n        }\r\n\r\n        var arrowCss = {\r\n          top: '',\r\n          bottom: '',\r\n          left: '',\r\n          right: ''\r\n        };\r\n\r\n        placement = this.parsePlacement(placement);\r\n        if (placement[1] === 'center') {\r\n          // no adjustment necessary - just reset styles\r\n          angular.element(arrowElem).css(arrowCss);\r\n          return;\r\n        }\r\n\r\n        var borderProp = 'border-' + placement[0] + '-width';\r\n        var borderWidth = $window.getComputedStyle(arrowElem)[borderProp];\r\n\r\n        var borderRadiusProp = 'border-';\r\n        if (PLACEMENT_REGEX.vertical.test(placement[0])) {\r\n          borderRadiusProp += placement[0] + '-' + placement[1];\r\n        } else {\r\n          borderRadiusProp += placement[1] + '-' + placement[0];\r\n        }\r\n        borderRadiusProp += '-radius';\r\n        var borderRadius = $window.getComputedStyle(isTooltip ? innerElem : elem)[borderRadiusProp];\r\n\r\n        switch (placement[0]) {\r\n          case 'top':\r\n            arrowCss.bottom = isTooltip ? '0' : '-' + borderWidth;\r\n            break;\r\n          case 'bottom':\r\n            arrowCss.top = isTooltip ? '0' : '-' + borderWidth;\r\n            break;\r\n          case 'left':\r\n            arrowCss.right = isTooltip ? '0' : '-' + borderWidth;\r\n            break;\r\n          case 'right':\r\n            arrowCss.left = isTooltip ? '0' : '-' + borderWidth;\r\n            break;\r\n        }\r\n\r\n        arrowCss[placement[1]] = borderRadius;\r\n\r\n        angular.element(arrowElem).css(arrowCss);\r\n      }\r\n    };\r\n  }]);\r\n","'use strict';\r\nangular.module('cyient.histogram', [])\r\n.directive('histogram', [function() {\r\n    return {\r\n        scope: {\r\n            data: \"=\",\r\n            toolTipValue: \"=\",\r\n        },\r\n        restrict: \"AE\",\r\n        link: function(scope, elem, attrs) {\r\n\r\n            var container = elem[0];\r\n\r\n            scope.$watch(\"data\", function(newVal, oldVal) {\r\n                render();\r\n            }, true);\r\n\r\n\r\n            function render() {\r\n\r\n                d3.select(container).text(\"\");\r\n\r\n                var containerWidth = elem.width();\r\n                var containerHeight = elem.height();\r\n\r\n                var margin = {top: 10, right: 10, bottom: 24, left: 55},\r\n                    width = containerWidth - margin.left - margin.right,\r\n                    height = containerHeight - margin.top - margin.bottom;\r\n\r\n                var formatPercent = d3.format(\".0%\");\r\n\r\n                var x = d3.scale.ordinal()\r\n                    .rangeRoundBands([0, width], .1);\r\n\r\n                var y = d3.scale.linear()\r\n                    .range([height, 0]);\r\n\r\n                var xAxis = d3.svg.axis()\r\n                    .scale(x)\r\n                    .orient(\"bottom\");\r\n\r\n                var yAxis = d3.svg.axis()\r\n                    .scale(y)\r\n                    .orient(\"left\")\r\n                    .ticks(5)\r\n                    .tickFormat(formatPercent);\r\n\r\n                var svg = d3.select(container).append(\"svg\")\r\n                    .attr(\"width\", width + margin.left + margin.right)\r\n                    .attr(\"height\", height + margin.top + margin.bottom)\r\n                    .append(\"g\")\r\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n                var data = scope.data;\r\n\r\n                x.domain(data.map(function(d) { return d.xValue; }));\r\n                y.domain([0, d3.max(data, function(d) { return d.yValue; })]);\r\n\r\n                svg.append(\"g\")\r\n                    .attr(\"class\", \"x axis\")\r\n                    .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n                    .call(xAxis);\r\n\r\n                svg.append(\"g\")\r\n                    .attr(\"class\", \"y axis\")\r\n                    .call(yAxis)\r\n\r\n                svg.selectAll(\".bar\")\r\n                    .data(data)\r\n                    .enter().append(\"rect\")\r\n                    .attr(\"class\", \"bar\")\r\n                    .attr(\"x\", function(d) { return x(d.xValue); })\r\n                    .attr(\"width\", x.rangeBand())\r\n                    .attr(\"y\", function (d, i) {\r\n                      return height;\r\n                    })\r\n                    .attr(\"height\", 0)\r\n                      .transition()\r\n                      .duration(2000)\r\n                      .delay(function (d, i) {\r\n                        return i * 50;\r\n                      })\r\n                    .attr(\"y\", function(d) {\r\n                      return y(d.yValue);\r\n                    })\r\n                    .attr(\"height\", function(d) {\r\n                      return height - y(d.yValue);\r\n                    });\r\n            } // End of render function\r\n\r\n        } // End of link function\r\n    }; // End of return object\r\n\r\n}]);\r\n","'use strict';\r\n(function(){\r\n  angular.module(\"directives/lifeChart/lifeChart.html\", []).run([\"$templateCache\", function($templateCache){\r\n    $templateCache.put(\"directives/lifeChart/lifeChart.html\",\r\n    '<div class=\"graph-container\">' +\r\n      '<div id=\"life-chart-legends\" class=\"chart-legends\">' +\r\n        '<div class=\"rul-legends\" ng-if=\"isRULLegend\">' +\r\n          '<div class=\"checkbox-wrapper\">' +\r\n            '<div class=\"checkbox-btn-group\">' +\r\n              '<div class=\"life-1\">' +\r\n                '<label class=\"checkbox-button today-check\">' +\r\n                  '<input type=\"checkbox\" name=\"SMHValue\" ng-model=\"isRULTodayLine\" ng-click=\"toggleRULTodayLine()\">' +\r\n                    '<span>Today <span class=\"graph-value\">{{xvalue}}</span></span>' +\r\n                '</label>' +\r\n              '</div>' +\r\n              '<div class=\"life-1\">' +\r\n                '<label class=\"checkbox-button health-check\">' +\r\n                  '<input type=\"checkbox\" name=\"check\" ng-model=\"isRULHealthLine\" ng-click=\"toggleRULHealthLine()\">' +\r\n                    '<span>Health <span class=\"graph-value\">{{(healthvalue | setDecimal: 3)}}</span></span>' +\r\n                '</label>' +\r\n              '</div>' +\r\n              '<div class=\"life-1\">' +\r\n                '<label class=\"checkbox-button rul-check\">' +\r\n                  '<input type=\"checkbox\" name=\"check\" ng-model=\"isRULArea\" ng-click=\"toggleRULArea()\">' +\r\n                    '<span>RUL <span class=\"graph-value\" ng-if=\"rulminvalue\">min: {{(rulminvalue | setDecimal: 2)}}<span ng-if=\"rulmaxvalue\">,</span></span> &nbsp; <span ng-if=\"rulmaxvalue\"> max: {{(rulmaxvalue | setDecimal: 2) }}</span></span>' +\r\n                '</label>' +\r\n              '</div>' +\r\n            '</div>' +\r\n          '</div>' +\r\n        '</div>' +\r\n        '<div class=\"deterioration-legends\" ng-if=\"isDeteriotationLegend\">' +\r\n          '<div class=\"checkbox-wrapper\">' +\r\n            '<div class=\"checkbox-btn-group\">' +\r\n              '<label class=\"checkbox-button today-check\">' +\r\n                '<input type=\"checkbox\" name=\"SMHValue\" ng-model=\"isRODTodayLine\" ng-click=\"toggleRODTodayLine()\">' +\r\n                  '<span>Today <span class=\"graph-value\">{{xvalue}}</span></span>' +\r\n              '</label>' +\r\n              '<label class=\"checkbox-button health-check\">' +\r\n                '<input type=\"checkbox\" name=\"check\" ng-model=\"isROD\" ng-click=\"toggleROD()\">' +\r\n                  '<span>ROD <span class=\"graph-value\">{{(healthvalue | setDecimal: 3)}}</span></span>' +\r\n              '</label>' +\r\n              '<label class=\"checkbox-button optimal-check\">' +\r\n                '<input type=\"checkbox\" name=\"check\" ng-model=\"isRODOptimalVal\" ng-click=\"toggleOptimalVal()\">' +\r\n                  '<span>Optimal Value</span>' +\r\n                  // <span class=\"graph-value\">{{optimalmin}}</span> &dash; <span class=\"graph-value\">{{optimalmax}}</span>\r\n              '</label>' +\r\n            '</div>' +\r\n          '</div>' +\r\n        '</div>' +\r\n      '</div>' +\r\n      '<div id=\"life-chart-graph\"><svg class=\"life-graph-{{chartType}}\"></svg></div>' +\r\n    '</div>'\r\n    );\r\n  }]);\r\n  angular.module('cyient.lifechart', ['directives/lifeChart/lifeChart.html'])\r\n  .directive('lifeChart', ['_', '$compile', '$timeout', '$document', '$state', '$filter', '$log', function(_, $compile, $timeout, $document, $state, $filter, $log) {\r\n    return {\r\n      restrict: 'E',\r\n      scope: {\r\n        width: '=',\r\n        height: '=',\r\n        todayX: '=',\r\n        todayY: '=',\r\n        data: '=data',\r\n        xvalue: '@',\r\n        trendvalue: '@',\r\n        siteavgvalue: '@',\r\n        healthvalue: '@',\r\n        rulminvalue: '@',\r\n        rulmaxvalue: '@',\r\n        optimalmin: '@',\r\n        optimalmax: '@',\r\n        \r\n\r\n        /**\r\n         * NOTE: only two chart types are supported 'RUL' and 'ROD'\r\n         * some ternary operations might be affected if a new type is introduced\r\n         */\r\n        chartType: '@',\r\n      },\r\n      templateUrl: \"directives/lifeChart/lifeChart.html\",\r\n      link: function(scope, element, attrs, ngModel) {\r\n\r\n        var margin = {\r\n          top: 20,\r\n          right: 100,\r\n          bottom: 100,\r\n          left: 55\r\n        },\r\n        padding = 100;\r\n\r\n        var width = scope.width;\r\n        var height = scope.height;\r\n        var minOptimalValue = scope.data.minOptimalValue || 0;\r\n        var maxOptimalValue = scope.data.maxOptimalValue || 0;\r\n\r\n        scope.inline = 'block';\r\n        if($state.current.name === \"cyient.protected.sitedetails.whatifscenario\"){\r\n          scope.inline = 'inline-flex';\r\n        }\r\n\r\n        var isOptimal = false; // boolean for optimal value rectangle\r\n\r\n        if(scope.chartType === 'RUL'){\r\n          // default values\r\n          scope.isRULLegend = true;\r\n          scope.isRULTodayLine = true;\r\n          scope.isRULHealthLine = true;\r\n          scope.isRULTrendLine = false;\r\n          scope.isRULSiteAvgLine = false;\r\n          scope.isRULArea = true;\r\n          isOptimal = false;\r\n\r\n          // action functions for checkbox elements in RUL graph\r\n          scope.toggleRULTodayLine = function(){\r\n            scope.isRULTodayLine = !scope.isRULTodayLine;\r\n            scope.isRULTodayLine ? d3.select(element[0]).selectAll('#life-chart-todayLine, #life-chart-todayLabel, #life-chart-intersect').style('visibility', 'visible') : d3.select(element[0]).selectAll('#life-chart-todayLine, #life-chart-todayLabel, #life-chart-intersect').style('visibility', 'hidden');\r\n          };\r\n          scope.toggleRULTrendLine = function(){\r\n            scope.isRULTrendLine = !scope.isRULTrendLine;\r\n            scope.isRULTrendLine ? d3.select(element[0]).select('.trendLine').style('visibility', 'visible') : d3.select(element[0]).select('.trendLine').style('visibility', 'hidden');\r\n          };\r\n          scope.toggleRULHealthLine = function(){\r\n            scope.isRULHealthLine = !scope.isRULHealthLine;\r\n            scope.isRULHealthLine ? d3.select(element[0]).select('.healthLine').style('visibility', 'visible') : d3.select(element[0]).select('.healthLine').style('visibility', 'hidden');\r\n          };\r\n          scope.toggleRULSiteAvgLine = function(){\r\n            scope.isRULSiteAvgLine = !scope.isRULSiteAvgLine;\r\n            scope.isRULSiteAvgLine ? d3.select(element[0]).select('.siteAvgLine').style('visibility', 'visible') : d3.select(element[0]).select('.siteAvgLine').style('visibility', 'hidden');\r\n          }\r\n          scope.toggleRULArea = function(){\r\n            scope.isRULArea = !scope.isRULArea;\r\n            scope.isRULArea ? d3.select(element[0]).selectAll('#rul-minArea, #rul-maxArea, #rulMaxLine, #rulAvgLine, #rulMinLine, #life-chart-minLine, #life-chart-minLabel,  #life-chart-avgLine, #life-chart-avgLabel, #life-chart-maxLine, #life-chart-maxLabel').style('visibility', 'visible') : d3.select(element[0]).selectAll('#rul-minArea, #rul-maxArea, #rulMaxLine, #rulAvgLine, #rulMinLine, #life-chart-minLine, #life-chart-minLabel,  #life-chart-avgLine, #life-chart-avgLabel, #life-chart-maxLine, #life-chart-maxLabel').style('visibility', 'hidden');\r\n          };\r\n\r\n        } else if(scope.chartType === 'ROD'){\r\n          // default values\r\n          scope.isDeteriotationLegend = true;\r\n          scope.isRODTodayLine = true;\r\n          scope.isRODTrendLine = true;\r\n          scope.isROD = true;\r\n          scope.isRODOptimalVal = true;\r\n          scope.isRODSiteAvgLine = false;\r\n          isOptimal = true;\r\n\r\n          // action functions for checkbox elements in deterioration/ROD graph\r\n          scope.toggleRODTodayLine = function(){\r\n            scope.isRODTodayLine = !scope.isRODTodayLine;\r\n            scope.isRODTodayLine ? d3.select(element[0]).selectAll('#life-chart-todayLine, #life-chart-todayLabel, #life-chart-intersect').style('visibility', 'visible') : d3.select(element[0]).selectAll('#life-chart-todayLine, #life-chart-todayLabel, #life-chart-intersect').style('visibility', 'hidden');\r\n          };\r\n          scope.toggleRODTrendLine = function(){\r\n            scope.isRODTrendLine = !scope.isRODTrendLine;\r\n            scope.isRODTrendLine ? d3.select(element[0]).select('.trendLine').style('visibility', 'visible') : d3.select(element[0]).select('.trendLine').style('visibility', 'hidden');\r\n          };\r\n          scope.toggleROD = function(){\r\n            scope.isROD = !scope.isROD;\r\n            scope.isROD ? d3.select(element[0]).select('.healthLine').style('visibility', 'visible') : d3.select(element[0]).select('.healthLine').style('visibility', 'hidden');\r\n          };\r\n          scope.toggleOptimalVal = function(){\r\n            scope.isRODOptimalVal = !scope.isRODOptimalVal;\r\n            scope.isRODOptimalVal ? d3.select(element[0]).select('.optimalArea').style('visibility', 'visible') : d3.select(element[0]).select('.optimalArea').style('visibility', 'hidden');\r\n          };\r\n          scope.toggleRODSiteAvgLine =  function(){\r\n            scope.isRODSiteAvgLine = !scope.isRODSiteAvgLine;\r\n            scope.isRODSiteAvgLine ? d3.select(element[0]).select('.siteAvgLine').style('visibility', 'visible') : d3.select(element[0]).select('.siteAvgLine').style('visibility', 'hidden');\r\n          };\r\n        }\r\n\r\n        function compare(a,b) {\r\n          if (a.xAxis < b.xAxis)\r\n            return -1;\r\n          if (a.xAxis > b.xAxis)\r\n            return 1;\r\n          return 0;\r\n        }\r\n\r\n        // render plot\r\n        scope.render = function() {\r\n\r\n          if(scope.data){\r\n            var today = scope.today;\r\n            var todayX = scope.todayX;\r\n            var todayY = scope.todayY;\r\n            var healthDataTemp = scope.data.trendGraph || [];\r\n            var healthData = healthDataTemp.concat(scope.data.healthGraph);\r\n          } else {\r\n            return;\r\n          }\r\n\r\n          // sort by yAxis\r\n          healthData = _.sortBy(healthData, 'yAxis');\r\n\r\n          // sort data by xAxis\r\n          healthData.sort(compare);\r\n            \r\n          // trim off negative/zero values in yAxis\r\n          /*healthData = _.remove(healthData, function(ele) {\r\n            return ele.xAxis < 0 ||ele.yAxis > 0;\r\n          });*/\r\n\r\n          // today point\r\n          var todayPoint = healthData.filter(function(ele){\r\n            return ele.xAxis === todayX || ele.yAxis === todayY;\r\n          });\r\n\r\n          // trim data off negative `x` and `y` values\r\n          for(var i=healthData.length-1; i >= 0; i--){\r\n            if(healthData[i].xAxis < todayPoint.xAxis && healthData[i].yAxis < 0){\r\n              healthData.splice(i, 1);\r\n            }\r\n          }\r\n\r\n          var first_smallest = Number.POSITIVE_INFINITY;\r\n          for (var i in healthData) {\r\n            /* If current element is smaller than first then update both first and second */\r\n            if (healthData[i].yAxis < first_smallest) {\r\n              first_smallest = healthData[i].yAxis;\r\n            }\r\n          }\r\n          // return first largest yAxis value\r\n          var first_largest_yAxis = d3.max(healthData, function(d) { return d.yAxis});\r\n\r\n          /* slice original data until today */\r\n          var mainData = [], rulData = [];\r\n          var rulMinData = [], rulMaxData = [];\r\n          var todayIndex = null;\r\n          for (var i = 0, len = healthData.length; i < len; i++){\r\n            if(healthData[i].xAxis === todayX || healthData[i].yAxis === todayY){\r\n              // index of `today` data point in the datum\r\n              todayIndex = healthData.indexOf(healthData[i]);\r\n\t\t\t        break;\r\n            }\r\n          }\r\n          mainData = healthData.slice(0, todayIndex+1);\r\n          \r\n          var rulData2 = healthData.slice(todayIndex, healthData.length-1);\r\n\t\t  \r\n\t\t  //now adjust the data if any value is more than 1 in yAxis\r\n\t\t  rulData = _.map(rulData2, function(e) {\r\n\t\t\t  if(e.yAxisMin > 1 || e.yAxisMax > 1) {\r\n\t\t\t\t// e.yAxisMin /= 100;\r\n\t\t\t\t// e.yAxisMax /= 100;\r\n\t\t\t  }\r\n\t\t\t  return e;\r\n\t\t  })\r\n\r\n          // if it's an ROD graph, slice off siteAvgData from todayIndex\r\n          if(scope.chartType === 'ROD'){\r\n            // siteAvgData = siteAvgData.slice(0, todayIndex);\r\n          }\r\n\r\n          // omit yAxisMin and yAxisMax keys\r\n          _.omit(healthData, ['yAxisMin', 'yAxisMax']);\r\n          _.omit(rulData, ['yAxisMin', 'yAxisMax']);\r\n          // separate yAxisMin and yAxisMax data from rulData\r\n          for(var i in rulData){\r\n            rulMinData.push({ xAxis: rulData[i].xAxis, yAxis: rulData[i].yAxisMin});\r\n            rulMaxData.push({ xAxis: rulData[i].xAxis, yAxis: rulData[i].yAxisMax });\r\n          }\r\n          rulData = _.sortBy(rulData, 'yAxis');\r\n          rulData = _.remove(rulData, function(ele) {\r\n            return ele.xAxis < 0 || ele.yAxis > 0;\r\n          });\r\n          rulData.sort(compare);\r\n\r\n          rulMinData = _.sortBy(rulMinData, 'yAxis');\r\n          rulMinData = _.remove(rulMinData, function(ele) {\r\n            return ele.xAxis < 0 || ele.yAxis > 0;\r\n          });\r\n          rulMinData.sort(compare);\r\n\r\n          rulMaxData = _.sortBy(rulMaxData, 'yAxis');\r\n          rulMaxData = _.remove(rulMaxData, function(ele) {\r\n            return ele.xAxis < 0 || ele.yAxis > 0;\r\n          });\r\n          rulMaxData.sort(compare);\r\n\r\n          var x = d3.scale.linear()\r\n            .domain([0, d3.max([].concat(\r\n              healthData.map(function(d) { return d.xAxis }),\r\n              // siteAvgData.map(function(d) { return d.xAxis }),\r\n              // trendData.map(function(d) { return d.xAxis }),\r\n              rulMinData.map(function(d) { return d.xAxis }),\r\n              rulMaxData.map(function(d) { return d.xAxis }))\r\n            )])\r\n            .range([0, width - margin.right]);\r\n\r\n          var yMaxValue = d3.max(\r\n            [].concat(\r\n              healthData.map(function(d) { return d.yAxis }),\r\n              // siteAvgData.map(function(d) { return d.yAxis }),\r\n              // trendData.map(function(d) { return d.yAxis }),\r\n              rulMinData.map(function(d) { return d.yAxis }),\r\n              rulMaxData.map(function(d) { return d.yAxis }),\r\n              [maxOptimalValue])\r\n          );\r\n\r\n          var y = d3.scale.linear()\r\n            .domain([0, yMaxValue])\r\n            .range([height / 2, 0]);\r\n\r\n          var xTicks = d3.max([].concat(\r\n              healthData.length,\r\n              // siteAvgData.length,\r\n              // trendData.length,\r\n              rulMinData.length,\r\n              rulMaxData.length)\r\n            );\r\n\r\n          // count number of decimals after the decimal point\r\n          var countDecimals = function (value) {\r\n            if ((value % 1) != 0){\r\n              return value.toString().split(\".\")[1].length;\r\n            }\r\n            return 0;\r\n          };\r\n\r\n          // var initSec = d3.select(\"svg\")\r\n          // .attr(\"id\", \"life-graph-group\");\r\n          // if(initSec){\r\n          //   initSec.remove();\r\n          // }\r\n          // define SVG canvas\r\n          var svg = d3.select(element.children()[0]).select(\"svg\")\r\n          .attr(\"width\", width)\r\n          .attr(\"height\", height)\r\n          .append(\"g\")\r\n            .attr(\"id\", \"life-graph-group\")\r\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n          var chartBody = svg.append(\"g\").attr(\"id\", \"chart-body\");\r\n\r\n          var xAxisLine = d3.svg.axis()\r\n            .scale(x)\r\n            .orient(\"bottom\")\r\n            .ticks(6)\r\n            /*.tickFormat(function(d) {\r\n                // This function is temporary.\r\n                // Will be changed/removed in a short time.\r\n\r\n                var startDate = new Date(2003, 1);\r\n                var endDate = new Date(2016, 1);\r\n\r\n                // Maps the x-axis values to milliseconds\r\n                var dateScale = d3.scale.linear()\r\n                        .domain(x.domain())\r\n                        .range([startDate.getTime(), endDate.getTime()]);\r\n\r\n                // var format = d3.time.format(\"%e %b' %y\");\r\n                var format = d3.time.format(\"%b' %y\");\r\n                // var format = d3.time.format(\"%Y\");\r\n                var str = format(new Date(dateScale(d)))\r\n                // console.log(str);\r\n                return str;\r\n            })*/\r\n            // .ticks(xTicks/35)\r\n            .tickSize(0)\r\n            .tickPadding(8);\r\n            \r\n            \r\n            d3.selectAll(\".xAxis>.tick>text\")\r\n\t\t      .style(\"font-size\",8);\r\n\r\n          var yAxisLine = d3.svg.axis()\r\n            .scale(y)\r\n            .orient(\"left\")\r\n            .tickFormat(function(d) {\r\n              // if(d>0 && countDecimals(d)<2) { return d * 100; }\r\n              // else { return d * 10; }\r\n              return d;\r\n             })\r\n            .tickSize(5)\r\n            .ticks(5)\r\n            .tickPadding(6);\r\n\r\n          // define line\r\n          var line = d3.svg.line()\r\n            .interpolate(\"linear\")\r\n            .x(function(d) {\r\n              return x(d.xAxis);\r\n            })\r\n            .y(function(d) {\r\n              return y(d.yAxis);\r\n            });\r\n\r\n          // define area\r\n          //custom interpolator - function(points) { return points.join(\"\"); }\r\n          var area = d3.svg.area()\r\n            .interpolate(\"monotone\")\r\n            .x(function(d) {\r\n              return x(d.xAxis);\r\n            })\r\n            .y0(height)\r\n            .y1(function(d) {\r\n              return y(d.yAxis);\r\n            });\r\n\r\n          // render axes\r\n          var xTranslateHeight = height / 2;\r\n          chartBody.append(\"g\")\r\n            .attr(\"id\", \"life-chart-xAxis\")\r\n            .attr(\"class\", \"x lifeChartAxis\")\r\n            .attr(\"transform\", \"translate(0,\" + xTranslateHeight + \")\")\r\n            .call(xAxisLine);\r\n\r\n          chartBody.append(\"g\")\r\n            .attr(\"id\", \"life-chart-yAxis\")\r\n            .attr(\"class\", \"y lifeChartAxis\")\r\n            .call(yAxisLine);\r\n\r\n          // render vertical grid lines\r\n          chartBody.selectAll(\"line.horizontalGrid\").data(y.ticks(5)).enter()\r\n            .append(\"line\")\r\n            .attr({\r\n              \"class\": \"horizontalGrid\",\r\n              \"x1\": 0,\r\n              \"x2\": width,\r\n              \"y1\": function(d) {\r\n                return y(d);\r\n              },\r\n              \"y2\": function(d) {\r\n                return y(d);\r\n              },\r\n              \"fill\": \"none\",\r\n              \"shape-rendering\": \"crispEdges\",\r\n              \"stroke\": \"#cbcccd\",\r\n              \"stroke-width\": \"1px\"\r\n            });\r\n\r\n          // return first largest xAxis value\r\n          var first_largest_xAxis = d3.max(healthData, function(d) { return d.xAxis});\r\n\r\n          // render optimal area\r\n          scope.optimalmin = $filter('setDecimal')(minOptimalValue, 3);\r\n          scope.optimalmax = $filter('setDecimal')(maxOptimalValue, 3);\r\n          if(minOptimalValue && maxOptimalValue){\r\n            chartBody.append(\"rect\")\r\n            .attr(\"class\", \"optimalArea\")\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", y(minOptimalValue))\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", Math.abs(y(maxOptimalValue) - y(minOptimalValue)) )\r\n            .style(\"visibility\", (scope.chartType === 'RUL')? ((false)? 'visible': 'hidden') : ((scope.isRODOptimalVal)? 'visible': 'hidden'))\r\n          }\r\n\r\n          // render Health trend line\r\n          var healthLine = chartBody.append(\"path\")\r\n            .datum(mainData)\r\n            .attr(\"class\", function(d) {\r\n              return \"lifeChartLine healthLine\";\r\n            })\r\n            .attr(\"d\", line);\r\n          var totalLength = healthLine.node().getTotalLength();\r\n          healthLine\r\n            .attr(\"stroke-dasharray\", totalLength + \" \" + totalLength)\r\n            .attr(\"stroke-dashoffset\", totalLength)\r\n            .transition()\r\n            .duration(1000)\r\n            .ease(\"linear\")\r\n            .attr(\"stroke-dashoffset\", 0)\r\n            .attr(\"visibility\", (scope.chartType === 'RUL')? ((scope.isRULHealthLine)? 'visible': 'hidden') : ((scope.isROD)? 'visible': 'hidden'));\r\n\r\n          // Adds two circles for min & max points in life-chart\r\n          if (scope.chartType === 'ROD') {\r\n            var minPoint = _.minBy(mainData, 'yAxis');\r\n            var maxPoint = _.maxBy(mainData, 'yAxis');\r\n\r\n            chartBody.append(\"circle\")\r\n              .attr(\"cx\", x(minPoint.xAxis))\r\n              .attr(\"cy\", y(minPoint.yAxis))\r\n              .attr(\"r\", 4)\r\n              .attr(\"stroke\", \"#65318f\")\r\n              .attr(\"stroke-width\", \"3px\")\r\n              .attr(\"fill\", \"#fff\")\r\n\r\n            chartBody.append(\"circle\")\r\n              .attr(\"cx\", x(maxPoint.xAxis))\r\n              .attr(\"cy\", y(maxPoint.yAxis))\r\n              .attr(\"r\", 4)\r\n              .attr(\"stroke\", \"#65318f\")\r\n              .attr(\"stroke-width\", \"3px\")\r\n              .attr(\"fill\", \"#fff\")\r\n          }\r\n\r\n          /*\r\n          var siteAvgLine = chartBody.append(\"path\")\r\n            .datum(siteAvgData)\r\n            .attr(\"class\", function(d) {\r\n              return \"lifeChartLine siteAvgLine\";\r\n            })\r\n            .attr(\"stroke\", \"#d78219\")\r\n            .attr(\"d\", line);\r\n          var lineLen = siteAvgLine.node().getTotalLength();\r\n          var dashLen = 10;\r\n          var ddLen = dashLen * 2;\r\n          var darray = dashLen;\r\n          while(ddLen < lineLen){\r\n            darray += \",\" + dashLen + \",\" + dashLen;\r\n            ddLen += dashLen * 2;\r\n          }\r\n          siteAvgLine\r\n              .attr(\"stroke-linecap\", \"round\")\r\n              .attr(\"stroke-dasharray\", darray + \",\" +lineLen)\r\n              .attr(\"stroke-dashoffset\", lineLen)\r\n            .transition()\r\n              .duration(2000)\r\n              .ease(\"linear\")\r\n              .attr(\"stroke-dashoffset\", 0)\r\n              .attr(\"visibility\", (scope.chartType === 'RUL')? ((scope.isRULSiteAvgLine)? 'visible': 'hidden') : ((scope.isRODSiteAvgLine)? 'visible': 'hidden'));\r\n          */\r\n\r\n          /*\r\n          var trendLine = chartBody.append(\"path\")\r\n            .datum(trendData)\r\n            .attr(\"class\", function(d) {\r\n              return \"lifeChartLine trendLine\";\r\n            })\r\n            .attr(\"d\", line);\r\n          var totalLength = trendLine.node().getTotalLength();\r\n          trendLine\r\n            .attr(\"stroke-dasharray\", totalLength + \" \" + totalLength)\r\n            .attr(\"stroke-dashoffset\", totalLength)\r\n            .transition()\r\n            .duration(1000)\r\n            .ease(\"linear\")\r\n            .attr(\"stroke-dashoffset\", 0)\r\n            .attr(\"visibility\", (scope.chartType === 'RUL')? ((scope.isRULTrendLine)? 'visible': 'hidden') : ((scope.isRODTrendLine)? 'visible': 'hidden'));\r\n            */\r\n\r\n           if(scope.data.showMoreLines == true){\r\n            if(scope.data.dataPoints){\r\n              var rulMinData = scope.data.dataPoints[\"minLine\"];\r\n              var rulMaxData = scope.data.dataPoints[\"maxLine\"];\r\n              var rulData = scope.data.dataPoints[\"avgLine\"];\r\n              if(rulMinData && rulMinData.length){\r\n                var len = rulMinData.length;\r\n                for(var i=0; i<len; i++){\r\n                  rulMinData[i].xAxis = parseFloat(rulMinData[i].xAxis).toFixed(2);\r\n                }\r\n              }\r\n\r\n              if(rulMaxData && rulMaxData.length){\r\n                var len = rulMaxData.length;\r\n                for(var i=0; i<len; i++){\r\n                  rulMaxData[i].xAxis = parseFloat(rulMaxData[i].xAxis).toFixed(2);\r\n                }\r\n              }\r\n\r\n              if(rulData && rulData.length){\r\n                var len = rulData.length;\r\n                for(var i=0; i<len; i++){\r\n                  rulData[i].xAxis = parseFloat(rulData[i].xAxis).toFixed(2);\r\n                }\r\n              }\r\n\r\n            }\r\n          }\r\n\r\n          if(rulData.length > 0){\r\n            // define line\r\n            var rulLine = d3.svg.line()\r\n              .interpolate(\"linear\")\r\n              .x(function(d) {\r\n                if(d) return x(d.xAxis);\r\n              })\r\n              .y(function(d) {\r\n                if(d) return y(d.yAxis);\r\n              });\r\n              \r\n            var rulArea = chartBody.append(\"g\").attr(\"id\", \"rul-area\").attr(\"class\", \"rulArea\");\r\n            rulData = _.map(rulData, function(o) { return _.omit(o, 'yAxisMin'); });\r\n            rulData = _.map(rulData, function(o) { return _.omit(o, 'yAxisMax'); });\r\n            var rulMinArea = [_.head(rulData), _.last(rulData)];\r\n            var rulMaxArea = [_.head(rulData)];\r\n            for(var i in rulMinData){\r\n              rulMinArea.push(rulMinData[i]);\r\n            }\r\n            rulMinArea.sort(compare);\r\n            rulMinArea = _.uniqBy(rulMinArea, 'xAxis');\r\n            for(var i in rulMaxData){\r\n              rulMaxArea.push(rulMaxData[i]);\r\n            }\r\n            rulMaxArea.sort(compare);\r\n            rulMaxArea = _.uniqBy(rulMaxArea, 'xAxis');\r\n            rulMaxArea.push(_.last(rulData));\r\n            rulArea.append(\"path\")\r\n              .datum(rulMinArea)\r\n              .attr(\"id\", \"rul-minArea\")\r\n              .attr(\"fill\", \"#32d1dc\")\r\n              .transition()\r\n              .delay(1000)\r\n              .duration(2000)\r\n              .ease(\"linear\")\r\n              .attr(\"d\", rulLine)\r\n              .attr(\"visibility\", (scope.isRULArea)? 'visible': 'hidden');\r\n            rulArea.append(\"path\")\r\n              .datum(rulMaxArea)\r\n              .attr(\"id\", \"rul-maxArea\")\r\n              .attr(\"fill\", \"#32d1dc\")\r\n              .transition()\r\n              .delay(1000)\r\n              .duration(2000)\r\n              .ease(\"linear\")\r\n              .attr(\"d\", rulLine)\r\n              .attr(\"visibility\", (scope.isRULArea)? 'visible': 'hidden');\r\n              \r\n            var rulAvgLine = rulArea.append(\"path\")\r\n              .datum(rulData)\r\n              .attr(\"id\", \"rulAvgLine\")\r\n              .attr({ \"fill\": \"none\", \"stroke\": \"#479fa5\", \"stroke-width\": \"2px\" })\r\n              .attr(\"d\", rulLine);\r\n            var totalLength = rulAvgLine.node().getTotalLength();\r\n            rulAvgLine\r\n              .attr(\"stroke-dasharray\", totalLength + \" \" + totalLength)\r\n              .attr(\"stroke-dashoffset\", totalLength)\r\n              .transition()\r\n              .delay(1000)\r\n              .duration(1000)\r\n              .ease(\"linear\")\r\n              .attr(\"stroke-dashoffset\", 0)\r\n            \t.attr(\"visibility\", (scope.isRULArea)? 'visible': 'hidden');\r\n            var rulMaxLine = rulArea.append(\"path\")\r\n              .datum(rulMaxData)\r\n              .attr(\"id\", \"rulMaxLine\")\r\n              .attr({ \"fill\": \"none\", \"stroke\": \"#479fa5\", \"stroke-width\": \"1px\" })\r\n              .attr(\"d\", rulLine);\r\n            var totalLength = rulMaxLine.node().getTotalLength();\r\n            rulMaxLine\r\n              .attr(\"stroke-dasharray\", totalLength + \" \" + totalLength)\r\n              .attr(\"stroke-dashoffset\", totalLength)\r\n              .transition()\r\n              .delay(1000)\r\n              .duration(2000)\r\n              .ease(\"linear\")\r\n              .attr(\"stroke-dashoffset\", 0)\r\n              .attr(\"visibility\", (scope.isRULArea)? 'visible': 'hidden');\r\n            var rulMinLine = rulArea.append(\"path\")\r\n              .datum(rulMinData)\r\n              .attr(\"id\", \"rulMinLine\")\r\n              .attr({ \"fill\": \"none\", \"stroke\": \"#479fa5\", \"stroke-width\": \"1px\" })\r\n              .attr(\"d\", rulLine);\r\n            var totalLength = rulMinLine.node().getTotalLength();\r\n            rulMinLine\r\n              .attr(\"stroke-dasharray\", totalLength + \" \" + totalLength)\r\n              .attr(\"stroke-dashoffset\", totalLength)\r\n              .transition()\r\n              .delay(1000)\r\n              .duration(2000)\r\n              .ease(\"linear\")\r\n              .attr(\"stroke-dashoffset\", 0)\r\n              .attr(\"visibility\", (scope.isRULArea)? 'visible': 'hidden');\r\n          }\r\n\r\n         \r\n          \r\n\r\n          // Render line at today. yAxis is ranges from 0 to 1 as per design\r\n          var lineData = [\r\n            {\"xAxis\": todayX, \"yAxis\": 0},\r\n            {\"xAxis\": todayX, \"yAxis\": 100}\r\n          ];\r\n          /* today-line group */\r\n          var todayGroup = chartBody.append(\"g\").attr(\"id\", \"today-group\");\r\n          todayGroup.append(\"path\")\r\n            .datum(lineData)\r\n            .attr(\"id\", \"life-chart-todayLine\")\r\n            .attr(\"class\", \"todayLine\")\r\n            .attr(\"d\", line);\r\n          todayGroup.append(\"text\")\r\n            .attr(\"id\", \"life-chart-todayLabel\")\r\n            .attr(\"class\", \"lifeChartAxis\")\r\n            .attr(\"transform\", \"translate(\" + x(todayX) + \",\" + 0 + \")\")\r\n            .attr(\"dx\", \"5px\")\r\n            .attr(\"dy\", \"10px\")\r\n            .text(\"Today\");\r\n          // render circular intersection dot\r\n          todayGroup.selectAll(\"dot\")\r\n          .data(todayPoint)\r\n          .enter().append(\"circle\")\r\n            .attr(\"id\", \"life-chart-intersect\")\r\n            .attr(\"class\", \"dots\")\r\n            .attr(\"r\", \"4\")\r\n            .attr(\"cx\", function(d) {\r\n                return x(d.xAxis);\r\n            })\r\n            .attr(\"cy\", function(d){\r\n              return y(d.yAxis);\r\n            });\r\n          todayGroup.attr(\"visibility\", (scope.chartType === 'RUL')? ((scope.isRULTodayLine)? 'visible': 'hidden') : ((scope.isRODTodayLine)? 'visible': 'hidden'));\r\n\r\n          chartBody.append(\"rect\")\r\n            .attr(\"id\", \"chart-rect\" + \"-\" + scope.chartType)\r\n            .attr(\"fill\", \"#3ed1db\")\r\n            .style(\"opacity\", 1e-6)\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height / 2)\r\n            .on({\r\n              \"mouseover\": function(d) {\r\n                showHoverLine();\r\n                scope.$apply();\r\n              },\r\n              \"mouseout\": function(d) {\r\n                hideHoverLine();\r\n                scope.$apply();\r\n              }\r\n            })\r\n            .on(\"mousemove\", function(d){\r\n              var mouseX = d3.mouse(this)[0];\r\n              var mouseY = d3.mouse(this)[1];\r\n              // NOTE: round number to nearest 100\r\n              // var xPoint = Math.ceil((x.invert(mouseX))/100)*100;\r\n\r\n              var xPoint = Number(parseFloat(x.invert(mouseX)).toFixed(2));\r\n\r\n              if(scope.chartType === 'ROD'){\r\n                var xPoint = Math.ceil((x.invert(mouseX))/100)*100;\r\n              }\r\n              if((scope.chartType === 'RUL') ? scope.isRULHealthLine : false){\r\n                var healthLinePoint = _.find(healthDataTemp, function(d){\r\n                  return d.xAxis == xPoint;\r\n                });\r\n              }\r\n              // if((scope.chartType === 'RUL')? (scope.isRULSiteAvgLine): (scope.isRODSiteAvgLine)){\r\n              //   var siteAvgLinePoint = _.find(siteAvgData, function(d){\r\n              //     return d.xAxis === xPoint;\r\n              //   });\r\n              // }\r\n              // if((scope.chartType === 'RUL')? (scope.isRULTrendLine): (scope.isRODTrendLine)){\r\n              //   var trendLinePoint = _.find(trendData, function(d){\r\n              //     return d.xAxis === xPoint;\r\n              //   });\r\n              // }\r\n              if((scope.chartType === 'RUL')? (scope.isRULArea): false){\r\n                var RULPoint = _.find(rulData, function(d){\r\n                  return d.xAxis == xPoint;\r\n                });\r\n              }\r\n              if((scope.chartType === 'RUL')? (scope.isRULArea): false){\r\n                var RULMinPoint = _.find(rulMinData, function(d){\r\n                  return d.xAxis == xPoint;\r\n                });\r\n              }\r\n              if((scope.chartType === 'RUL')? (scope.isRULArea): false){\r\n                var RULMaxPoint = _.find(rulMaxData, function(d){\r\n                  return d.xAxis == xPoint;\r\n                });\r\n              }\r\n\r\n              if((scope.chartType === 'ROD') && (scope.isROD)){\r\n                var healthLinePoint = _.find(healthData, function(d){\r\n                  return d.xAxis == xPoint;\r\n                });\r\n              }\r\n\r\n\r\n              if(healthLinePoint){\r\n                hoverLine.attr(\"x1\", x(healthLinePoint.xAxis)).attr(\"x2\", x(healthLinePoint.xAxis));\r\n                healthLineCircle\r\n                  .style(\"opacity\", 1)\r\n                  .attr(\"cx\", x(healthLinePoint.xAxis))\r\n                  .attr(\"cy\", y(healthLinePoint.yAxis));\r\n                scope.xvalue = healthLinePoint.xAxis;\r\n                scope.healthvalue = healthLinePoint.yAxis;\r\n              }\r\n\r\n              if((scope.chartType === 'ROD') && (scope.isROD)){\r\n                if(!healthLinePoint){\r\n                  hoverLine.attr(\"x1\", x(todayX)).attr(\"x2\", x(todayX));\r\n                  healthLineCircle\r\n                  .style(\"opacity\", 1)\r\n                  .attr(\"cx\", x(todayX))\r\n                  .attr(\"cy\", y(todayY));\r\n                }\r\n              }\r\n              // if(trendLinePoint){\r\n              //   hoverLine.attr(\"x1\", x(trendLinePoint.xAxis)).attr(\"x2\", x(trendLinePoint.xAxis));\r\n              //   trendLineCircle\r\n              //     .style(\"opacity\", 1)\r\n              //     .attr(\"cx\", x(trendLinePoint.xAxis))\r\n              //     .attr(\"cy\", y(trendLinePoint.yAxis));\r\n              //   scope.xvalue = trendLinePoint.xAxis;\r\n              //   scope.trendvalue = trendLinePoint.yAxis;\r\n              // }\r\n              // if(siteAvgLinePoint){\r\n              //   hoverLine.attr(\"x1\", x(siteAvgLinePoint.xAxis)).attr(\"x2\", x(siteAvgLinePoint.xAxis));\r\n              //   siteAvgLineCircle\r\n              //     .style(\"opacity\", 1)\r\n              //     .attr(\"cx\", x(siteAvgLinePoint.xAxis))\r\n              //     .attr(\"cy\", y(siteAvgLinePoint.yAxis));\r\n              //   scope.xvalue = siteAvgLinePoint.xAxis;\r\n              //   scope.siteavgvalue = siteAvgLinePoint.yAxis;\r\n              // }\r\n              if(RULPoint){\r\n                hoverLine.attr(\"x1\", x(RULPoint.xAxis)).attr(\"x2\", x(RULPoint.xAxis));\r\n                rulAvgCircle\r\n                  .datum(RULPoint)\r\n                  .style(\"opacity\", 1)\r\n                  .attr(\"cx\", function(d){ return x(d.xAxis);})\r\n                  .attr(\"cy\", function(d){ return y(d.yAxis);});\r\n                scope.xvalue = RULPoint.xAxis;\r\n                scope.trendvalue = RULPoint.yAxis;\r\n              }\r\n              if(RULMinPoint){\r\n                hoverLine.attr(\"x1\", x(RULMinPoint.xAxis)).attr(\"x2\", x(RULMinPoint.xAxis));\r\n                rulMinCircle\r\n                  .datum(RULMinPoint)\r\n                  .style(\"opacity\", 1)\r\n                  .attr(\"cx\", function(d){ return x(d.xAxis);})\r\n                  .attr(\"cy\", function(d){ return y(d.yAxis);});\r\n                scope.rulminvalue = RULMinPoint.yAxis;\r\n              }\r\n              if(RULMaxPoint){\r\n                hoverLine.attr(\"x1\", x(RULMaxPoint.xAxis)).attr(\"x2\", x(RULMaxPoint.xAxis));\r\n                rulMaxCircle\r\n                  .datum(RULMaxPoint)\r\n                  .style(\"opacity\", 1)\r\n                  .attr(\"cx\", function(d){ return x(d.xAxis);})\r\n                  .attr(\"cy\", function(d){ return y(d.yAxis);});\r\n                scope.rulmaxvalue = RULMaxPoint.yAxis;\r\n              }\r\n              scope.$apply();\r\n            });\r\n            var hoverLine = chartBody.append('line')\r\n              .attr(\"id\", \"hover-line\")\r\n              .attr({ 'x1': 10, 'y1': 0, 'x2': 10, 'y2': height/2 })\r\n              .attr('class', 'hoverLine')\r\n              .style(\"opacity\", 1e-6); // hidden by default\r\n            function showHoverLine() {\r\n              hoverLine.style(\"opacity\", 1);\r\n\t\t\t\t\t\t\tif(scope.chartType === 'RUL' && scope.isRULHealthLine){\r\n\t\t\t\t\t\t\t\thealthLineCircle.style(\"opacity\", 1);\r\n\t\t\t\t\t\t\t} else if(scope.chartType === 'ROD' && scope.isROD){\r\n\t\t\t\t\t\t\t\thealthLineCircle.style(\"opacity\", 1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// if(scope.chartType === 'RUL' && scope.isRULTrendLine){\r\n\t\t\t\t\t\t\t// \ttrendLineCircle.style(\"opacity\", 1);\r\n\t\t\t\t\t\t\t// } else if(scope.chartType === 'ROD' && scope.isRODTrendLine){\r\n\t\t\t\t\t\t\t// \ttrendLineCircle.style(\"opacity\", 1);\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t// if(scope.chartType === 'RUL' && scope.isRULSiteAvgLine){\r\n\t\t\t\t\t\t\t// \tsiteAvgLineCircle.style(\"opacity\", 1);\r\n\t\t\t\t\t\t\t// } else if(scope.chartType === 'ROD' && scope.isRODSiteAvgLine){\r\n\t\t\t\t\t\t\t// \tsiteAvgLineCircle.style(\"opacity\", 1);\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\tif(scope.chartType === 'RUL' && scope.isRULArea){\r\n\t\t\t\t\t\t\t\trulAvgCircle.style(\"opacity\", 1);\r\n\t              rulMinCircle.style(\"opacity\", 1);\r\n\t              rulMaxCircle.style(\"opacity\", 1);\r\n\t\t\t\t\t\t\t}\r\n            }\r\n            function hideHoverLine() {\r\n              hoverLine.style(\"opacity\", 1e-6);\r\n              healthLineCircle.style(\"opacity\", 1e-6);\r\n              // trendLineCircle.style(\"opacity\", 1e-6);\r\n              // siteAvgLineCircle.style(\"opacity\", 1e-6);\r\n              rulAvgCircle.style(\"opacity\", 1e-6);\r\n              rulMinCircle.style(\"opacity\", 1e-6);\r\n              rulMaxCircle.style(\"opacity\", 1e-6);\r\n              scope.xvalue = null;\r\n              // scope.trendvalue = null;\r\n              // scope.siteavgvalue = null;\r\n              scope.healthvalue = null;\r\n              scope.rulminvalue = null;\r\n              scope.rulmaxvalue = null;\r\n            }\r\n\r\n            var healthLineCircle = chartBody.append(\"circle\")\r\n              .attr(\"cx\", 0)\r\n              .attr(\"cy\", 0)\r\n              .attr(\"r\", 6)\r\n              .attr(\"fill\", \"#65318f\")\r\n              .style(\"opacity\", 1e-6);\r\n            // var trendLineCircle = chartBody.append(\"circle\")\r\n            //   .attr(\"cx\", 0)\r\n            //   .attr(\"cy\", 0)\r\n            //   .attr(\"r\", 3)\r\n            //   .attr(\"fill\", \"#ea148c\")\r\n            //   .style(\"opacity\", 1e-6);\r\n            // var siteAvgLineCircle = chartBody.append(\"circle\")\r\n            //   .attr(\"cx\", 0)\r\n            //   .attr(\"cy\", 0)\r\n            //   .attr(\"r\", 3)\r\n            //   .attr(\"fill\", \"#d78219\")\r\n            //   .style(\"opacity\", 1e-6);\r\n            //TODO: try to reuse one circle point instead of three\r\n            var rulAvgCircle = chartBody.append(\"circle\")\r\n              .attr(\"cx\", 0)\r\n              .attr(\"cy\", 0)\r\n              .attr(\"r\", 3)\r\n              .attr(\"fill\", \"#479fa5\")\r\n              .style(\"opacity\", 1e-6);\r\n            var rulMinCircle = chartBody.append(\"circle\")\r\n              .attr(\"cx\", 0)\r\n              .attr(\"cy\", 0)\r\n              .attr(\"r\", 3)\r\n              .attr(\"fill\", \"#479fa5\")\r\n              .style(\"opacity\", 1e-6);\r\n            var rulMaxCircle = chartBody.append(\"circle\")\r\n              .attr(\"cx\", 0)\r\n              .attr(\"cy\", 0)\r\n              .attr(\"r\", 3)\r\n              .attr(\"fill\", \"#479fa5\")\r\n              .style(\"opacity\", 1e-6);\r\n\r\n            if(scope.isRULArea){\r\n              var rulMinLastPoint = _.last(rulMinData);\r\n            \tvar rulAvgLastPoint = _.last(rulData);\r\n            \tvar rulMaxLastPoint = _.last(rulMaxData);\r\n            \tvar rulMinLastData = [\r\n            \t\trulMinLastPoint, {\"xAxis\": parseFloat(rulMinLastPoint.xAxis).toFixed(2), \"yAxis\": -25}\r\n            \t];\r\n            \tvar rulAvgLastData = [\r\n            \t\trulAvgLastPoint, {\"xAxis\": parseFloat(rulAvgLastPoint.xAxis).toFixed(2), \"yAxis\": -55}\r\n            \t];\r\n            \tvar rulMaxLastData = [\r\n            \t\trulMaxLastPoint, {\"xAxis\": parseFloat(rulMaxLastPoint.xAxis).toFixed(2), \"yAxis\": -65}\r\n              ];\r\n              \r\n              if(rulMinLastPoint.yAxis > 0 || scope.data.showMoreLines){\r\n                var rulMinLabelLine = chartBody.append(\"path\")\r\n                .datum(rulMinLastData)\r\n                .attr(\"id\", \"life-chart-minLine\")\r\n                .attr(\"class\", \"rulLabelLine\")\r\n                .attr(\"d\", line);\r\n                var rulMinLabelLineLength = rulMinLabelLine.node().getTotalLength();\r\n                var xRulMinLabelPos = x(rulMinLastPoint.xAxis) - 30;\r\n                rulMinLabelLine\r\n                  .attr(\"stroke-dasharray\", rulMinLabelLineLength + \" \" + rulMinLabelLineLength)\r\n                  .attr(\"stroke-dashoffset\", rulMinLabelLineLength)\r\n                .transition()\r\n                  .delay(2000)\r\n                  .duration(2000)\r\n                  .ease(\"linear\")\r\n                .attr(\"stroke-dashoffset\", 0);\r\n                chartBody.append(\"text\")\r\n              \t\t.attr(\"id\", \"life-chart-minLabel\")\r\n              \t\t.attr(\"class\", \"rulLineLabel\")\r\n              \t\t.attr(\"text-anchor\", \"middle\")\r\n              \t\t.attr(\"transform\", \"translate(\" + xRulMinLabelPos + \",\" + y(-25) + \")\")\r\n                  .attr( \"fill-opacity\", 0 )\r\n                  .transition()\r\n                    .delay(2000)\r\n                    .duration(2000)\r\n                    .ease(\"linear\")\r\n                  .attr( \"fill-opacity\", 1 )\r\n                  .text(rulMinLastPoint.xAxis + \" \" + \"(min)\");\r\n              }\r\n              if(rulAvgLastPoint.yAxis > 0 || scope.data.showMoreLines) {\r\n                var rulAvgLabelLine = chartBody.append(\"path\")\r\n                .datum(rulAvgLastData)\r\n                .attr(\"id\", \"life-chart-avgLine\")\r\n                .attr(\"class\", \"rulLabelLine\")\r\n                .attr(\"d\", line);\r\n                var rulAvgLabelLineLength = rulAvgLabelLine.node().getTotalLength();\r\n                var xRulAvgLabelPos = x(rulAvgLastPoint.xAxis) - 30;\r\n                rulAvgLabelLine\r\n                  .attr(\"stroke-dasharray\", rulAvgLabelLineLength + \" \" + rulAvgLabelLineLength)\r\n                  .attr(\"stroke-dashoffset\", rulAvgLabelLineLength)\r\n                .transition()\r\n                  .delay(2000)\r\n                  .duration(2000)\r\n                  .ease(\"linear\")\r\n                .attr(\"stroke-dashoffset\", 0);\r\n                chartBody.append(\"text\")\r\n              \t\t.attr(\"id\", \"life-chart-avgLabel\")\r\n              \t\t.attr(\"class\", \"rulLineLabel\")\r\n              \t\t.attr(\"text-anchor\", \"middle\")\r\n              \t\t.attr(\"transform\", \"translate(\" + xRulAvgLabelPos + \",\" + y(-55) + \")\")\r\n                  .attr( \"fill-opacity\", 0 )\r\n                  .transition()\r\n                    .delay(2000)\r\n                    .duration(2000)\r\n                    .ease(\"linear\")\r\n                  .attr( \"fill-opacity\", 1 )\r\n                  .text(rulAvgLastPoint.xAxis + \" \" + \"(avg)\");\r\n              }\r\n              if(rulMaxLastPoint.yAxis > 0 || scope.data.showMoreLines){\r\n                var rulMaxLabelLine = chartBody.append(\"path\")\r\n                .datum(rulMaxLastData)\r\n                .attr(\"id\", \"life-chart-maxLine\")\r\n                .attr(\"class\", \"rulLabelLine\")\r\n                .attr(\"d\", line);\r\n                var rulMaxLabelLineLength = rulMaxLabelLine.node().getTotalLength();\r\n                var xRulMaxLabelPos = x(rulMaxLastPoint.xAxis) - 30;\r\n                rulMaxLabelLine\r\n                  .attr(\"stroke-dasharray\", rulMaxLabelLineLength + \" \" + rulMaxLabelLineLength)\r\n                  .attr(\"stroke-dashoffset\", rulMaxLabelLineLength)\r\n                  .transition()\r\n                    .delay(2000)\r\n                    .duration(2000)\r\n                    .ease(\"linear\")\r\n                  .attr(\"stroke-dashoffset\", 0);\r\n                chartBody.append(\"text\")\r\n              \t\t.attr(\"id\", \"life-chart-maxLabel\")\r\n              \t\t.attr(\"class\", \"rulLineLabel\")\r\n              \t\t.attr(\"text-anchor\", \"middle\")\r\n              \t\t.attr(\"transform\", \"translate(\" + xRulMaxLabelPos + \",\" + y(-65) + \")\")\r\n                  .attr( \"fill-opacity\", 0 )\r\n                  .transition()\r\n                    .delay(2000)\r\n                    .duration(2000)\r\n                    .ease(\"linear\")\r\n                  .attr( \"fill-opacity\", 1 )\r\n                  .text((rulMaxLastPoint.xAxis + \" \" + \"(max)\"));\r\n              }\r\n            }\r\n          // chartBody.append(\"text\")\r\n          //   .attr(\"id\", \"life-chart-todayLabel\")\r\n          //   .attr(\"class\", \"lifeChartAxis\")\r\n          //   .attr(\"transform\", \"translate(\" + x(todayX) + \",\" + 0 + \")\")\r\n          //   .attr(\"dx\", \"5px\")\r\n          //   .attr(\"dy\", \"10px\")\r\n          //   .text(\"Today\");\r\n          // render labels\r\n          if(scope.chartType == 'ROD'){\r\n            chartBody.append(\"text\")\r\n            .attr(\"id\", \"life-chart-yLabel\")\r\n            .attr(\"class\", \"lifeChartLabels\")\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .attr(\"transform\", \"translate(\" + (-45) + \",\" + ((height/2)-150) + \") rotate(-90)\")\r\n            .text(scope.data.yLabel + ' (%)');\r\n          } else{\r\n            chartBody.append(\"text\")\r\n            .attr(\"id\", \"life-chart-yLabel\")\r\n            .attr(\"class\", \"lifeChartLabels\")\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .attr(\"transform\", \"translate(\" + (-45) + \",\" + ((height/2)-50) + \") rotate(-90)\")\r\n            .text(scope.data.yLabel + ' (%)');\r\n          }\r\n          \r\n\r\n          chartBody.append(\"text\")\r\n            .attr(\"id\", \"life-chart-xLabel\")\r\n            .attr(\"class\", \"lifeChartLabels\")\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .attr(\"transform\", \"translate(\" + (50) + \",\" + ((height + padding)/2) + \")\")\r\n            .text(scope.data.xLabel);\r\n\r\n          //TODO: RUL text\r\n          // chartBody.append(\"text\")\r\n          //   .attr(\"id\", \"life-chart-rulLabel\")\r\n          //   .attr(\"class\", \"lifeChartAxis\")\r\n          //   .attr(\"transform\", \"translate(\" + (width - 100) + \",\" + (height/3) + \")\")\r\n          //   .attr(\"dx\", \"5px\")\r\n          //   .attr(\"dy\", \"10px\")\r\n          //   .text(\"RUL\");\r\n\r\n        };\r\n\r\n        scope.$watch('data', function(newValue) {\r\n          if(newValue){\r\n            $timeout(function() {\r\n              scope.render();\r\n            }, 300);\r\n          }\r\n        }, true);\r\n\r\n        // scope.render(scope.data, scope.today);\r\n\r\n        // $timeout(function() {\r\n        //   scope.$watch('today', function(newValue) {\r\n        //     if(newValue){\r\n        //       element.removeAttr(\"life-chart\");\r\n        //       $compile(element)(scope);\r\n        //       scope.render(scope.data, scope.today);\r\n        //     }\r\n        //   }, true);\r\n        // }, 3000);\r\n\r\n      } // link function ends\r\n    } // return ends\r\n  }]); // directive ends\r\n})();\r\n","'use strict';\r\nangular.module('cyient.lineDashedLine', [])\r\n.directive('lineDashedLine', [function() {\r\n    return {\r\n        scope: {\r\n            data: \"=\"\r\n        },\r\n        restrict: \"AE\",\r\n        templateUrl: \"directives/lineDashedLine/linedashedline.html\",\r\n        link: function(scope, elem, attrs) {\r\n\r\n            var container = elem[0];\r\n\r\n            scope.$watch(\"data\", function(newVal, oldVal) {\r\n                render();\r\n            }, true);\r\n\r\n            var xKey = 'xValue', yKey = 'yValue';\r\n\r\n            function render() {\r\n\r\n                var failures = scope.data;\r\n\r\n                d3.select(container).select(\"svg\").text(\"\");\r\n\r\n                var containerWidth = elem.width();\r\n                var containerHeight = elem.height();\r\n\r\n                var parseDate = d3.time.format(\"%Y%m%d\").parse;\r\n\r\n                var margin = {top: 10, right: 10, bottom: 150, left: 55},\r\n                    width = containerWidth - margin.left - margin.right,\r\n                    height = containerHeight - margin.top - margin.bottom;\r\n\r\n                var x = d3.time.scale().range([0, width]),\r\n                    y = d3.scale.linear().range([height, 0]),\r\n                    color = d3.scale.category10();\r\n\r\n                var xAxis = d3.svg.axis()\r\n                        .scale(x)\r\n                        .orient(\"bottom\")\r\n                        .tickFormat(d3.time.format(\"%d %b\"));\r\n\r\n                var yAxis = d3.svg.axis()\r\n                        .scale(y)\r\n                        .orient(\"left\");\r\n\r\n                var line = d3.svg.line()\r\n                    .interpolate(\"basis\")\r\n                    .x(function(d) { return x(d[xKey]); })\r\n                    .y(function(d) { return y(d[yKey]); });\r\n\r\n                var svg = d3.select(container).select(\"svg\")\r\n                    .attr(\"width\", width + margin.left + margin.right)\r\n                    .attr(\"height\", height + margin.top + margin.bottom)\r\n                    .append(\"g\")\r\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n                color.domain(d3.keys(failures[0]).filter(function(key) { return key !== \"date\"; }));\r\n\r\n                x.domain([\r\n                    d3.min(failures, function(c) { return d3.min(c.values, function(v) { return v[xKey]; }); }),\r\n                    d3.max(failures, function(c) { return d3.max(c.values, function(v) { return v[xKey]; }); })\r\n                ]);\r\n\r\n                y.domain([\r\n                    0,\r\n                    d3.max(failures, function(c) { return d3.max(c.values, function(v) { return v[yKey]; }); })\r\n                ]);\r\n\r\n                svg.append(\"g\")\r\n                    .attr(\"class\", \"x axis\")\r\n                    .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n                    .call(xAxis);\r\n\r\n                svg.append(\"g\")\r\n                    .attr(\"class\", \"y axis\")\r\n                    .call(yAxis);\r\n\r\n                var failure = svg.selectAll(\".failure\")\r\n                    .data(failures)\r\n                    .enter().append(\"g\")\r\n                    .attr(\"class\", \"failure\");\r\n\r\n                failure.append(\"path\")\r\n                    .attr(\"class\", \"line\")\r\n                    .style(\"stroke-dasharray\", function(d,i) {\r\n                        if (i % 2 === 0)\r\n                            return (\"1, 0\");\r\n                        else \r\n                            return (\"2, 5\");\r\n                    })\r\n                    .attr(\"d\", function(d) { return line(d.values); })\r\n                    .style(\"fill\", \"none\")\r\n                    .style(\"stroke\", function(d) { return color(d.name); });\r\n\r\n                var focus = svg.append(\"g\")\r\n                    .attr(\"class\", \"focus\")\r\n                    .style(\"display\", \"none\");\r\n\r\n                focus.append(\"circle\")\r\n                    .attr(\"r\", 4.5);\r\n\r\n                focus.append(\"text\")\r\n                    .attr(\"x\", 9)\r\n                    .attr(\"dy\", \".35em\");\r\n\r\n            } // End of render function\r\n            \r\n        } // End of link function\r\n    }; // End of return object\r\n}]); // End of directive\r\n","'use strict';\r\n(function(){\r\n  angular.module('cyient.loader', [])\r\n    .directive('loading', ['$http', function ($http){\r\n    return {\r\n      restrict: 'A',\r\n      templateUrl: 'directives/loader/loader.html',\r\n      link: function (scope, elm, attrs){\r\n        scope.isLoading = function(){\r\n          return $http.pendingRequests.length > 0;\r\n        };\r\n        scope.$watch(scope.isLoading, function(val){\r\n          if(val){\r\n            elm.show();\r\n          } else{\r\n            elm.hide();\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    }]);\r\n})();\r\n","'use strict';\r\n(function(){\r\n  angular.module(\"directives/miniLifeChart/miniLifeChart.html\", []).run([\"$templateCache\", function($templateCache) {\r\n    $templateCache.put(\"directives/miniLifeChart/miniLifeChart.html\",\r\n    \"<div><div id=\\\"mini-lifechart-graph\\\"><svg class=\\\"mini-life-canvas\\\"></svg></div></div>\");\r\n  }]);\r\n  angular.module('cyient.miniLifechart', [\"directives/miniLifeChart/miniLifeChart.html\"])\r\n  .directive('miniLifechart', ['$q', '$timeout', '$log', function($q, $timeout, $log) {\r\n    return {\r\n      restrict: 'E',\r\n      replace: true,\r\n      scope: {\r\n        width: '=',\r\n        height: '=',\r\n        todayX: '=',\r\n        todayY: '=',\r\n        smh: '=',\r\n        rul: '=',\r\n        data: '=data',\r\n        dotRadius: \"=\",\r\n      },\r\n      templateUrl: \"directives/miniLifeChart/miniLifeChart.html\",\r\n      link: function(scope, element, attrs) {\r\n\r\n        var margin = {\r\n          top: 10,\r\n          right: 15,\r\n          bottom: 30,\r\n          left: 10\r\n        };\r\n        // define SVG canvas\r\n        var svg = d3.select(element.children()[0]).select(\"svg\")\r\n          .attr(\"width\", \"100%\")\r\n          .attr(\"height\", scope.height + margin.bottom)\r\n          .append(\"g\")\r\n            .attr(\"id\", \"mini-lifechart-group\")\r\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n        // make the visualization responsive by watching for changes in window size\r\n        window.onresize = function() {\r\n          return scope.$apply();\r\n        };\r\n        scope.$watch(function() {\r\n          return angular.element(window)[0].innerWidth;\r\n        }, function() {\r\n          var innerWidth = angular.element(window)[0].innerWidth;\r\n          if(innerWidth >= 1024 && innerWidth < 1200) {\r\n            scope.width = 95;\r\n          }\r\n          if(innerWidth >= 1200) {\r\n            scope.width = 125;\r\n          }\r\n          return scope.render(scope.data, scope.todayX, scope.todayY);\r\n        });\r\n\r\n        scope.render = function(data, todayX, todayY) {\r\n\r\n          if(!data){\r\n            return\r\n          }\r\n\r\n          var dots = {\r\n            originPos: 0,\r\n            xTodayPos: null,\r\n            yTodayPos: null,\r\n            rulPos: null\r\n          };\r\n\r\n          // Trim the graph data\r\n          for (var i = data.length-1; i >= 0; i--){\r\n            if (data[i].yAxis < 0){\r\n              data.splice(i, 1); // remove negative points\r\n            }\r\n          }\r\n\r\n          // return first smallest yAxis value\r\n          var first_smallest = Number.POSITIVE_INFINITY;\r\n          for (var i in data) {\r\n            /* If current element is smaller than first then update both first and second */\r\n            if (data[i].yAxis < first_smallest) {\r\n              first_smallest = data[i].yAxis;\r\n            }\r\n          }\r\n\r\n          // return first largest xAxis value\r\n          var first_largest = Math.max.apply(Math, data.map(function(o){return o.xAxis;}));\r\n          dots.rulPos = first_largest;\r\n\r\n          // return data midpoint of trimmed graph data\r\n          var midpoint = data[Math.round((data.length - 1) / 2)];\r\n          dots.xTodayPos = todayX;\r\n\r\n          // add label property and Today label to trimmed data\r\n          for (var j in data) {\r\n            data[j].label = \"\";\r\n            if(data[j].xAxis === todayX){\r\n              data[j].label = \"Today\";\r\n              dots.yTodayPos = data[j].yAxis;\r\n            }\r\n          }\r\n\r\n          var width = scope.width;\r\n          var height = scope.height;\r\n\r\n          var x = d3.scale.linear()\r\n            .domain([0, d3.max(data, function(d) {\r\n              return d.xAxis;\r\n            })])\r\n            .range([0, width]);\r\n\r\n          var y = d3.scale.linear()\r\n            .domain([0, d3.max(data, function(d) {\r\n              return d.yAxis;\r\n            })])\r\n            .range([height, 0]);\r\n\r\n          var xAxisLine = d3.svg.axis()\r\n            .scale(x)\r\n            .orient(\"bottom\")\r\n            .ticks(0)\r\n            .tickSize(0)\r\n            .tickPadding(12);\r\n\r\n          var yAxisLine = d3.svg.axis()\r\n            .scale(y)\r\n            .orient(\"left\")\r\n            .ticks(0)\r\n            .tickSize(0)\r\n            .tickPadding(12);\r\n\r\n          svg.selectAll(\"*\").remove();\r\n          var chartBody = svg.append(\"g\");\r\n\r\n          // define line to extend axes (as per design)\r\n          var line = d3.svg.line()\r\n            .interpolate(\"monotone\")\r\n            .x(function(d) {\r\n              return x(d.xAxis);\r\n            })\r\n            .y(function(d) {\r\n              return y(d.yAxis);\r\n            });\r\n\r\n          var mainArea = function(datum, field) {\r\n            return d3.svg.area()\r\n              .interpolate(\"monotone\")\r\n              .x(function(d) {\r\n                return x(d.xAxis);\r\n              })\r\n              .y0(height)\r\n              .y1(function(d) {\r\n                return y(d[field] || 0);\r\n              })(datum);\r\n          };\r\n\r\n          // define RUL area with linear interpolation\r\n          var rulArea = function(datum, field){\r\n            return d3.svg.area()\r\n              .interpolate(\"linear\")\r\n              .x(function(d) {\r\n                return x(d.xAxis);\r\n              })\r\n              .y0(height)\r\n              .y1(function(d) {\r\n                return y(d[field] || 0);\r\n              })(datum);\r\n          };\r\n\r\n          var mainData = [];\r\n          var todayIndex = null, mainTickValue = null;\r\n          for (var i = 0, len = data.length; i < len; i++){\r\n            if(data[i].label === \"Today\"){\r\n              // find index of data point where label is \"Today\"\r\n              todayIndex = data.indexOf(data[i]);\r\n              mainTickValue = data[todayIndex].xAxis;\r\n            }\r\n          }\r\n\r\n          // slice original data until today index\r\n          mainData = data.slice(0, todayIndex+1);\r\n\r\n          // define tick values\r\n          var totalTickValue = data[data.length-1].xAxis;\r\n          var secondTickValue = totalTickValue - mainTickValue;\r\n\r\n          // filter out data that has labels Today and RUL\r\n          // this data will be used to render the second area\r\n          var data2 = data.filter(function(el) {\r\n            return el.label === \"Today\" || el.xAxis === first_largest;\r\n          });\r\n\r\n          // render X axis\r\n          svg.append(\"g\")\r\n            .attr(\"class\", \"x mlifeChartAxis\")\r\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n            .call(xAxisLine);\r\n\r\n          // render Y axis\r\n          svg.append(\"g\")\r\n            .attr(\"class\", \"y mlifeChartAxis\")\r\n            .call(yAxisLine);\r\n\r\n          // add main area\r\n          chartBody.append('path')\r\n            .attr('class', 'mArea1')\r\n            .attr('d', mainArea(mainData))\r\n            .attr('opacity', 1)\r\n            .transition().duration(1000)\r\n            .attr('d', mainArea(mainData, 'yAxis'));\r\n\r\n          // add second area\r\n          chartBody.append('path')\r\n            .attr('class', 'mArea2')\r\n            .attr('d', rulArea(data2))\r\n            .attr('opacity', 1)\r\n            .transition().duration(2000)\r\n            .attr('d', rulArea(data2, 'yAxis'));\r\n\r\n          var mainLine = chartBody.append(\"path\")\r\n            .datum(mainData)\r\n            .attr(\"class\", \"mlifeChartLine\")\r\n            .transition()\r\n              .duration(3000)\r\n              .attr(\"d\", line);\r\n\r\n          var rulLine = chartBody.append(\"path\")\r\n            .datum(data2)\r\n            .attr(\"class\", \"mlifeChartLine\")\r\n            .style(\"stroke-dasharray\", (\"3, 3\"))\r\n            .transition()\r\n              .duration(3000)\r\n              .attr(\"d\", line);\r\n\r\n          // draw line at today\r\n          var lineData = [\r\n            {\"xAxis\": dots.xTodayPos, \"yAxis\": 0},\r\n            {\"xAxis\": dots.xTodayPos, \"yAxis\": dots.yTodayPos}\r\n          ];\r\n          var thisWidth;\r\n          var todayLine = chartBody.append(\"path\")\r\n            .datum(lineData)\r\n            .attr(\"class\", \"midpointLine\")\r\n            .attr(\"d\", line);\r\n            var todayLineLength = todayLine.node().getTotalLength();\r\n            todayLine\r\n              .attr(\"stroke-dasharray\", todayLineLength + \" \" + todayLineLength)\r\n              .attr(\"stroke-dashoffset\", todayLineLength)\r\n              .transition()\r\n              .duration(1000)\r\n              .ease(\"linear\")\r\n              .attr(\"stroke-dashoffset\", 0);\r\n\r\n          // x-axis labels\r\n          chartBody.append(\"text\")\r\n            .attr(\"id\", \"main-label\")\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", height + 5)\r\n            .attr(\"dy\", \".85em\")\r\n            // .attr(\"dx\", (width-25)/2+5)\r\n            .attr(\"class\", \"mlifeChartLabels\")\r\n            .text(Math.round(scope.smh));\r\n            // .each(function (d, i) {\r\n            //   thisWidth = this.getComputedTextLength()\r\n            // })\r\n            // .attr(\"style\", \"transform:translateX(\"+ -thisWidth + \"px\" + \")\");\r\n\r\n          chartBody.append(\"text\")\r\n            .attr(\"id\", \"secondary-label\")\r\n            .attr(\"x\", width - 25)\r\n            .attr(\"y\", height + 5)\r\n            .attr(\"dy\", \".85em\")\r\n            .attr(\"class\", \"mlifeChartLabels\")\r\n            .text(Math.round(scope.rul));\r\n\r\n          // add 'Today' label\r\n          // svg.append(\"text\")\r\n          //   .attr(\"id\", \"today-label\")\r\n          //   .attr(\"transform\", \"translate(\" + (x(dots.xTodayPos)-30) + \",\" + (y(todayY)-5) + \")\")\r\n          //   .attr(\"class\", \"mlifeChartLabels\")\r\n          //   .text(\"Today\");\r\n\r\n        };\r\n\r\n        scope.$watch('data', function(newValue) {\r\n          if(newValue){\r\n            scope.render(scope.data, scope.todayX, scope.todayY);\r\n          }\r\n        }, true);\r\n\r\n      } // link function ends\r\n    } // return ends\r\n  }]); // directive ends\r\n})();\r\n","'use strict';\r\nangular.module('cyient.onfinishrender', [])\r\n.directive('onFinishRender', ['$timeout', function($timeout) {\r\n    return {\r\n        restrict: \"AE\",\r\n        link: function(scope, elem, attr) {\r\n            if (scope.$last === true) {\r\n                $timeout(function() {\r\n                    scope.$emit(attr.onFinishRender);\r\n                });\r\n            }\r\n        }\r\n    };\r\n}]);\r\n","'use strict';\r\nangular.module('cyient.popup', [])\r\n.directive('popup', [function() {\r\n    return {\r\n        restrict: 'AE',\r\n        transclude: true,\r\n        scope: {\r\n            onClose: '&'\r\n        },\r\n        templateUrl: 'directives/popup/popup.html',\r\n        link: function(scope, elem) {\r\n        }\r\n    };\r\n}])\r\n","'use strict';\r\nangular.module('cyient.progressarc', [])\r\n    .directive('progressArc', [function () {\r\n        return {\r\n            scope: {\r\n                progress: \"=\"\r\n                , type: \"@\", // Possible values: \"type1\", \"type2\"\r\n                label: \"@\", // Optional. Default value: \"Health\"\r\n                radius: \"=\", // Optional. Default value: 85\r\n                radiusDiff: \"=\", // Optional. Default value: (radius - 8)\r\n                avg: \"=\"\r\n                , hidePointer: \"=\"\r\n            }\r\n            , restrict: \"AE\"\r\n            , link: function (scope, elem, attrs) {\r\n\r\n                    function render() {\r\n                        var container = elem[0];\r\n                        var outerRadius = scope.radius || 85;\r\n                        var innerRadius = outerRadius - (scope.radiusDiff || 8);\r\n\r\n                        var width = 2 * outerRadius + 5\r\n                            , height = outerRadius + 30\r\n                            , degrees = 1 * Math.PI;\r\n\r\n                        var label = scope.label || \"Health\";\r\n\r\n                        // Colors for Arcs & Text\r\n                        var foregroundColor = (scope.type === \"type1\") ? \"#ffdd33\" : \"#f7941e\";\r\n                        var backgroundColor = \"#e1e1de\";\r\n                        var textColor = (scope.type === \"type1\") ? \"#fff\" : \"#000\";\r\n\r\n                        // Converts progress values to radians\r\n                        var radianScale = d3.scale.linear()\r\n                            .domain([0, 100])\r\n                            .range([-Math.PI / 2, Math.PI / 2])\r\n                            .clamp(true);\r\n\r\n                        // Converts progress values to degrees\r\n                        var degreeScale = d3.scale.linear()\r\n                            .domain([0, 100])\r\n                            .range([-180, 180])\r\n                            .clamp(true);\r\n\r\n                        var progressStartAngle = radianScale(0);\r\n                        var progressEndAngle = radianScale(scope.progress);\r\n\r\n                        var avgArcStartAngle = radianScale(scope.avg - 1);\r\n                        var avgArcEndAngle = radianScale(scope.avg + 1);\r\n\r\n                        var backgroundArc = d3.svg.arc()\r\n                            .innerRadius(innerRadius)\r\n                            .outerRadius(outerRadius)\r\n                            .startAngle(progressStartAngle)\r\n                            .endAngle(Math.PI / 2);\r\n\r\n                        var foregroundArc = d3.svg.arc()\r\n                            .innerRadius(innerRadius)\r\n                            .outerRadius(outerRadius)\r\n                            .startAngle(progressStartAngle);\r\n\r\n                        var avgArc = d3.svg.arc()\r\n                            .innerRadius(innerRadius)\r\n                            .outerRadius(outerRadius)\r\n                            .startAngle(avgArcStartAngle)\r\n                            .endAngle(avgArcEndAngle);\r\n\r\n                        var svg = d3.select(container).append(\"svg\")\r\n                            .attr(\"width\", width)\r\n                            .attr(\"height\", height)\r\n                            .attr(\"class\", \"progress-arc\")\r\n                            .append(\"g\")\r\n                            .attr(\"transform\", \"translate(0, 10)\");\r\n\r\n                        var meter = svg.append(\"g\")\r\n                            .attr(\"class\", \"season-progress\")\r\n                            .attr(\"transform\", \"translate(\" + outerRadius + \",\" + outerRadius + \")\");\r\n\r\n                        var background = meter.append(\"path\")\r\n                            .datum({\r\n                                endAngle: Math.PI / 2\r\n                            })\r\n                            .style(\"fill\", backgroundColor)\r\n                            .attr(\"d\", backgroundArc);\r\n\r\n                        var foreground = meter.append(\"path\")\r\n                            .datum({\r\n                                endAngle: progressStartAngle\r\n                            })\r\n                            .style(\"fill\", foregroundColor)\r\n                            .attr(\"class\", \"foreground\")\r\n                            .attr(\"d\", foregroundArc);\r\n\r\n                        foreground.transition()\r\n                            .duration(2000)\r\n                            .delay(750)\r\n                            .ease(\"linear\")\r\n                            .attrTween(\"d\", function (d) {\r\n                                var interpolate = d3.interpolate(d.endAngle, progressEndAngle)\r\n                                return function (t) {\r\n                                    d.endAngle = interpolate(t);\r\n                                    return foregroundArc(d);\r\n                                };\r\n                            });\r\n\r\n                        var avgMark = meter.append(\"path\")\r\n                            .datum({\r\n                                endAngle: progressEndAngle\r\n                            })\r\n                            .style(\"fill\", \"#fff\")\r\n                            .style(\"opacity\", 0)\r\n                            .attr(\"d\", avgArc)\r\n\r\n                        // Pointer Height & Pointer Displacement\r\n                        var pHeight = (scope.type === \"type1\") ? 23 : 12;\r\n                        var pDisp = (scope.type === \"type1\") ? 20 : 8;\r\n\r\n                        var pointer = meter.append(\"g\")\r\n                            .attr(\"transform\", function (d) {\r\n                                return \"translate(\" + avgArc.centroid(d) + \")\";\r\n                            })\r\n                            .append(\"svg:image\")\r\n                            .attr(\"xlink:href\", \"svg/pointer.svg\")\r\n                            .attr(\"x\", -4)\r\n                            .attr(\"y\", -pDisp)\r\n                            .attr(\"width\", 8)\r\n                            .attr(\"height\", pHeight)\r\n                            .attr(\"transform\", \"rotate(\" + (degreeScale(scope.avg) / 2) + \")\")\r\n\r\n                        var tip = d3.tip()\r\n                            .attr('class', 'd3-tip')\r\n                            .offset([-10, 0])\r\n                            .html(\"Site Avg: \" + Math.round(scope.avg));\r\n                        svg.call(tip);\r\n                        pointer\r\n                            .on('mouseover', tip.show)\r\n                            .on('mouseout', tip.hide)\r\n\r\n                        if (scope.hidePointer) {\r\n                            pointer.attr(\"display\", \"none\");\r\n                        }\r\n\r\n                        var progressText = meter.append(\"text\")\r\n                            .attr(\"text-anchor\", \"middle\")\r\n                            .attr(\"dy\", \"-.35em\")\r\n                            .attr(\"font-size\", \"35\")\r\n                            .style(\"fill\", textColor)\r\n                            .attr(\"class\", \"progress-percent\")\r\n                            .text(Math.round(scope.progress) + \"%\");\r\n\r\n                        var textGroup = svg.append(\"g\")\r\n                            .attr(\"transform\", \"translate(\" + 0 + \",\" + (outerRadius + 15) + \")\")\r\n                            .attr(\"width\", outerRadius)\r\n                            /*.style(\"fill\", textColor)*/\r\n                            .attr(\"font-size\", \"17\")\r\n                            .attr(\"y\", \"5\");\r\n\r\n                        var zeroText = textGroup.append(\"text\")\r\n                            .attr(\"text-anchor\", \"left\")\r\n                            .attr(\"x\", \"0\")\r\n                            .attr(\"class\", \"startpoint\")\r\n                            .text(\"0\");\r\n\r\n                        var hundredText = textGroup.append(\"text\")\r\n                            .attr(\"text-anchor\", \"end\")\r\n                            .attr(\"x\", 2 * outerRadius + 5)\r\n                            .attr(\"class\", \"endpoint\")\r\n                            .text(\"100\");\r\n\r\n                        var healthText = textGroup.append(\"text\")\r\n                            .attr(\"text-anchor\", \"middle\")\r\n                            .attr(\"x\", outerRadius)\r\n                            .attr(\"class\", \"progress-health\")\r\n                            .text(label);\r\n\r\n                        elem.on(\"$destroy\", function () {\r\n                            tip.destroy();\r\n                        });\r\n                    } // End of render function\r\n\r\n                    scope.$watch('progress', function (newValue) {\r\n                        if (newValue) {\r\n                            d3.select(elem[0]).selectAll('svg.progress-arc').remove(); // Prevent duplicate nodes\r\n                            render();\r\n                        }\r\n                    });\r\n\r\n                } // End of link function\r\n        }; // End of return statement\r\n}]) // End of directive\r\n    .directive(\"smProgressArc\", [function () {\r\n        return {\r\n            scope: {\r\n                progress: \"=\"\r\n            }\r\n            , restrict: \"AE\"\r\n            , link: function (scope, elem, attrs) {\r\n\r\n                    var container = elem[0];\r\n\r\n                    var width = 28; // Measured from given designs\r\n\r\n                    var outerRadius = width / 2;\r\n                    var innerRadius = 0.7 * outerRadius;\r\n\r\n                    // Maps progress percentages to angles\r\n                    var radianScale = d3.scale.linear()\r\n                        .domain([0, 100])\r\n                        .range([-Math.PI / 2, Math.PI / 2])\r\n                        .clamp(true);\r\n\r\n                    var svg = d3.select(container)\r\n                        .append(\"svg\")\r\n                        .attr(\"width\", width)\r\n                        .attr(\"height\", width / 2)\r\n                        .append(\"g\")\r\n                        .attr(\"transform\", \"translate(\" + (width / 2) + \",\" + (width / 2) + \")\");\r\n\r\n                    var arc = d3.svg.arc()\r\n                        .innerRadius(outerRadius)\r\n                        .outerRadius(innerRadius)\r\n                        .startAngle(radianScale(0))\r\n                        .endAngle(radianScale(100));\r\n\r\n                    svg.append(\"path\")\r\n                        .attr(\"class\", \"arc\")\r\n                        .attr(\"d\", arc)\r\n                        .attr(\"fill\", \"#c4c7ce\");\r\n\r\n                    arc.endAngle(radianScale(scope.progress));\r\n\r\n                    svg.append(\"path\")\r\n                        .attr(\"d\", arc)\r\n                        .attr(\"fill\", \"#f7941e\");\r\n\r\n                } // End of link function\r\n        }; // End of return statment\r\n}]); // End of directive","'use strict';\r\n(function(){\r\n  var configData = {\r\n    animate: true,\r\n    max: 100\r\n  };\r\n  angular.module('cyient.progressbar', ['progressbar.template'])\r\n    .constant('progressConfig', {\r\n      animate: true,\r\n      max: 100\r\n    })\r\n    .controller('progressController', progressController)\r\n    .filter('firstLetterCapital', function(){\r\n      return function(input) {\r\n        return (!!input) ? input.charAt(0).toUpperCase() + input.substr(1).toLowerCase() : '';\r\n      }\r\n    })\r\n    .directive('progressBar', ['$timeout', function($timeout) {\r\n      return {\r\n        restrict: 'E',\r\n        replace: true,\r\n        transclude: true,\r\n        controller: 'progressController',\r\n        scope: {\r\n          value: '=',\r\n          maxParam: '=?max',\r\n          type: '@',\r\n\t\t  textval: '@',\r\n          trucks: '='\r\n        },\r\n        templateUrl: 'directives/progressBar/progress-bar.html',\r\n        link: function(scope, element, attrs, progressCtrl) {\r\n          $timeout(function(){\r\n            progressCtrl.addBar(scope, angular.element(element.children()[0]), {\r\n              title: attrs.title\r\n            });\r\n          }, 200);\r\n        }\r\n      };\r\n    }]);\r\n\r\n    progressController.$inject = ['$scope', '$attrs', 'progressConfig', '$timeout'];\r\n    function progressController($scope, $attrs, progressConfig, $timeout) {\r\n      var self = this;\r\n      var animate = angular.isDefined($attrs.animate) ? $scope.$parent.$eval($attrs.animate) : progressConfig.animate;\r\n      this.bars = [];\r\n\r\n      $scope.max = getMaxOrDefault();\r\n      this.addBar = function(bar, element, attrs) {\r\n        if (!animate) {\r\n          element.css({\r\n            'transition': 'none'\r\n          });\r\n        }\r\n\r\n        this.bars.push(bar);\r\n\r\n        bar.max = getMaxOrDefault();\r\n        bar.title = attrs && angular.isDefined(attrs.title) ? attrs.title : 'progressbar';\r\n\r\n        bar.$watch('value', function(value) {\r\n          bar.recalculatePercentage();\r\n        });\r\n\r\n        bar.recalculatePercentage = function() {\r\n          var totalPercentage = self.bars.reduce(function(total, bar) {\r\n            bar.percent = +(100 * bar.value / bar.max).toFixed(2);\r\n            return total + bar.percent;\r\n          }, 0);\r\n\r\n          if (totalPercentage > 100) {\r\n            bar.percent -= totalPercentage - 100;\r\n          }\r\n        };\r\n\r\n        bar.$on('$destroy', function() {\r\n          element = null;\r\n          self.removeBar(bar);\r\n        });\r\n      };\r\n\r\n      this.removeBar = function(bar) {\r\n        this.bars.splice(this.bars.indexOf(bar), 1);\r\n        this.bars.forEach(function(bar) {\r\n          bar.recalculatePercentage();\r\n        });\r\n      };\r\n\r\n      $scope.$watch('maxParam', function(maxParam) {\r\n        self.bars.forEach(function(bar) {\r\n          bar.max = getMaxOrDefault();\r\n          bar.recalculatePercentage();\r\n        });\r\n      });\r\n\r\n      function getMaxOrDefault() {\r\n        return angular.isDefined($scope.maxParam) ? $scope.maxParam : progressConfig.max;\r\n      }\r\n    }\r\n})();\r\n\r\nangular.module('progressbar.template', []).run([\"$templateCache\", function($templateCache) {\r\n  $templateCache.put(\"directives/progressBar/progress-bar.html\",\r\n    \"<div>\" +\r\n    \"<div class=\\\"progress-bar-title\\\">\\n\" +\r\n      \"<span class='das-trucks-count' ng-class=\\\"type && 'progress-bar-title-' + type\\\">{{trucks}}</span><span class='das-trucks-type' ng-class=\\\"type && 'progress-bar-title-' + type\\\">{{textval | firstLetterCapital}}</span>\\n\" +\r\n    \"</div>\\n\" +\r\n    \"<div class=\\\"progress\\\">\\n\" +\r\n    \"  <div class=\\\"progress-bar\\\" ng-class=\\\"type && 'progress-bar-' + type\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"{{value}}\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"{{max}}\\\" ng-style=\\\"{width: (percent < 100 ? percent : 0) + '%'}\\\" aria-valuetext=\\\"{{percent | number:0}}%\\\" aria-labelledby=\\\"{{::title}}\\\" ng-transclude></div>\\n\" +\r\n    \"</div>\\n\" +\r\n    \"</div>\\n\" +\r\n    \"\");\r\n}]);\r\n","'use strict';\r\nangular.module('cyient.scrollonclick', [])\r\n.directive('scrollOnClick', [function() {\r\n    return {\r\n        restrict: \"A\",\r\n        link: function(scope, elem) {\r\n            elem.on('click', function() {\r\n                $(\"html,body\").animate({scrollTop: 0}, 1000);\r\n            });\r\n        }\r\n    };\r\n}])\r\n","'use strict';\r\nangular.module('cyient.scrolltowhen', [])\r\n.directive('scrollToWhen', ['$timeout', function($timeout) {\r\n    return {\r\n        restrict: \"AE\",\r\n        scope: {\r\n            scrollToWhen: '=',\r\n            scrollToDelay: '='\r\n        },\r\n        link: function(scope, elem) {\r\n\r\n            scope.$watch('scrollToWhen', function(newVal, oldVal) {\r\n                if (newVal === true) {\r\n                    $timeout(function() {\r\n                        $('html, body').animate({\r\n                            scrollTop: elem.offset().top - 135\r\n                        }, 1000);\r\n                    }, scope.scrollToDelay || 0);\r\n                }\r\n            })\r\n\r\n        }\r\n    };\r\n}]);\r\n","'use strict';\r\nangular.module('cyient.slider', [])\r\n.directive('slider', ['$window', function($window) {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            data: '=',\r\n            ticksNumber: '=',\r\n            disabled: '=',\r\n            onSlide: '&'\r\n        },\r\n        link: function(scope, elem, attrs) {\r\n\r\n            var container = elem[0];\r\n\r\n            scope.ticksNumber = 10;\r\n\r\n            render();\r\n\r\n            // Reponsive directive. Not the most efficient way,\r\n            // but it works for now without any visible performance problem\r\n            angular.element($window).bind('resize', function() {\r\n                if ($window.innerWidth >= 1024) {\r\n                    render();\r\n                    scope.$digest();\r\n                }\r\n            });\r\n\r\n            function render() {\r\n\r\n                if (!scope.data) {\r\n                    return;\r\n                }\r\n\r\n                d3.select(container).text(\"\");\r\n\r\n                var min = scope.data.min;\r\n                var max = scope.data.max;\r\n                var rangeMin = scope.data.start;\r\n                var rangeMax = scope.data.end;\r\n                var currVal = scope.data.current;\r\n                var optimal = scope.data.optimal;\r\n                var units = scope.data.units;\r\n\r\n                var stepVal = (scope.data.max - scope.data.min)/10;\r\n\r\n                var margin = {\r\n                    top: 0,\r\n                    right: 20,\r\n                    bottom: 0,\r\n                    left: 10\r\n                };\r\n\r\n                var width = elem.width() - margin.left - margin.right,\r\n                    height = 70 - margin.bottom - margin.top;\r\n\r\n                var x = d3.scale.linear()\r\n                    .domain([min, max])\r\n                    .range([0, width])\r\n                    .clamp(true);\r\n\r\n                var xb = d3.scale.linear()\r\n                    .domain([rangeMin, rangeMax])\r\n                    .range([x(rangeMin), x(rangeMax)])\r\n                    .clamp(true);\r\n\r\n                var xAxis = d3.svg.axis()\r\n                    .scale(x)\r\n                    .orient(\"bottom\")\r\n                    .ticks(scope.ticksNumber)\r\n                    .tickFormat(function(d) {\r\n                        return (d > 0) ? (d) : (d);\r\n                        // return (d > 0) ? (d + units) : (d);\r\n                    })\r\n                    .tickSize(10, 10)\r\n                    .tickPadding(5);\r\n\r\n                var svg = d3.select(container).append(\"svg\")\r\n                    .attr(\"width\", width + margin.left + margin.right)\r\n                    .attr(\"height\", height + margin.top + margin.bottom)\r\n                    .append(\"g\")\r\n                    .attr(\"transform\", \"translate(\" + margin.left + \",\" + -10 + \")\");\r\n\r\n                if (scope.disabled) {\r\n                    svg.attr(\"class\", \"disabled\");\r\n                }\r\n\r\n                svg.append(\"g\")\r\n                    .attr(\"class\", \"axis\")\r\n                    .attr(\"transform\", \"translate(0,\" + (height / 2) + \")\")\r\n                    .call(xAxis)\r\n                    .select(\".domain\")\r\n                    .select(function() {\r\n                        return this.parentNode.appendChild(this.cloneNode(true));\r\n                    })\r\n                    .attr(\"class\", \"halo\");\r\n\r\n                var currValMark = svg.append(\"g\")\r\n                    .attr(\"class\", \"curr-val-axis-grp\")\r\n                    .attr(\"transform\", \"translate(\" + xb(scope.data.current) + \",\" + height / 2  + \")\");\r\n\r\n                currValMark.append(\"line\")\r\n                    .attr(\"class\", \"curr-val-axis-line\")\r\n                    .attr(\"x1\", \"0\")\r\n                    .attr(\"y1\", \"0\")\r\n                    .attr(\"x2\", \"0\")\r\n                    .attr(\"y2\", \"12\")\r\n\r\n                currValMark.append(\"text\")\r\n                    .text(scope.data.current)\r\n                    // .text(scope.data.current + '' + units)\r\n                    .attr(\"text-anchor\", \"middle\")\r\n                    .attr(\"y\", \"15\")\r\n                    .attr(\"dy\", \"0.71em\")\r\n\r\n                var slider = svg.append(\"g\");\r\n\r\n                var brush = d3.svg.brush()\r\n                    .x(xb)\r\n                    .extent([scope.data.current, scope.data.current])\r\n                    .on(\"brush\", brushed);\r\n\r\n                slider.attr(\"class\", \"slider\")\r\n                    .call(brush);\r\n\r\n                slider.selectAll(\".extent, .resize\")\r\n                    .remove();\r\n\r\n                slider.select(\".background\")\r\n                    .attr(\"height\", height);\r\n\r\n                var lineData = [\r\n                    { x: x(rangeMin), y: height / 2 },\r\n                    { x: x(rangeMax), y: height / 2 }\r\n                ];\r\n\r\n                var lineFunction = d3.svg.line()\r\n                    .x(function(d) { return d.x })\r\n                    .y(function(d) { return d.y });\r\n\r\n                slider.append(\"path\")\r\n                    .attr(\"d\", lineFunction(lineData))\r\n                    .attr(\"class\", \"brush\")\r\n                    .attr(\"transform\", \"translate(0, 2)\");\r\n\r\n                var handle = slider.append(\"circle\")\r\n                    .attr(\"class\", \"handle\")\r\n                    .attr(\"transform\", \"translate(0,\" + height / 2 + \")\")\r\n                    .attr(\"r\", 8);\r\n\r\n                slider.insert(\"line\", \":first-child\")\r\n                    .attr(\"class\", \"boundary-lines\")\r\n                    .attr(\"x1\", 0)\r\n                    .attr(\"y1\", 0)\r\n                    .attr(\"x2\", 0)\r\n                    .attr(\"y2\", 20)\r\n                    .attr(\"transform\", \"translate(\" + xb(rangeMin) + \",\" + (height / 2 - 10) + \")\");\r\n\r\n                slider.insert(\"line\", \":first-child\")\r\n                    .attr(\"class\", \"boundary-lines\")\r\n                    .attr(\"x1\", 10)\r\n                    .attr(\"y1\", 0)\r\n                    .attr(\"x2\", 10)\r\n                    .attr(\"y2\", 20)\r\n                    .attr(\"transform\", \"translate(\" + (xb(rangeMax) - 10) + \",\" + (height / 2 - 10) + \")\");\r\n\r\n                slider.insert(\"line\", \":first-child\")\r\n                    .attr(\"class\", \"optimal-val\")\r\n                    .attr(\"x1\", 0)\r\n                    .attr(\"y1\", 0)\r\n                    .attr(\"x2\", 0)\r\n                    .attr(\"y2\", 20)\r\n                    .attr(\"transform\", \"translate(\" + xb(scope.data.optimal) + \",\" + (height / 2 - 10) + \")\")\r\n\r\n                slider.call(brush.event)\r\n                    .transition()\r\n                    .duration(750)\r\n                    .call(brush.event);\r\n\r\n                var tip = d3.tip()\r\n                    .attr('class', 'd3-tip')\r\n                    .offset([-10, 0])\r\n                    .html(Math.round(scope.data.current) + scope.data.units);\r\n                svg.call(tip);\r\n                handle\r\n                    .on('mouseover', tip.show)\r\n                    .on('mouseout', tip.hide)\r\n\r\n                elem.on(\"$destroy\", function() {\r\n                    tip.destroy();\r\n                });\r\n\r\n                var firstTimeBrushCall = true;\r\n                function brushed() {\r\n                    var value = brush.extent()[0];\r\n\r\n                    if (!d3.event.sourceEvent) {\r\n                        handle.attr(\"cx\", xb(value));\r\n                        return;\r\n                    }\r\n\r\n                    value = xb.invert(d3.mouse(this)[0]);\r\n                    brush.extent([value, value]);\r\n\r\n                    /* Path for disabled slider */\r\n                    if (scope.disabled) {\r\n                        handle.attr(\"cx\", xb(scope.data.current));\r\n                        return;\r\n                    }\r\n\r\n                    /* Path for non-disabled slider */\r\n\r\n                    // Discrete step implementation\r\n                    var newVal, valChanged = false;\r\n                    var diff = value - scope.data.current;\r\n                    if (Math.abs(diff) < stepVal) { // If the difference is small enough, don't change anything\r\n                        newVal = scope.data.current;\r\n                    } else if (diff < 0) { // Slider moves left\r\n                        newVal = scope.data.current - stepVal;\r\n                        valChanged = true;\r\n                    } else if (diff > 0) { // Slider moves right\r\n                        newVal = scope.data.current + stepVal;\r\n                        valChanged = true;\r\n                    } else {\r\n                        newVal = scope.data.current\r\n                    }\r\n                    // Making sure the current value is in the bounds\r\n                    newVal = _.clamp(newVal, rangeMin, rangeMax);\r\n\r\n                    handle.attr(\"cx\", xb(newVal));\r\n\r\n                    scope.data.current = Math.round(newVal);\r\n                    tip.html(Math.round(scope.data.current) + scope.data.units);\r\n                    if(firstTimeBrushCall) {\r\n                        firstTimeBrushCall = false;\r\n                    } else {\r\n                        // do nothing ...\r\n                        // scope.onSlide();\r\n                    }\r\n                    if (valChanged) {\r\n                        scope.$apply();\r\n                    }\r\n\r\n                } // End of brushed function\r\n\r\n            } // End of render function\r\n\r\n        } // End of link function\r\n    }; // End of return statement\r\n}]); // End of directive\r\n","angular.module('ui.slimscroll', []).directive('slimscroll', function () {\r\n  'use strict';\r\n\r\n  return {\r\n    restrict: 'A',\r\n    link: function ($scope, $elem, $attr) {\r\n      var off = [];\r\n      var option = {};\r\n      \r\n      var refresh = function () {\t\t\r\n         if ($attr.slimscroll) {\t\t         \r\n           option = $scope.$eval($attr.slimscroll);\t\t           \r\n         } else if ($attr.slimscrollOption) {\t\t        \r\n           option = $scope.$eval($attr.slimscrollOption);\t\t           \r\n         }\r\n         \r\n        $($elem).slimScroll({ destroy: true });\t\t        \r\n\r\n         $($elem).slimScroll(option);\t\t         \r\n      };\r\n      \r\n      var registerWatch = function () {\r\n        if ($attr.slimscroll && !option.noWatch) {\r\n          off.push($scope.$watchCollection($attr.slimscroll, refresh));\r\n        }\r\n\r\n        if ($attr.slimscrollWatch) {\r\n          off.push($scope.$watchCollection($attr.slimscrollWatch, refresh));\r\n        }\r\n\r\n        if ($attr.slimscrolllistento) {\r\n          off.push($scope.$on($attr.slimscrolllistento, refresh));\r\n        }\r\n      };\r\n\r\n      var destructor = function () {\r\n        $($elem).slimScroll({ destroy: true });\r\n        off.forEach(function (unbind) {\r\n          unbind();\r\n        });\r\n        off = null;\r\n      };\r\n\r\n      off.push($scope.$on('$destroy', destructor));\r\n      \r\n      registerWatch();\r\n    }\r\n  };\r\n});\r\n","/*! Copyright (c) 2011 Piotr Rochala (http://rocha.la)\r\n * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)\r\n * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.\r\n *\r\n * Version: 1.3.7\r\n *\r\n */\r\n(function($) {\r\n\r\n  $.fn.extend({\r\n    slimScroll: function(options) {\r\n\r\n      var defaults = {\r\n\r\n        // width in pixels of the visible scroll area\r\n        width : 'auto',\r\n\r\n        // height in pixels of the visible scroll area\r\n        height : '',\r\n\r\n        // width in pixels of the scrollbar and rail\r\n        size : '7px',\r\n\r\n        // scrollbar color, accepts any hex/color value\r\n        color: '#000',\r\n\r\n        // scrollbar position - left/right\r\n        position : 'right',\r\n\r\n        // distance in pixels between the side edge and the scrollbar\r\n        distance : '1px',\r\n\r\n        // default scroll position on load - top / bottom / $('selector')\r\n        start : 'top',\r\n\r\n        // sets scrollbar opacity\r\n        opacity : .4,\r\n\r\n        // enables always-on mode for the scrollbar\r\n        alwaysVisible : false,\r\n\r\n        // check if we should hide the scrollbar when user is hovering over\r\n        disableFadeOut : false,\r\n\r\n        // sets visibility of the rail\r\n        railVisible : false,\r\n\r\n        // sets rail color\r\n        railColor : '#333',\r\n\r\n        // sets rail opacity\r\n        railOpacity : .2,\r\n\r\n        // whether  we should use jQuery UI Draggable to enable bar dragging\r\n        railDraggable : true,\r\n\r\n        // defautlt CSS class of the slimscroll rail\r\n        railClass : 'slimScrollRail',\r\n\r\n        // defautlt CSS class of the slimscroll bar\r\n        barClass : 'slimScrollBar',\r\n\r\n        // defautlt CSS class of the slimscroll wrapper\r\n        wrapperClass : 'slimScrollDiv',\r\n\r\n        // check if mousewheel should scroll the window if we reach top/bottom\r\n        allowPageScroll : false,\r\n\r\n        // scroll amount applied to each mouse wheel step\r\n        wheelStep : 20,\r\n\r\n        // scroll amount applied when user is using gestures\r\n        touchScrollStep : 200,\r\n\r\n        // sets border radius\r\n        borderRadius: '7px',\r\n\r\n        // sets border radius of the rail\r\n        railBorderRadius : '7px'\r\n      };\r\n\r\n      var o = $.extend(defaults, options);\r\n\r\n      // do it for every element that matches selector\r\n      this.each(function(){\r\n\r\n      var isOverPanel, isOverBar, isDragg, queueHide, touchDif,\r\n        barHeight, percentScroll, lastScroll,\r\n        divS = '<div></div>',\r\n        minBarHeight = 30,\r\n        releaseScroll = false;\r\n\r\n        // used in event handlers and for better minification\r\n        var me = $(this);\r\n\r\n        // ensure we are not binding it again\r\n        if (me.parent().hasClass(o.wrapperClass))\r\n        {\r\n            // start from last bar position\r\n            var offset = me.scrollTop();\r\n\r\n            // find bar and rail\r\n            bar = me.siblings('.' + o.barClass);\r\n            rail = me.siblings('.' + o.railClass);\r\n\r\n            getBarHeight();\r\n\r\n            // check if we should scroll existing instance\r\n            if ($.isPlainObject(options))\r\n            {\r\n              // Pass height: auto to an existing slimscroll object to force a resize after contents have changed\r\n              if ( 'height' in options && options.height == 'auto' ) {\r\n                me.parent().css('height', 'auto');\r\n                me.css('height', 'auto');\r\n                var height = me.parent().parent().height();\r\n                me.parent().css('height', height);\r\n                me.css('height', height);\r\n              } else if ('height' in options) {\r\n                var h = options.height;\r\n                me.parent().css('height', h);\r\n                me.css('height', h);\r\n              }\r\n\r\n              if ('scrollTo' in options)\r\n              {\r\n                // jump to a static point\r\n                offset = parseInt(o.scrollTo);\r\n              }\r\n              else if ('scrollBy' in options)\r\n              {\r\n                // jump by value pixels\r\n                offset += parseInt(o.scrollBy);\r\n              }\r\n              else if ('destroy' in options)\r\n              {\r\n                // remove slimscroll elements\r\n                bar.remove();\r\n                rail.remove();\r\n                me.unwrap();\r\n                return;\r\n              }\r\n\r\n              // scroll content by the given offset\r\n              scrollContent(offset, false, true);\r\n            }\r\n\r\n            return;\r\n        }\r\n        else if ($.isPlainObject(options))\r\n        {\r\n            if ('destroy' in options)\r\n            {\r\n            \treturn;\r\n            }\r\n        }\r\n\r\n        // optionally set height to the parent's height\r\n        o.height = (o.height == 'auto') ? me.parent().height() : o.height;\r\n\r\n        // wrap content\r\n        var wrapper = $(divS)\r\n          .addClass(o.wrapperClass)\r\n          .css({\r\n            position: 'relative',\r\n            overflow: 'hidden',\r\n            width: o.width,\r\n            height: o.height\r\n          });\r\n\r\n        // update style for the div\r\n        me.css({\r\n          overflow: 'hidden',\r\n          width: o.width,\r\n          height: o.height\r\n        });\r\n\r\n        // create scrollbar rail\r\n        var rail = $(divS)\r\n          .addClass(o.railClass)\r\n          .css({\r\n            width: o.size,\r\n            height: '100%',\r\n            position: 'absolute',\r\n            top: 0,\r\n            display: (o.alwaysVisible && o.railVisible) ? 'block' : 'none',\r\n            'border-radius': o.railBorderRadius,\r\n            background: o.railColor,\r\n            opacity: o.railOpacity,\r\n            zIndex: 90\r\n          });\r\n\r\n        // create scrollbar\r\n        var bar = $(divS)\r\n          .addClass(o.barClass)\r\n          .css({\r\n            background: o.color,\r\n            width: o.size,\r\n            position: 'absolute',\r\n            top: 0,\r\n            opacity: o.opacity,\r\n            display: o.alwaysVisible ? 'block' : 'none',\r\n            'border-radius' : o.borderRadius,\r\n            BorderRadius: o.borderRadius,\r\n            MozBorderRadius: o.borderRadius,\r\n            WebkitBorderRadius: o.borderRadius,\r\n            zIndex: 99\r\n          });\r\n\r\n        // set position\r\n        var posCss = (o.position == 'right') ? { right: o.distance } : { left: o.distance };\r\n        rail.css(posCss);\r\n        bar.css(posCss);\r\n\r\n        // wrap it\r\n        me.wrap(wrapper);\r\n\r\n        // append to parent div\r\n        me.parent().append(bar);\r\n        me.parent().append(rail);\r\n\r\n        // make it draggable and no longer dependent on the jqueryUI\r\n        if (o.railDraggable){\r\n          bar.bind(\"mousedown\", function(e) {\r\n            var $doc = $(document);\r\n            isDragg = true;\r\n            t = parseFloat(bar.css('top'));\r\n            pageY = e.pageY;\r\n\r\n            $doc.bind(\"mousemove.slimscroll\", function(e){\r\n              currTop = t + e.pageY - pageY;\r\n              bar.css('top', currTop);\r\n              scrollContent(0, bar.position().top, false);// scroll content\r\n            });\r\n\r\n            $doc.bind(\"mouseup.slimscroll\", function(e) {\r\n              isDragg = false;hideBar();\r\n              $doc.unbind('.slimscroll');\r\n            });\r\n            return false;\r\n          }).bind(\"selectstart.slimscroll\", function(e){\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            return false;\r\n          });\r\n        }\r\n\r\n        // on rail over\r\n        rail.hover(function(){\r\n          showBar();\r\n        }, function(){\r\n          hideBar();\r\n        });\r\n\r\n        // on bar over\r\n        bar.hover(function(){\r\n          isOverBar = true;\r\n        }, function(){\r\n          isOverBar = false;\r\n        });\r\n\r\n        // show on parent mouseover\r\n        me.hover(function(){\r\n          isOverPanel = true;\r\n          showBar();\r\n          hideBar();\r\n        }, function(){\r\n          isOverPanel = false;\r\n          hideBar();\r\n        });\r\n\r\n        // support for mobile\r\n        me.bind('touchstart', function(e,b){\r\n          if (e.originalEvent.touches.length)\r\n          {\r\n            // record where touch started\r\n            touchDif = e.originalEvent.touches[0].pageY;\r\n          }\r\n        });\r\n\r\n        me.bind('touchmove', function(e){\r\n          // prevent scrolling the page if necessary\r\n          if(!releaseScroll)\r\n          {\r\n  \t\t      e.originalEvent.preventDefault();\r\n\t\t      }\r\n          if (e.originalEvent.touches.length)\r\n          {\r\n            // see how far user swiped\r\n            var diff = (touchDif - e.originalEvent.touches[0].pageY) / o.touchScrollStep;\r\n            // scroll content\r\n            scrollContent(diff, true);\r\n            touchDif = e.originalEvent.touches[0].pageY;\r\n          }\r\n        });\r\n\r\n        // set up initial height\r\n        getBarHeight();\r\n\r\n        // check start position\r\n        if (o.start === 'bottom')\r\n        {\r\n          // scroll content to bottom\r\n          bar.css({ top: me.outerHeight() - bar.outerHeight() });\r\n          scrollContent(0, true);\r\n        }\r\n        else if (o.start !== 'top')\r\n        {\r\n          // assume jQuery selector\r\n          scrollContent($(o.start).position().top, null, true);\r\n\r\n          // make sure bar stays hidden\r\n          if (!o.alwaysVisible) { bar.hide(); }\r\n        }\r\n\r\n        // attach scroll events\r\n        attachWheel(this);\r\n\r\n        function _onWheel(e)\r\n        {\r\n          // use mouse wheel only when mouse is over\r\n          if (!isOverPanel) { return; }\r\n\r\n          var e = e || window.event;\r\n\r\n          var delta = 0;\r\n          if (e.wheelDelta) { delta = -e.wheelDelta/120; }\r\n          if (e.detail) { delta = e.detail / 3; }\r\n\r\n          var target = e.target || e.srcTarget || e.srcElement;\r\n          if ($(target).closest('.' + o.wrapperClass).is(me.parent())) {\r\n            // scroll content\r\n            scrollContent(delta, true);\r\n          }\r\n\r\n          // stop window scroll\r\n          if (e.preventDefault && !releaseScroll) { e.preventDefault(); }\r\n          if (!releaseScroll) { e.returnValue = false; }\r\n        }\r\n\r\n        function scrollContent(y, isWheel, isJump)\r\n        {\r\n          releaseScroll = false;\r\n          var delta = y;\r\n          var maxTop = me.outerHeight() - bar.outerHeight();\r\n\r\n          if (isWheel)\r\n          {\r\n            // move bar with mouse wheel\r\n            delta = parseInt(bar.css('top')) + y * parseInt(o.wheelStep) / 100 * bar.outerHeight();\r\n\r\n            // move bar, make sure it doesn't go out\r\n            delta = Math.min(Math.max(delta, 0), maxTop);\r\n\r\n            // if scrolling down, make sure a fractional change to the\r\n            // scroll position isn't rounded away when the scrollbar's CSS is set\r\n            // this flooring of delta would happened automatically when\r\n            // bar.css is set below, but we floor here for clarity\r\n            delta = (y > 0) ? Math.ceil(delta) : Math.floor(delta);\r\n\r\n            // scroll the scrollbar\r\n            bar.css({ top: delta + 'px' });\r\n          }\r\n\r\n          // calculate actual scroll amount\r\n          percentScroll = parseInt(bar.css('top')) / (me.outerHeight() - bar.outerHeight());\r\n          delta = percentScroll * (me[0].scrollHeight - me.outerHeight());\r\n\r\n          if (isJump)\r\n          {\r\n            delta = y;\r\n            var offsetTop = delta / me[0].scrollHeight * me.outerHeight();\r\n            offsetTop = Math.min(Math.max(offsetTop, 0), maxTop);\r\n            bar.css({ top: offsetTop + 'px' });\r\n          }\r\n\r\n          // scroll content\r\n          me.scrollTop(delta);\r\n\r\n          // fire scrolling event\r\n          me.trigger('slimscrolling', ~~delta);\r\n\r\n          // ensure bar is visible\r\n          showBar();\r\n\r\n          // trigger hide when scroll is stopped\r\n          hideBar();\r\n        }\r\n\r\n        function attachWheel(target)\r\n        {\r\n          if (window.addEventListener)\r\n          {\r\n            target.addEventListener('DOMMouseScroll', _onWheel, false );\r\n            target.addEventListener('mousewheel', _onWheel, false );\r\n          }\r\n          else\r\n          {\r\n            document.attachEvent(\"onmousewheel\", _onWheel)\r\n          }\r\n        }\r\n\r\n        function getBarHeight()\r\n        {\r\n          // calculate scrollbar height and make sure it is not too small\r\n          barHeight = Math.max((me.outerHeight() / me[0].scrollHeight) * me.outerHeight(), minBarHeight);\r\n          bar.css({ height: barHeight + 'px' });\r\n\r\n          // hide scrollbar if content is not long enough\r\n          var display = barHeight == me.outerHeight() ? 'none' : 'block';\r\n          bar.css({ display: display });\r\n        }\r\n\r\n        function showBar()\r\n        {\r\n          // recalculate bar height\r\n          getBarHeight();\r\n          clearTimeout(queueHide);\r\n\r\n          // when bar reached top or bottom\r\n          if (percentScroll == ~~percentScroll)\r\n          {\r\n            //release wheel\r\n            releaseScroll = o.allowPageScroll;\r\n\r\n            // publish approporiate event\r\n            if (lastScroll != percentScroll)\r\n            {\r\n                var msg = (~~percentScroll == 0) ? 'top' : 'bottom';\r\n                me.trigger('slimscroll', msg);\r\n            }\r\n          }\r\n          else\r\n          {\r\n            releaseScroll = false;\r\n          }\r\n          lastScroll = percentScroll;\r\n\r\n          // show only when required\r\n          if(barHeight >= me.outerHeight()) {\r\n            //allow window scroll\r\n            releaseScroll = true;\r\n            return;\r\n          }\r\n          bar.stop(true,true).fadeIn('fast');\r\n          if (o.railVisible) { rail.stop(true,true).fadeIn('fast'); }\r\n        }\r\n\r\n        function hideBar()\r\n        {\r\n          // only hide when options allow it\r\n          if (!o.alwaysVisible)\r\n          {\r\n            queueHide = setTimeout(function(){\r\n              if (!(o.disableFadeOut && isOverPanel) && !isOverBar && !isDragg)\r\n              {\r\n                bar.fadeOut('slow');\r\n                rail.fadeOut('slow');\r\n              }\r\n            }, 1000);\r\n          }\r\n        }\r\n\r\n      });\r\n\r\n      // maintain chainability\r\n      return this;\r\n    }\r\n  });\r\n\r\n  $.fn.extend({\r\n    slimscroll: $.fn.slimScroll\r\n  });\r\n\r\n})(jQuery);\r\n","'use strict';\r\n(function () {\r\n\tvar app = angular.module('cyient', ['ngRoute', 'ngResource', 'ngCookies',\r\n\t\t'ngMessages', 'ngAnimate', 'ui.bootstrap.dropdown',\r\n\t\t'cyient.backendservice','cyient.assetService', 'cyient.filters', 'ng.oidcclient',\r\n\t\t'cyient.login', 'cyient.assetgroups', 'cyient.assetgroupdetails',\r\n\t\t'cyient.assets', 'cyient.geography', 'cyient.assetdetails',\r\n\t\t'cyient.insights','cyient.filters', 'cyient.miniLifechart','cyient.lifechart','cyient.loader'\r\n\t]);\r\n\r\n\tapp.config(['$routeProvider', function ($routeProvider) {\r\n\t\t$routeProvider.when(\"/login\", {\r\n\t\t\t\ttemplateUrl: \"templates/login/login.html\",\r\n\t\t\t\tcontroller: \"Login\"\r\n\t\t\t})\r\n\t\t\t.when(\"/\", {\r\n\t\t\t\ttemplateUrl: \"templates/assetgroups/assetgroups.html\",\r\n\t\t\t\tcontroller: \"AssetGroups\"\r\n\t\t\t})\r\n\t\t\t.when(\"/assetgroupdetails\", { //assetgroupdetails\r\n\t\t\t\ttemplateUrl: \"templates/assetgroupdetails/assetgroupdetails.html\",\r\n\t\t\t\tcontroller: \"AssetGroupDetails\"\r\n\t\t\t}).when(\"/assets\", {\r\n\t\t\t\ttemplateUrl: \"templates/assets/assets.html\",\r\n\t\t\t\tcontroller: \"Assets\"\r\n\t\t\t}).when(\"/geography\", {\r\n\t\t\t\ttemplateUrl: \"templates/geography/geography.html\",\r\n\t\t\t\tcontroller: \"Geography\"\r\n\t\t\t}).when(\"/assetdetails\", {\r\n\t\t\t\ttemplateUrl: \"templates/assetdetails/assetdetails.html\",\r\n\t\t\t\tcontroller: \"AssetDetails\"\r\n\t\t\t}).when(\"/insights\", {\r\n\t\t\t\ttemplateUrl: \"templates/insights/insights.html\",\r\n\t\t\t\tcontroller: \"Insights\"\r\n\t\t\t})\r\n\t}]);\r\n\r\n\tapp.config(['ngOidcClientProvider', function (ngOidcClientProvider) {\r\n\t\tngOidcClientProvider.setSettings({\r\n\t\t\tauthority: \"https://fetidentitydev.azurewebsites.net\",\r\n\t\t\tclient_id: \"js\", // This may change to another name in\r\n\t\t\t// production.\r\n\r\n\t\t\tredirect_uri: \"http://localhost:1947/callback.html\",\r\n\r\n\t\t\tresponse_type: \"id_token token\",\r\n\r\n\t\t\tscope: \"openid profile api1\",\r\n\r\n\t\t\tpost_logout_redirect_uri: \"http://localhost:1947/index.html\",\r\n\r\n\t\t\t// userStore: new Oidc.WebStorageStateStore({ store: window.localStorage\r\n\t\t\t// })\r\n\t\t});\r\n\t}])\r\n\tapp.run(['$rootScope', function ($rootScope) {\r\n\t\t$rootScope.currentState = \"/\";\r\n\t}]);\r\n\tapp.controller('Header', ['$scope', '$location', '$cookies',\r\n\t\t'LoginService', '$window', '$rootScope', 'ngOidcClient', Header\r\n\t]);\r\n\r\n\t// Header.$inject = [ '$scope', '$state', '$cookies', 'LoginService',\r\n\t// '$window', '$rootScope', 'ngOidcClient' ];\r\n\tfunction Header($scope, $location, $cookies, LoginService, $window,\r\n\t\t$rootScope, ngOidcClient) {\r\n\t\t// var loginDataObjectLength =\r\n\t\t// Object.keys(LoginService.getData()).length;\r\n\t\t// var loginData = (loginDataObjectLength) ? LoginService.getData() :\r\n\t\t// $cookies.getObject('loginData');\r\n\t\tvar loginData = $cookies.getObject('loginData');\r\n\r\n\t\tfunction checkImageUrl(url) {\r\n\t\t\tif (!url) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\treturn (url.match(/\\.(jpeg|jpg|gif|png)$/) != null);\r\n\t\t}\r\n\t\tif (loginData) {\r\n\t\t\t$scope.header = {\r\n\t\t\t\tfullName: loginData.userFirstName,\r\n\t\t\t\tuserImage: checkImageUrl(loginData.userImgUrl) ? loginData.userImgUrl : 'assets/images/dummy-photo.jpeg'\r\n\t\t\t};\r\n\t\t}\r\n\t\t$scope.logout = function () {\r\n\t\t\t$scope.currentState = \"login\";\r\n\t\t\tvar cookies = $cookies.getAll();\r\n\t\t\tangular.forEach(cookies, function (value, key) {\r\n\t\t\t\t$cookies.remove(key);\r\n\t\t\t});\r\n\t\t\tngOidcClient.signoutRedirect();\r\n\t\t\tLoginService.authenticated = false;\r\n\t\t\t// $state.go('cyient.login');\r\n\t\t};\r\n\r\n\t\t$scope.gotoState = function (str) {\r\n\t\t\t$location.path(str).search({});\r\n\t\t}\r\n\r\n\t\t// watcher for animations\r\n\t\tangular.element($window).bind(\"scroll\", function () {\r\n\t\t\tif ($window.scrollY > 0) {\r\n\t\t\t\t$scope.scrolledDown = true;\r\n\t\t\t} else {\r\n\t\t\t\t$scope.scrolledDown = false;\r\n\t\t\t}\r\n\t\t\t$scope.$apply();\r\n\t\t});\r\n\t}\r\n\r\n})();","'use strict';\r\n(function() {\r\n\tangular.module('cyient.assetdetails', [ 'ngAnimate' ]).controller(\r\n\t\t\t'AssetDetails', AssetDetails);\r\n\tAssetDetails.$inject = [ '$rootScope', '$scope', '$window', '$http',\r\n\t\t\t'$log', '$cookies', '$location', 'TruckDetailsService',\r\n\t\t\t'SocketAPIService', 'LoginService' ];\r\n\r\n\tfunction AssetDetails($rootScope, $scope, $window, $http, $log, $cookies,\r\n\t\t\t$location, TruckDetailsService, SocketAPIService, LoginService) {\r\n\t\t$rootScope.currentState = \"assetdetails\";\r\n\t\t$window.scrollTo(0, 0); // scroll to top\r\n\t\t// var siteData = $cookies.getObject('siteData')[0];\r\n\t\tvar loginData = $cookies.getObject('loginData');\r\n\t\tif (!LoginService.isAuthenticated()) {\r\n\t\t\t$scope.currentState=\"login\";\r\n\t\t\t$location.path(\"/login\").search({});\r\n\t\t}\r\n\r\n\t\t$scope.currentCategories = {\r\n\t\t\tsections : []\r\n\t\t};\r\n\r\n\t\t$scope.SensorPositions = {\r\n\t\t\tfracpump : {\r\n\t\t\t\timageUrl : 'assets/images/fracpump.png',\r\n\t\t\t\tsensors : [ {\r\n\t\t\t\t\ty : 22,\r\n\t\t\t\t\tx : 255,\r\n\t\t\t\t\tname : 'Outlet Pressure',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 28,\r\n\t\t\t\t\tx : 295,\r\n\t\t\t\t\tname : 'Vibration 1',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 131,\r\n\t\t\t\t\tx : 122,\r\n\t\t\t\t\tname : 'Vibration 2',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 100,\r\n\t\t\t\t\tx : 341,\r\n\t\t\t\t\tname : 'Vibration 3',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 111,\r\n\t\t\t\t\tx : 165,\r\n\t\t\t\t\tname : 'Vibration 4',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 60,\r\n\t\t\t\t\tx : 22,\r\n\t\t\t\t\tname : 'Speed',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 48,\r\n\t\t\t\t\tx : 63,\r\n\t\t\t\t\tname : 'Lube Pressure',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 85,\r\n\t\t\t\t\tx : 91,\r\n\t\t\t\t\tname : 'Lube Temp In',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 170,\r\n\t\t\t\t\tx : 160,\r\n\t\t\t\t\tname : 'Lube Temp Out',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t} ],\r\n\t\t\t\tconsumables : [ {\r\n\t\t\t\t\ty : 97,\r\n\t\t\t\t\tx : 254,\r\n\t\t\t\t\tname : 'Consumables',\r\n\t\t\t\t\tdeacription : 'This is Consumable',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t} ]\r\n\t\t\t},\r\n\t\t\tcatwalk : {\r\n\t\t\t\timageUrl : \"assets/images/catwalk-ad.png\",\r\n\t\t\t\tsensors : [ {\r\n\t\t\t\t\ty : 330,\r\n\t\t\t\t\tx : 382,\r\n\t\t\t\t\tname : 'Main Arm Load Pin',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 280,\r\n\t\t\t\t\tx : 425,\r\n\t\t\t\t\tname : 'Main Cylinder Pressure 1',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 240,\r\n\t\t\t\t\tx : 375,\r\n\t\t\t\t\tname : 'Main Cylinder Pressure 2',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 180,\r\n\t\t\t\t\tx : 450,\r\n\t\t\t\t\tname : 'HydraulicAux. System Pressure',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 220,\r\n\t\t\t\t\tx : 402,\r\n\t\t\t\t\tname : 'Hydraulic Main System Pressure',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 205,\r\n\t\t\t\t\tx : 430,\r\n\t\t\t\t\tname : 'Hydraulic Return Pressure',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 190,\r\n\t\t\t\t\tx : 510,\r\n\t\t\t\t\tname : 'Hydraulic Flow',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 10,\r\n\t\t\t\t\tx : 490,\r\n\t\t\t\t\tname : 'Skate Encoder',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 307,\r\n\t\t\t\t\tx : 405,\r\n\t\t\t\t\tname : 'Main Arm Encoder',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 135,\r\n\t\t\t\t\tx : 565,\r\n\t\t\t\t\tname : 'Current Meter',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t} ],\r\n\t\t\t\tconsumables : [ {\r\n\t\t\t\t\ty : 110,\r\n\t\t\t\t\tx : 536,\r\n\t\t\t\t\tname : 'Return Filter Sensor',\r\n\t\t\t\t\tdeacription : 'This is Consumable',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 120,\r\n\t\t\t\t\tx : 507,\r\n\t\t\t\t\tname : 'Main System Filter Sensor',\r\n\t\t\t\t\tdeacription : 'This is Consumable',\r\n\t\t\t\t\tstate : 'moderate'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 148,\r\n\t\t\t\t\tx : 492,\r\n\t\t\t\t\tname : 'Aux System Filter Pressure',\r\n\t\t\t\t\tdeacription : 'This is Consumable',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t} ]\r\n\t\t\t},\r\n\t\t\tironroughneck : {\r\n\t\t\t\timageUrl : \"assets/images/roughneck.png\",\r\n\t\t\t\tsensors : [ {\r\n\t\t\t\t\ty : 180,\r\n\t\t\t\t\tx : 275,\r\n\t\t\t\t\tname : 'Make-Up Pressure',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 221,\r\n\t\t\t\t\tx : 275,\r\n\t\t\t\t\tname : 'Break-Out Pressure',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 263,\r\n\t\t\t\t\tx : 275,\r\n\t\t\t\t\tname : 'System Pressure',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 475,\r\n\t\t\t\t\tx : 110,\r\n\t\t\t\t\tname : 'Slew Encoder',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 65,\r\n\t\t\t\t\tx : 250,\r\n\t\t\t\t\tname : 'Horizontal Position',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 35,\r\n\t\t\t\t\tx : 130,\r\n\t\t\t\t\tname : 'Vertical Position',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t}, {\r\n\t\t\t\t\ty : 99,\r\n\t\t\t\t\tx : 143,\r\n\t\t\t\t\tname : 'Spinner',\r\n\t\t\t\t\tdeacription : 'This is Sensor',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t} ],\r\n\t\t\t\tconsumables : [ {\r\n\t\t\t\t\ty : 302,\r\n\t\t\t\t\tx : 45,\r\n\t\t\t\t\tname : 'Hydraulic Filter',\r\n\t\t\t\t\tdeacription : 'This is Consumable',\r\n\t\t\t\t\tstate : 'active'\r\n\t\t\t\t} ]\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$scope.categoriesData = {\r\n\t\t\tfracpump : {\r\n\t\t\t\t\"sections\" : [ {\r\n\t\t\t\t\t\"sectionName\" : \"Key Data Points\",\r\n\t\t\t\t\t\"categories\" : [ {\r\n\t\t\t\t\t\t\"categoryName\" : \"Key Data Points\",\r\n\t\t\t\t\t\t\"variables\" : [ {\r\n\t\t\t\t\t\t\t\"name\" : \"Pump_Efficiency\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Pump Efficiency\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"Piston_Accumulated_Travel\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Piston Accumulated Travel\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_InletPressure_Scale_Real\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Inlet Pressure\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_LubePressure_Scale_Real\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Lube Pressure\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_InletTemp_Scale_Real\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Inlet Temperature\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_OutletTemp_Scale_Real\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Outlet Temperature\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_OutletPressure_Scale_Real\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Outlet Pressure\"\r\n\t\t\t\t\t\t} ],\r\n\t\t\t\t\t\tlimiting : 1\r\n\t\t\t\t\t} ]\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"sectionName\" : \"Power End Categories\",\r\n\t\t\t\t\t\"categories\" : [ {\r\n\t\t\t\t\t\t\"categoryName\" : \"Temperatures\",\r\n\t\t\t\t\t\t\"variables\" : [ {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_InletTemp_Scale_Real\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Inlet Temperature\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_OutletTemp_Scale_Real\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Outlet Temperature\"\r\n\t\t\t\t\t\t} ],\r\n\t\t\t\t\t\tlimiting : 1\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"categoryName\" : \"Vibrations\",\r\n\t\t\t\t\t\t\"variables\" : [ {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Vibration01_Scale_Real\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Vibration-01\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Vibration02_Scale_Real\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Vibration-02\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_LubePressure_Scale_Real\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Lube Pressure\"\r\n\t\t\t\t\t\t} ],\r\n\t\t\t\t\t\tlimiting : 1\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"categoryName\" : \"Pressures\",\r\n\t\t\t\t\t\t\"variables\" : [ {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_LubePressure_Scale_Real\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Lube Pressure\"\r\n\t\t\t\t\t\t} ],\r\n\t\t\t\t\t\tlimiting : 1\r\n\t\t\t\t\t} ]\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"sectionName\" : \"Fluid End Categories\",\r\n\t\t\t\t\t\"categories\" : [ {\r\n\t\t\t\t\t\t\"categoryName\" : \"Pressures\",\r\n\t\t\t\t\t\t\"variables\" : [ {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_InletPressure_Scale_Real\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Inlet Pressure\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_OutletPressure_Scale_Real\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Outlet Pressure\"\r\n\t\t\t\t\t\t} ],\r\n\t\t\t\t\t\tlimiting : 1\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"categoryName\" : \"Vibrations\",\r\n\t\t\t\t\t\t\"variables\" : [ {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Vibration03_Scale_Real\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Vibration-03\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Vibration04_Scale_Real\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Vibration-04\"\r\n\t\t\t\t\t\t} ],\r\n\t\t\t\t\t\tlimiting : 1\r\n\t\t\t\t\t} ]\r\n\t\t\t\t} ]\r\n\t\t\t},\r\n\t\t\tironroughneck : {\r\n\t\t\t\t\"sections\" : [ {\r\n\t\t\t\t\t\"sectionName\" : \"Key Data Points\",\r\n\t\t\t\t\t\"categories\" : [ {\r\n\t\t\t\t\t\t\"categoryName\" : \"Key Data Points\",\r\n\t\t\t\t\t\t\"variables\" : [ {\r\n\t\t\t\t\t\t\t\"name\" : \"Cycles_Per_Day\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Cycles Per Day\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"MakeUp_Torque\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"MakeUp Torque\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"BreakOut_Torque\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"BreakOut Torque\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"Ambient_Temperature\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Ambient Temperature\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"Slip_Detection\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Slip Detection\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"MakeUp_Pressure\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"MakeUp Pressure\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"BreakUp_Pressure\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"BreakUp Pressure\"\r\n\t\t\t\t\t\t} ],\r\n\t\t\t\t\t\tlimiting : 1\r\n\t\t\t\t\t} ]\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"sectionName\" : \"Sensor Categories\",\r\n\t\t\t\t\t\"categories\" : [ {\r\n\t\t\t\t\t\t\"categoryName\" : \"Temperatures\",\r\n\t\t\t\t\t\t\"variables\" : [ {\r\n\t\t\t\t\t\t\t\"name\" : \"Ambient_Temperature\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Ambient Temperature\"\r\n\t\t\t\t\t\t} ],\r\n\t\t\t\t\t\tlimiting : 1\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"categoryName\" : \"Pressures\",\r\n\t\t\t\t\t\t\"variables\" : [ {\r\n\t\t\t\t\t\t\t\"name\" : \"MakeUp_Pressure\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"MakeUp Pressure\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"BreakUp_Pressure\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"BreakUp Pressure\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"System_Pressure\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"System Pressure\"\r\n\t\t\t\t\t\t} ],\r\n\t\t\t\t\t\tlimiting : 1\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"categoryName\" : \"Other Sensors\",\r\n\t\t\t\t\t\t\"variables\" : [ {\r\n\t\t\t\t\t\t\t\"name\" : \"Slew_Encoder\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Slew Encoder\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"Horz_Encoder\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Horizontal Encoder\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"Vert_Encoder\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Vertical Encoder\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"Spinner_RPM\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Spinner RPM\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"Filter_Health\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Filter Health\"\r\n\t\t\t\t\t\t} ],\r\n\t\t\t\t\t\tlimiting : 1\r\n\t\t\t\t\t} ]\r\n\t\t\t\t} ]\r\n\t\t\t},\r\n\t\t\tcatwalk : {\r\n\t\t\t\t\"sections\" : [ {\r\n\t\t\t\t\t\"sectionName\" : \"Key Data Points\",\r\n\t\t\t\t\t\"categories\" : [ {\r\n\t\t\t\t\t\t\"categoryName\" : \"Key Data Points\",\r\n\t\t\t\t\t\t\"variables\" : [ {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Hydraulic_Flow_Value\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Hydraulic Flow\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_HydroElec_Efficiency_Value\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Hydro Electricity Efficiency\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Volumetric_Efficiency_Value\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Volumetric Efficiency\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_MainArm_Angle_Value\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"MainArm Angle\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Hydraulic_Fluid_Level\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Hydraulic Fluid Level\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Asset_Temperature\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Asset Temperature\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Skate_Position\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Skate Position\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Trough_Load\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Trough Load\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Main_Pressure_Value\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Main Pressure\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Main_Arm_Cylinder_Pressure_1\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Main Arm Cylinder Pressure 1\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Main_Arm_Cylinder_Pressure_2\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Main Arm Cylinder Pressure 2\"\r\n\t\t\t\t\t\t} ],\r\n\t\t\t\t\t\tlimiting : 1\r\n\t\t\t\t\t} ]\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"sectionName\" : \"Sensor Categories\",\r\n\t\t\t\t\t\"categories\" : [ {\r\n\t\t\t\t\t\t\"categoryName\" : \"Temperatures\",\r\n\t\t\t\t\t\t\"variables\" : [ {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Ambient_Temp_Value\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Ambient Temp\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Asset_Temperature\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Asset Temperature\"\r\n\t\t\t\t\t\t} ],\r\n\t\t\t\t\t\tlimiting : 1\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"categoryName\" : \"Pressures\",\r\n\t\t\t\t\t\t\"variables\" : [ {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Auxiliary_Pressure_Value\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Auxiliary Pressure\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Return_Pressure_Value\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Return Pressure\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_MainFilter_Pressure_Value\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"MainFilter Pressure\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_AuxFilter_Pressure_Value\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"AuxFilter Pressure\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Main_Arm_Cylinder_Pressure_1\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Main Arm Cylinder Pressure 1\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Main_Arm_Cylinder_Pressure_2\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Main Arm Cylinder Pressure 2\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Return_Filter_Pressure\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Return Filter Pressure\"\r\n\t\t\t\t\t\t} ],\r\n\t\t\t\t\t\tlimiting : 1\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"categoryName\" : \"Other Sensors\",\r\n\t\t\t\t\t\t\"variables\" : [ {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_System_Current_Value\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"System Current\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Hydraulic_Flow_Value\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Hydraulic Flow\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\"name\" : \"CBM_Hydraulic_Fluid_Level\",\r\n\t\t\t\t\t\t\t\"value\" : 0.00,\r\n\t\t\t\t\t\t\t\"disName\" : \"Hydraulic Fluid Level\"\r\n\t\t\t\t\t\t} ],\r\n\t\t\t\t\t\tlimiting : 1\r\n\t\t\t\t\t} ]\r\n\t\t\t\t} ]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Added dummy web-socket to test...\r\n\t\tSocketAPIService.onmessage(function(data) {\r\n\t\t\tvar wsdata = JSON.parse(data.data);\r\n\t\t\t// if ($scope.truck.truckData.assetType == 'fracpump') {\r\n\t\t\t// $scope.powerEndcat.forEach(function (truck) {\r\n\t\t\t// truck.paramList.forEach(function (ti) {\r\n\t\t\t// var itemName = ti.id;\r\n\t\t\t// ti.paramValue = wsdata[itemName] + Math.random(0, 100);\r\n\t\t\t// })\r\n\t\t\t// })\r\n\t\t\t// $scope.fluidEndCat.forEach(function (truck) {\r\n\t\t\t// truck.paramList.forEach(function (ti) {\r\n\t\t\t// var itemName = ti.id;\r\n\t\t\t// ti.paramValue = wsdata[itemName] + Math.random(0, 100);\r\n\t\t\t// })\r\n\t\t\t// })\r\n\t\t\t// } else {\r\n\t\t\tif ($scope.currentCategories.sections.length) {\r\n\t\t\t\t$scope.currentCategories.sections.forEach(function(section) {\r\n\t\t\t\t\tsection.categories.forEach(function(cat) {\r\n\t\t\t\t\t\tcat.variables.forEach(function(ti) {\r\n\t\t\t\t\t\t\tvar itemName = ti.name;\r\n\t\t\t\t\t\t\tti.value = wsdata[itemName];\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t// }\r\n\t\t\t$scope.$apply();\r\n\t\t});\r\n\t\tvar params = $location.search();\r\n\t\tvar truckId = params.truckId, assetType;\r\n\t\tif (params.assetType) {\r\n\t\t\tassetType = params.assetType;\r\n\t\t} else {\r\n\t\t\tassetType = null;\r\n\t\t}\r\n\t\t$scope.truckdetails = {};\r\n\t\t$scope.truckdetails.showRODGraph = false;\r\n\t\t$scope.truck = {\r\n\t\t\ttruckData : [],\r\n\t\t\thealthGraphData : [],\r\n\t\t\tdeteriorationGraphData : [],\r\n\t\t\tshowTruckDetails : false,\r\n\t\t\t// siteName: siteData.siteName,\r\n\t\t\tmainTruckCategories : []\r\n\t\t};\r\n\t\t$scope.showImgSection = true;\r\n\t\t// $scope.mainTruckCategories = [];\r\n\r\n\t\t// get individual truck details data\r\n\t\tTruckDetailsService.getTruck(truckId, assetType).then(function (response) {\r\n\t\t\tvar data = response;\r\n\t\t\tif (response) {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\t$scope.truck.showTruckDetails = true;\r\n\t\t\t\t\t$scope.truck.truckData = data[0];\r\n\t\t\t\t\tif ($scope.truck.truckData.assetType == 'catwalk') {\r\n\t\t\t\t\t\tvar temp = $scope.truck.truckData.assetHealthData.splice(6, $scope.truck.truckData.assetHealthData.length);\r\n\t\t\t\t\t\t$scope.truck.truckData.assetMetaData = temp.concat($scope.truck.truckData.assetMetaData);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// $scope.truck.mainTruckCategories = $scope.truck.truckData.categories;\r\n\t\t\t\t\t// $scope.truck.otherTruckCategories = _.slice($scope.truck.truckData.categories, 6, $scope.truck.truckData.categories.length - 1);\r\n\t\t\t\t\t// $scope.truck.healthGraphData = formattedData[0].healthGraphs;\r\n\t\t\t\t\t// $scope.truck.deteriorationGraphData = formattedData[0].deteriorationGraphs;\r\n\t\t\t\t\t\r\n\t\t\t\t\t$scope.currentCategories = $scope.categoriesData[$scope.truck.truckData.assetType];\r\n\r\n\t\t\t\t\tTruckDetailsService.getChartData(truckId, assetType).then(function (response) {\r\n\t\t\t\t\t\t$scope.truck.healthGraphDatas = response;\r\n\t\t\t\t\t\t$scope.truck.healthGraphDatas.forEach(function(elem) {\r\n\t\t\t\t\t\t\t// if($scope.truck.truckData.assetType == 'fracpump' || $scope.truck.truckData.assetType == 'ironroughneck') {\r\n\t\t\t\t\t\t\t// \telem.xLabel = \"Hours\";\r\n\t\t\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t\t// \telem.xLabel = \"Cycles\";\r\n\t\t\t\t\t\t\t// }\t\t\t\t\r\n\t\t\t\t\t\t})\t\r\n\t\t\t\t\t\tif($scope.truck.truckData.deteriorationGraphs && $scope.truck.truckData.deteriorationGraphs.length){\r\n\t\t\t\t\t\t\t$scope.truck.truckData.deteriorationGraphs.forEach(function(detgraph){\r\n\t\t\t\t\t\t\t\t// if($scope.truck.truckData.assetType == 'fracpump' || $scope.truck.truckData.assetType == 'ironroughneck') {\r\n\t\t\t\t\t\t\t\t// \tdetgraph.xLabel = \"Hours\";\r\n\t\t\t\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t\t\t// \tdetgraph.xLabel = \"Cycles\";\r\n\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\t/* opens expanded view of truck insights */\r\n\t\t$scope.openInsights = function(index, variableName, parentIndex) {\r\n\r\n\t\t\tvariableName = variableName || '';\r\n\t\t\tvar categoryId = $scope.currentCategories.sections[parentIndex].categories[index].categoryName;\r\n\t\t\tvar uniqCategNames = _\r\n\t\t\t\t\t.chain(\r\n\t\t\t\t\t\t\t$scope.currentCategories.sections[parentIndex].categories[index].variables)\r\n\t\t\t\t\t.filter(function(sensor) {\r\n\t\t\t\t\t\treturn sensor;\r\n\t\t\t\t\t}).map(function(sensor) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\"name\" : sensor.name,\r\n\t\t\t\t\t\t\t\"displayName\" : sensor.disName\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}).uniq().value();\r\n\t\t\t$location.path('/insights').search({\r\n\t\t\t\t'siteId' : $scope.truck.truckData.siteId,\r\n\t\t\t\t'truckId' : $scope.truck.truckData.assetId,\r\n\t\t\t\t'assetName' : $scope.truck.truckData.assetName,\r\n\t\t\t\t'categories' : uniqCategNames,\r\n\t\t\t\t'categoryId' : categoryId,\r\n\t\t\t\t'assetType' : $scope.truck.truckData.assetType\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/*\r\n\t\t * Inlining the assignemnt \"showToolTip = false\" isn't working. So, a\r\n\t\t * function is created for toggling the display of tooltip.\r\n\t\t */\r\n\t\t$scope.toggleToolTip = function(flag) {\r\n\t\t\t$scope.showTooltip = flag;\r\n\t\t};\r\n\r\n\t\t$scope.switchDetails = function(partName, type) {\r\n\t\t\t$scope.x = partName.x;\r\n\t\t\t$scope.y = partName.y;\r\n\t\t\t$scope.sensorName = partName.name;\r\n\t\t\t$scope.showPreviewTooltip = true;\r\n\t\t}\r\n\r\n\t\t$scope.closeAssetPreviewTooltp = function(part) {\r\n\t\t\t$scope.showPreviewTooltip = false;\r\n\t\t}\r\n\r\n\t\t$scope.changeLimit = function(cat) {\r\n\t\t\tif (cat.limiting == 1) {\r\n\t\t\t\tcat.limiting = 99;\r\n\t\t\t} else {\r\n\t\t\t\tcat.limiting = 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$scope.navigateToAssetsList = function() {\r\n\t\t\t// $state.go('cyient.protected.allassets', null, {reload: true,\r\n\t\t\t// inherit: false});\r\n\t\t\tvar paramObj = {};\r\n\t\t\t$scope.data = '';\r\n\t\t\tparamObj.assetGrpType = $scope.truck.truckData.siteType;\r\n\t\t\tparamObj.assetGrpName = $scope.truck.truckData.siteName;\r\n\t\t\tparamObj.assetGrpId = $scope.truck.truckData.siteId;\r\n\t\t\tparamObj.navigateDirectly = true;\r\n\t\t\t// if (truckId) {\r\n\t\t\t// paramObj.truckId = truckId;\r\n\t\t\t// paramObj.navigateDirectly = true;\r\n\t\t\t// }\r\n\t\t\t// if (assetName) {\r\n\t\t\t// paramObj.assetName = siteData.type;\r\n\t\t\t// }\r\n\r\n\t\t\t$location.path(\"/\").search(paramObj);\r\n\t\t}\r\n\r\n\t}\r\n})();","'use strict';\r\n(function () {\r\n\tangular.module('cyient.assetgroupdetails', ['cyient.progressbar', 'cyient.progressarc']).controller(\r\n\t\t'AssetGroupDetails', AssetGroupDetails);\r\n\r\n\tAssetGroupDetails.$inject = ['$rootScope', '$scope', '$http', '$location',\r\n\t\t'$cookies', '$log', '$window', 'LoginService', 'AllAssetsService',\r\n\t\t'AllSitesService'\r\n\t];\r\n\r\n\tfunction AssetGroupDetails($rootScope, $scope, $http, $location, $cookies,\r\n\t\t$log, $window, LoginService, AllAssetsService, AllSitesService) {\r\n\t\t$rootScope.currentState = \"assetgroupdetails\";\r\n\t\tvar loginDataObjectLength = Object.keys(LoginService.getData()).length;\r\n\t\tvar loginData = (loginDataObjectLength) ? LoginService.getData() :\r\n\t\t\t$cookies.getObject('loginData');\r\n\r\n\t\tif (!LoginService.isAuthenticated()) {\r\n\t\t\t$scope.currentState = \"login\";\r\n\t\t\t$location.path(\"/login\").search({});\r\n\t\t}\r\n\r\n\t\t$scope.frackList = [];\r\n\t\t$scope.rigList = [];\r\n\t\tvar params = $location.search();\r\n\t\t//TODO Remove\r\n\t\t\r\n\t\tif (params) {\r\n\t\t\t$scope.currentSiteType = params.assetGrpType;\r\n\t\t\t$scope.currentSiteGroup = params;\r\n\t\t\tvar allAssetGrpsData = $window.localStorage.getItem('assetGroups') ||\r\n\t\t\t\t'[]';\r\n\t\t\tallAssetGrpsData = JSON.parse(allAssetGrpsData);\r\n\t\t\tif (allAssetGrpsData && allAssetGrpsData.length) {\r\n\t\t\t\t$scope.frackList = allAssetGrpsData.filter(function (truck) {\r\n\t\t\t\t\treturn truck.assetGrpType == \"frac\";\r\n\t\t\t\t});\r\n\t\t\t\t$scope.rigList = allAssetGrpsData.filter(function (truck) {\r\n\t\t\t\t\treturn truck.assetGrpType == \"rig\";\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$scope.rigAvgData = [\r\n\t\t\t// {\r\n\t\t\t// name: \"health\",\r\n\t\t\t// displayName: \"Avg. Health\",\r\n\t\t\t// value: 0,\r\n\t\t\t// units: \"percentage\"\r\n\t\t\t// },\r\n\t\t\t{\r\n\t\t\t\tname: \"ROD\",\r\n\t\t\t\tdisplayName: \"Avg. ROD\",\r\n\t\t\t\tvalue: 0,\r\n\t\t\t\tunits: \"percentage\"\r\n\t\t\t}\r\n\t\t]\r\n\t\t$scope.fracsiteData = [];\r\n\t\t$scope.getAssetList = function (id) {\r\n\t\t\tAllSitesService\r\n\t\t\t\t.getAssetGrp(id)\r\n\t\t\t\t.then(\r\n\t\t\t\t\tfunction (res) {\r\n\t\t\t\t\t\t$scope.fracsiteData = res;\r\n\t\t\t\t\t\tconsole.log($scope.fracsiteData);\r\n\t\t\t\t\t\tif ($scope.currentSiteGroup.assetGrpType) {\r\n\t\t\t\t\t\t\t$scope.rigAvgHealth = 0;\r\n\t\t\t\t\t\t\t$scope.rigAvgROD = 0;\r\n\t\t\t\t\t\t\t$scope.fracsiteData\r\n\t\t\t\t\t\t\t\t.forEach(function (ele) {\r\n\t\t\t\t\t\t\t\t\t$scope.rigAvgHealth += ele.assetsData[0].healthPercentage;\r\n\t\t\t\t\t\t\t\t\tif ($scope.currentSiteGroup.assetGrpType == 'rig') {\r\n\t\t\t\t\t\t\t\t\t\tele.assetsData[0].metaData\r\n\t\t\t\t\t\t\t\t\t\t\t.forEach(function (\r\n\t\t\t\t\t\t\t\t\t\t\t\telem) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (elem.name == \"ROD\") {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t$scope.rigAvgROD += elem.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// TODO: Remove this once it is\r\n\t\t\t\t\t\t\t\t\t// available in API\r\n\t\t\t\t\t\t\t\t\tif ($scope.currentSiteGroup.assetGrpType == 'frac') {\r\n\t\t\t\t\t\t\t\t\t\tele.assetGrpMetaData\r\n\t\t\t\t\t\t\t\t\t\t\t.forEach(function (\r\n\t\t\t\t\t\t\t\t\t\t\t\telem) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (elem.name == \"ROD\") {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telem.displayName = \"Avg. ROD\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telem.units = \"percentage\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t$scope.rigAvgROD = $scope.rigAvgROD /\r\n\t\t\t\t\t\t\t\t($scope.fracsiteData.length);\r\n\t\t\t\t\t\t\t$scope.rigAvgHealth = $scope.rigAvgHealth /\r\n\t\t\t\t\t\t\t\t($scope.fracsiteData.length);\r\n\t\t\t\t\t\t\t$scope.rigAvgData\r\n\t\t\t\t\t\t\t\t.forEach(function (element) {\r\n\t\t\t\t\t\t\t\t\t// if(element.name == 'health')\r\n\t\t\t\t\t\t\t\t\t// {\r\n\t\t\t\t\t\t\t\t\t// element.value =\r\n\t\t\t\t\t\t\t\t\t// $scope.rigAvgHealth;\r\n\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\tif (element.name == 'ROD') {\r\n\t\t\t\t\t\t\t\t\t\telement.value = $scope.rigAvgROD;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.getAssetList(params.assetGrpId);\r\n\t\t// $scope.getFracsiteData = function (siteId) {\r\n\t\t// AllSitesService.getFracSite().then(function (response) {\r\n\t\t// $scope.fracsiteData = response[0];\r\n\t\t// })\r\n\t\t// }\r\n\r\n\t\t// if ($rootScope.currentSiteType == 'frac') {\r\n\t\t// $scope.getFracsiteData();\r\n\t\t// } else if ($rootScope.currentSiteType == 'rig') {\r\n\t\t// $scope.getRigList();\r\n\t\t// }\r\n\r\n\t\t// if (loginData) {\r\n\t\t// $scope.dashboard = {\r\n\t\t// \"userId\": loginData.userId,\r\n\t\t// \"totalSites\": loginData.totalSites,\r\n\t\t// \"totalTrucks\": loginData.totalTrucks,\r\n\t\t// \"totalCritical\": loginData.totalCritical,\r\n\t\t// \"totalStable\": loginData.totalStable,\r\n\t\t// \"totalGood\": loginData.totalGood,\r\n\t\t// \"healthPercentAverage\": null,\r\n\t\t// \"sites\": null,\r\n\t\t// \"site\": null,\r\n\t\t// \"showDashboard\": false,\r\n\t\t// };\r\n\t\t// $scope.trucksList = [];\r\n\t\t// getTruckList();\r\n\t\t// DashboardService.getSites($scope.dashboard.userId)\r\n\t\t// .then(function (response) {\r\n\t\t// $scope.dashboard.sites = {};\r\n\t\t// if (response.data.status === 'ERROR') {\r\n\t\t// return\r\n\t\t// } else {\r\n\t\t// $scope.dashboard.showDashboard = true;\r\n\t\t// var xdata = response.data.result;\r\n\t\t// // var xdata = [];\r\n\t\t// // for (var i = 0; i < data.length; i++) {\r\n\t\t// // xdata.push(JSON.parse(data[i]));\r\n\t\t// // }\r\n\t\t// $scope.dashboard.sites = xdata;\r\n\t\t// $scope.dashboard.site = _.head(xdata); // default\r\n\t\t// $cookies.putObject('siteData', xdata);\r\n\t\t// SiteDetailsService.setData(xdata);\r\n\r\n\t\t// $scope.dashboard.healthPercentAverage = _.meanBy(xdata,\r\n\t\t// 'healthPercentage');\r\n\t\t// }\r\n\t\t// });\r\n\t\t// $scope.dashboard.selectSite = function (siteId) {\r\n\t\t// $scope.dashboard.site = _.find($scope.dashboard.sites, function (o) {\r\n\t\t// return o.siteId === siteId; })\r\n\t\t// }\r\n\t\t// }\r\n\r\n\t\t$scope.gotoSiteDetails = function (category, truckId, assetType) {\r\n\t\t\t// var navigateDirectly = (truckId) ? true : false;\r\n\t\t\tvar paramObj = {};\r\n\r\n\t\t\tif (category) {\r\n\t\t\t\tparamObj.category = category;\r\n\t\t\t}\r\n\t\t\tparamObj.siteId = $scope.fracsiteData[0].assetGrpId;\r\n\t\t\tparamObj.assetName = $scope.fracsiteData[0].assetGrpType;\r\n\t\t\tparamObj.assetLocation = $scope.fracsiteData[0].assetGrpName;\r\n\t\t\tif (truckId) {\r\n\t\t\t\tparamObj.truckId = truckId;\r\n\t\t\t\tparamObj.navigateDirectly = true;\r\n\t\t\t}\r\n\t\t\t$location.path(\"/assets\").search(paramObj);\r\n\t\t};\r\n\r\n\t\t// $scope.gotoReports = function () {\r\n\t\t// $state.go(\"cyient.protected.repairs\");\r\n\t\t// };\r\n\t\t// $scope.navigateToAssets = function () {\r\n\t\t// $state.go(\"cyient.protected.allassets\");\r\n\t\t// }\r\n\r\n\t\t$scope.changeDropdown = function (data) {\r\n\t\t\t$scope.currentSiteGroup = data;\r\n\t\t\t$scope.fracsiteData = null;\r\n\t\t\t// if (data.assetGrpType == 'frac') {\r\n\t\t\t// $scope.getFracsiteData(data.assetGrpId);\r\n\t\t\t// } else if (data.assetGrpType == 'rig') {\r\n\t\t\t// $scope.getRigList();\r\n\t\t\t// }\r\n\t\t\t$scope.getAssetList(data.assetGrpId);\r\n\t\t}\r\n\t\t$scope.navigateBack = function () {\r\n\t\t\t$location.path(\"/\").search({});\r\n\t\t}\r\n\t\t/* opens expanded view of truck details */\r\n\t\t$scope.openExpandedTruck = function (truckId, assetType) {\r\n\t\t\t// $scope.getSiteData(assetType).then(function (res) {\r\n\t\t\t// $cookies.putObject('siteData', res.data.result);\r\n\t\t\t// $scope.siteData = res.data.result;\r\n\t\t\talert(assetType);\r\n\t\t\tif (assetType == \"frac\") {\r\n\t\t\t\tassetType = \"fracpump\";\r\n\t\t\t}\r\n\t\t\t$location.path('/assetdetails').search({\r\n\t\t\t\ttruckId: truckId,\r\n\t\t\t\tassetType: assetType\r\n\t\t\t});\r\n\t\t\tangular.element('.scroll-body').css('display', 'none');\r\n\t\t\t// });\r\n\t\t\t// angular.element('.scroll-body').css('height', 'calc(100vh -\r\n\t\t\t// 250px)');\r\n\t\t\t// angular.element('.scroll-body').css('height', '-webkit-calc(100vh\r\n\t\t\t// - 250px)');\r\n\t\t\t// angular.element('.scroll-body').css('height', '-moz-calc(100vh -\r\n\t\t\t// 250px)');\r\n\t\t\t// angular.element('.scroll-body').css('height', '-ms-calc(100vh -\r\n\t\t\t// 250px)');\r\n\t\t};\r\n\r\n\t\t// $scope.getSiteData = function (siteId) {\r\n\t\t// // Used for side draw drop-down\r\n\t\t// return SiteDetailsService.getSiteData(siteId).then(function (res) {\r\n\t\t// return res;\r\n\t\t// })\r\n\t\t// // $cookies.putObject('siteData', $scope.siteData);\r\n\t\t// }\r\n\t}\r\n})();","'use strict';\r\n(function () {\r\n    angular.module('cyient.assetgroups', ['cyient.progressarc', 'ngRoute'])\r\n        .controller('AssetGroups', Allsites);\r\n\r\n    Allsites.$inject = ['$scope', '$rootScope', '$http', '$log', '$location', '$window', 'AllSitesService', 'LoginService'];\r\n\r\n    function Allsites($scope, $rootScope, $http, $log, $location, $window, AllSitesService, LoginService) {\r\n        $rootScope.currentState = \"/\";\r\n        $scope.trucks = {};\r\n        $scope.tabs = {};\r\n        $rootScope.currentSiteGroup = {};\r\n\r\n        if (!LoginService.isAuthenticated()) {\r\n            $rootScope.currentState = \"login\";\r\n            $location.path('/login').search({});\r\n            return;\r\n        }\r\n\r\n        $window.scrollTo(0, 0); // scroll to top\r\n        // watcher for animations\r\n        angular.element($window).bind(\"scroll\", function () {\r\n            if ($window.scrollY > 0) {\r\n                $scope.scrolledDown = true;\r\n            } else {\r\n                $scope.scrolledDown = false;\r\n            }\r\n            $scope.$apply();\r\n        });\r\n\r\n        AllSitesService.getSites().then(function (response) {\r\n            if (!response) {\r\n                return\r\n            } else {\r\n                // var data = response.data.result;\r\n                $scope.trucks.list = response;\r\n\r\n                // Todo\r\n                $window.localStorage.setItem('assetGroups', JSON.stringify($scope.trucks.list));\r\n                $scope.trucks.exhaustiveList = response;\r\n                getTabsData();\r\n            }\r\n        });\r\n\r\n        // TODO: Need to optimize\r\n        function getTabsData() {\r\n            $scope.tabs.activeTab = \"All\";\r\n\r\n            $scope.tabs.all = $scope.trucks.exhaustiveList.length;\r\n            $scope.tabs.fracpumps = $scope.trucks.exhaustiveList.filter(function (ele2) {\r\n                return ele2.assets.some(function (ele3) {\r\n                    // TODO: this has to change when \"name\" property key changes\r\n                    return ele3.name == 'fracpump' && ele3.value >= 1;\r\n                })\r\n            }).length;\r\n            $scope.tabs.roughneck = $scope.trucks.exhaustiveList.filter(function (ele2) {\r\n                return ele2.assets.some(function (ele3) {\r\n                    return ele3.name == 'roughneck' && ele3.value >= 1;\r\n                })\r\n            }).length;\r\n            $scope.tabs.catwalk = $scope.trucks.exhaustiveList.filter(function (ele2) {\r\n                return ele2.assets.some(function (ele3) {\r\n                    return ele3.name == 'catwalk' && ele3.value >= 1;\r\n                })\r\n            }).length;\r\n            $scope.tabs.monitor = $scope.trucks.exhaustiveList.filter(function (ele) {\r\n                return ele.healthPercentage > 20 && ele.healthPercentage <= 80\r\n            }).length;\r\n            $scope.tabs.good = $scope.trucks.exhaustiveList.filter(function (ele) {\r\n                return ele.healthPercentage > 80;\r\n            }).length;\r\n            $scope.tabs.critical = $scope.trucks.exhaustiveList.filter(function (ele) {\r\n                return ele.healthPercentage <= 20\r\n            }).length;\r\n        }\r\n\r\n\r\n        $scope.trucks = {\r\n            'list': [],\r\n            'exhaustiveList': [],\r\n            'parameterInsights': {},\r\n            'isOrder': false, // ascending order\r\n            'trucks.orderSymbol': '+', // ascending order\r\n            'selectedType': 'operationalDate', // default selection,\r\n            'selectedText': 'Operational Date',\r\n            'filterSelectedText': 'All Asset Groups',\r\n            'category': 'All', // default\r\n        };\r\n\r\n        // watch option change and reset order\r\n        $scope.$watch('trucks.selectedType', function (NewValue, OldValue) {\r\n            $scope.trucks.isOrder = false;\r\n        }, true);\r\n\r\n        $scope.toggleOrder = function () {\r\n            $scope.trucks.isOrder = !$scope.trucks.isOrder;\r\n            if ($scope.trucks.isOrder === false) {\r\n                $scope.trucks.orderSymbol = '+'; // ascending\r\n            } else {\r\n                $scope.trucks.orderSymbol = '-'; // descending\r\n            }\r\n        };\r\n\r\n        $scope.trucks.selectedOption = function (selection, selectionText) {\r\n            $scope.trucks.selectedType = selection;\r\n            $scope.trucks.selectedText = selectionText;\r\n        };\r\n        $scope.trucks.filterSelectedOption = function (selection, selectionText) {\r\n            $scope.trucks.filterSelectedText = selectionText;\r\n        };\r\n        // TODO: Need to optimize\r\n        $scope.filterAssets = function (key, val) {\r\n            $scope.tabs.activeTab = val;\r\n            if (key == 'All') {\r\n                $scope.trucks.list = $scope.trucks.exhaustiveList;\r\n                return;\r\n            } else if (key == 'health') {\r\n                $scope.trucks.list = $scope.trucks.exhaustiveList.filter(function (ele) {\r\n                    return checkStability(ele.healthPercentage, val);\r\n                });\r\n                return;\r\n            } else if (key == 'asset') {\r\n                $scope.trucks.list = $scope.trucks.exhaustiveList.filter(function (ele2) {\r\n                    return ele2.assets.some(function (ele3) {\r\n                        return ele3.name == val && ele3.value >= 1;\r\n                    })\r\n                });\r\n            }\r\n        }\r\n\r\n        function checkStability(val, condition) {\r\n            if (condition == 'good') {\r\n                return val > 80;\r\n            } else if (condition == 'monitor') {\r\n                return val > 20 && val <= 80;\r\n            } else if (condition == 'critical') {\r\n                return val <= 20\r\n            }\r\n        }\r\n\r\n        /* opens expanded view of truck details */\r\n        $scope.openExpandedTruck = function (asset) {\r\n            var qdata = asset;\r\n            console.log(JSON.stringify(asset));\r\n            $location.path(\"/assetgroupdetails\").search(qdata);\r\n        };\r\n    }\r\n})();","'use strict';\r\n(function () {\r\n    angular.module('cyient.assets', ['cyient.progressarc'])\r\n        .controller('Assets', Assets);\r\n\r\n    Assets.$inject = ['$scope', '$rootScope', '$http', '$log', '$location', '$window', '$cookies', 'AllAssetsService',  'LoginService'];\r\n    function Assets($scope, $rootScope, $http, $log, $location, $window, $cookies, AllAssetsService,  LoginService) {\r\n    \t$rootScope.currentState=\"assets\";\r\n       $scope.trucks = {};\r\n       var params=$location.search();\r\n       if(!params){\r\n       \tparams={};\r\n       }\r\n        $scope.tabs = {\r\n            'activeTab': 'All'\r\n        };\r\n        $scope.singleSiteData = false;\r\n        $scope.assetTypeName = \"\";\r\n        /* ng-class handling variables */\r\n        $rootScope.expandTruck = false;\r\n        $rootScope.collapseExpanded = false;\r\n        $rootScope.siteCardSectionActive = false;\r\n        $rootScope.showView = \"\";\r\n\r\n        if(!LoginService.isAuthenticated()) {\r\n        \t$scope.currentState=\"login\";\r\n            $location.path(\"/login\").search({});\r\n        }\r\n\r\n        $window.scrollTo(0, 0); // scroll to top\r\n        // watcher for animations\r\n        angular.element($window).bind(\"scroll\", function () {\r\n            if ($window.scrollY > 0) {\r\n                $scope.scrolledDown = true;\r\n            }\r\n            else {\r\n                $scope.scrolledDown = false;\r\n            }\r\n            $scope.$apply();\r\n        });\r\n\r\n        $window.localStorage.removeItem(\"trucksList\"); // clean old trucks list\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// data\r\n\r\n\r\n        $scope.trucks = {\r\n            'list': [],\r\n            'exhaustiveList': [],\r\n            'parameterInsights': {},\r\n            'isOrder': false, // ascending order\r\n            'trucks.orderSymbol': '+', // ascending order\r\n            'selectedType': 'RUL', // default selection,\r\n            'selectedText': 'RUL',\r\n            'filterSelectedText': 'All Assets',\r\n            'category': 'All', // default\r\n        };\r\n\r\n        // TODO: cahnge this\r\n        if (params&&params.category === 'All') {\r\n            $scope.tabs.activeTab = params.assetName == 'frac' ? 'fracpump': params.assetName;\r\n\r\n        } else if (params&&params.category === 'Critical') {\r\n            $scope.tabs.activeTab = 'critical';\r\n        } else if (params&&params.category === 'Stable') {\r\n            $scope.tabs.activeTab = 'monitor';\r\n        } else if (params&&params.category === 'Good') {\r\n            $scope.tabs.activeTab = 'good';\r\n        }\r\n\r\n        $scope.trucks.category = params.category || 'All';\r\n\r\n        if (params.siteId) { // display on top as heading\r\n            $scope.singleSiteData = true; \r\n            $scope.siteId = params.siteId; // Identifier to show on top\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// as heading\r\n            $scope.assetLocation = params.assetLocation; // rig or\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// fracing site\r\n            $scope.assetTypeName = params.assetName == 'frac' ? 'fracpump': params.assetName;\r\n        }\r\n        \r\n\r\n        var loginData = $cookies.getObject('loginData');\r\n        var postObj = {};\r\n        if (params.siteId) {\r\n            postObj.siteId = params.siteId;\r\n        }\r\n\r\n        AllAssetsService.getSites(postObj).then(function (response) {\r\n            if (!response) {\r\n                return;\r\n            } else {\r\n                var data = response;\r\n                // TODO: Remove this once the data comes fine\r\n                data.forEach(function(element) {\r\n                    element.progressGraph.graphData[1].xAxis = element.smh;\r\n                    element.progressGraph.xAxisToday = element.smh;\r\n                });\r\n                $window.localStorage.setItem('trucksList', JSON.stringify(data));\r\n                // $scope.trucks.exhaustiveList = data;\r\n                if ($scope.singleSiteData) {\r\n                    $scope.trucks.exhaustiveList = data.filter(function (item) {\r\n                        return item.siteId == $scope.siteId;\r\n                    });\r\n                    $scope.trucks.list = $scope.trucks.exhaustiveList;\r\n                    if (params&&params.category && params.category != 'All') {\r\n                        $scope.filterAssets('health', $scope.tabs.activeTab);\r\n                    }\r\n                } else {\r\n                    $scope.trucks.exhaustiveList = data;\r\n                    $scope.trucks.list = $scope.trucks.exhaustiveList;\r\n                }\r\n                getTabsData();\r\n            }\r\n        });\r\n\r\n\r\n        // $scope.getSiteData = function (siteId) {\r\n        // // Used for side draw drop-down\r\n        // return SiteDetailsService.getSiteData(siteId).then(function (res) {\r\n        // return res;\r\n        // })\r\n        // }\r\n\r\n        /* opens expanded view of truck details */\r\n        $scope.openExpandedTruck = function (truckId, assetType) {\r\n            // $scope.getSiteData(siteId).then(function (res) {\r\n                // $cookies.putObject('siteData', res.data.result);\r\n                // $scope.siteData = res.data.result;\r\n                $scope.openExpanded();\r\n                $rootScope.showView = \"overview-expand\";\r\n                $location.path(\"/assetdetails\").search({ \"truckId\": truckId.assetId, 'assetType': truckId.assetType });\r\n                angular.element('.scroll-body').css('display', 'none');\r\n            // });\r\n            // angular.element('.scroll-body').css('height', 'calc(100vh -\r\n\t\t\t// 250px)');\r\n            // angular.element('.scroll-body').css('height', '-webkit-calc(100vh\r\n\t\t\t// - 250px)');\r\n            // angular.element('.scroll-body').css('height', '-moz-calc(100vh -\r\n\t\t\t// 250px)');\r\n            // angular.element('.scroll-body').css('height', '-ms-calc(100vh -\r\n\t\t\t// 250px)');\r\n        };\r\n\r\n        $scope.trucks.setActive = function (menuItem) {\r\n            $scope.trucks.activeMenuItem = menuItem;\r\n        };\r\n\r\n        /* opens expanded view of card */\r\n        $scope.openExpanded = function () {\r\n            $rootScope.siteCardSectionActive = true;\r\n            $rootScope.collapseExpanded = true;\r\n            $rootScope.expandTruck = true;\r\n        };\r\n\r\n        $scope.trucks.goToDashboard = function () {\r\n            // cancel any calls in progress\r\n           // SiteDetailsService.cancelRequest();\r\n            // $state.go(\"cyient.protected.dashboard\");\r\n        }\r\n\r\n        $scope.trucks.retrieveAllTrucks = function () {\r\n            SiteDetailsService.getAllTrucks(params.siteID, 'all')\r\n                .then(function (response) {\r\n                    if (response.data.status === \"ERROR\") {\r\n                        return\r\n                    } else {\r\n                        $scope.trucks.list = response.data.result;\r\n                    }\r\n                });\r\n        };\r\n\r\n        \r\n        // To get the data length of each tab\r\n        // TODO: Need to optimize\r\n        function getTabsData() {\r\n            // $scope.tabs.activeTab = \"All\";\r\n\r\n            $scope.tabs.all = $scope.trucks.exhaustiveList.length;\r\n            $scope.tabs.fracpumps = $scope.trucks.exhaustiveList.filter(function (ele) {\r\n                return ele.assetType == 'fracpump';\r\n            }).length;\r\n            $scope.tabs.roughneck = $scope.trucks.exhaustiveList.filter(function (ele) {\r\n                return ele.assetType == 'ironroughneck';\r\n            }).length;\r\n            $scope.tabs.catwalk = $scope.trucks.exhaustiveList.filter(function (ele) {\r\n                return ele.assetType == 'catwalk';\r\n            }).length;\r\n            $scope.tabs.monitor = $scope.trucks.exhaustiveList.filter(function (ele) {\r\n                return ele.healthPercentage > 20 && ele.healthPercentage <= 80\r\n            }).length;\r\n            $scope.tabs.good = $scope.trucks.exhaustiveList.filter(function (ele) {\r\n                return ele.healthPercentage > 80;\r\n            }).length;\r\n            $scope.tabs.critical = $scope.trucks.exhaustiveList.filter(function (ele) {\r\n                return ele.healthPercentage <= 20\r\n            }).length;\r\n        }\r\n\r\n\r\n\r\n        // watch option change and reset order\r\n        $scope.$watch('trucks.selectedType', function (NewValue, OldValue) {\r\n            $scope.trucks.isOrder = false;\r\n        }, true);\r\n\r\n        $scope.toggleOrder = function () {\r\n            $scope.trucks.isOrder = !$scope.trucks.isOrder;\r\n            if ($scope.trucks.isOrder === false) {\r\n                $scope.trucks.orderSymbol = '+'; // ascending\r\n            } else {\r\n                $scope.trucks.orderSymbol = '-'; // descending\r\n            }\r\n        };\r\n        \r\n\r\n        $scope.trucks.selectedOption = function (selection, selectionText) {\r\n            $scope.trucks.selectedType = selection;\r\n            $scope.trucks.selectedText = selectionText;\r\n        };\r\n        $scope.trucks.filterSelectedOption = function (selection, selectionText) {\r\n            $scope.trucks.filterSelectedText = selectionText;\r\n        };\r\n        // TODO: Need to optimize\r\n        $scope.filterAssets = function (key, val) {\r\n            $scope.tabs.activeTab = val;\r\n            if (key == 'All') {\r\n                $scope.trucks.list = $scope.trucks.exhaustiveList;\r\n                return;\r\n            } else if (key == 'health') {\r\n                $scope.trucks.list = $scope.trucks.exhaustiveList.filter(function (ele) {\r\n                    return checkStability(ele.healthPercentage, val);\r\n                });\r\n                return;\r\n            } else if (key == 'asset') {\r\n                $scope.trucks.list = $scope.trucks.exhaustiveList.filter(function (ele) {\r\n                    return ele.assetType == val;\r\n                });\r\n            }\r\n        }\r\n\r\n        function checkStability(val, condition) {\r\n            if(condition == 'good') {\r\n                return val > 80;\r\n            } else if(condition == 'monitor') {\r\n                return val>20 && val <= 80; \r\n            } else if(condition == 'critical') {\r\n                return val<=20\r\n            }\r\n        }\r\n\r\n        /* closes expanded view of card */\r\n        $scope.closeExpanded = function (ele) {\r\n            $rootScope.siteCardSectionActive = false;\r\n            $rootScope.expandTruck = false;\r\n            $rootScope.collapseExpanded = false;\r\n            angular.element('.scroll-body').css('height', '');\r\n            angular.element('.sites-card').removeClass('selected');\r\n            TruckDetailsService.cancelRequest(); // cancel running call\r\n            // $state.reload(); // reload trucks list data\r\n        };\r\n\r\n        /* opens collapsed view of truck */\r\n        $scope.openCollapsedExpandedTruck = function () {\r\n            $rootScope.collapseExpanded = true;\r\n            angular.element('.whatif-collapse').removeClass('whatif-collapse--modified');\r\n            angular.element('.scroll-body').css('display', 'none');\r\n        };\r\n\r\n        /* closes collapsed view of truck */\r\n        $scope.closeCollapsedExpandedTruck = function () {\r\n            $rootScope.collapseExpanded = false;\r\n            angular.element('.scroll-body').css('display', 'block');\r\n            angular.element('.whatif-collapse').addClass('whatif-collapse--modified');\r\n        };\r\n\r\n        function getTruckById(truckId) {\r\n            for (var i = 0; i < $scope.trucks.list.length; i++) {\r\n                if ($scope.trucks.list[i].truckId === truckId) {\r\n                    return $scope.trucks.list[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        \r\n\r\n\r\n        // Created for dropdown directive\r\n        // $scope.trucks.retreiveCategoryTrucks = function (clickedCategory) {\r\n        // switch (clickedCategory) {\r\n        // case 'All Trucks':\r\n        // $scope.trucks.retrieveAllTrucksList($scope.siteData.siteId, 'All');\r\n        // break;\r\n        // case 'Critical':\r\n        // $scope.trucks.retrieveCriticalTrucksList($scope.siteData.siteId,\r\n\t\t// 'Critical');\r\n        // break;\r\n        // case 'Stable':\r\n        // $scope.trucks.retrieveStableTrucksList($scope.siteData.siteId,\r\n\t\t// 'Stable');\r\n        // break;\r\n        // case 'Good':\r\n        // $scope.trucks.retrieveGoodTrucksList($scope.siteData.siteId, 'Good');\r\n        // break;\r\n        // }\r\n        // };\r\n\r\n        $scope.trucks.retrieveAllTrucksList = function (siteId, category) {\r\n            $scope.tabs = {};\r\n            $scope.tabs.activeTab = 'All';\r\n            $scope.trucks.category = 'All';\r\n            $scope.trucks.list = JSON.parse($window.localStorage.getItem(\"trucksList\"));\r\n            /*\r\n\t\t\t * NOTE: commented out for demonstration purpose. Uncomment it in\r\n\t\t\t * production\r\n\t\t\t */\r\n            // $scope.trucks.list = [];\r\n            // SiteDetailsService.getAllTrucks($stateParams.userId ||\r\n\t\t\t// loginData.userId,\r\n            // siteId, category, $scope.trucks.selectedType, \"ascending\")\r\n            // .then(function (response) {\r\n            // if(response.data.status === \"ERROR\"){\r\n            // return\r\n            // } else {\r\n            // var data = response.data.result;\r\n            // if(data){\r\n            // var xdata = [];\r\n            // for(var i=0; i<data.length; i++){\r\n            // xdata.push(JSON.parse(data[i]));\r\n            // }\r\n            // $scope.trucks.list = xdata;\r\n            // }\r\n            // }\r\n            // });\r\n        };\r\n\r\n        $scope.trucks.retrieveCriticalTrucksList = function (siteId, category) {\r\n            $scope.tabs = {};\r\n            $scope.tabs.activeTab = 'critical';\r\n            $scope.trucks.category = 'Critical';\r\n            var data = $window.localStorage.getItem(\"trucksList\");\r\n            $log.log(data)\r\n            $scope.trucks.list = JSON.parse($window.localStorage.getItem(\"trucksList\"));\r\n            // for (var i in $scope.trucks.list) {\r\n                $scope.trucks.list = $scope.trucks.list.filter(function (ele) {\r\n                    return ele.category === category;\r\n                });\r\n            // }\r\n            /*\r\n\t\t\t * NOTE: commented out for demonstration purpose. Uncomment it in\r\n\t\t\t * production\r\n\t\t\t */\r\n            // $scope.trucks.list = [];\r\n            // SiteDetailsService.getAllTrucks($stateParams.userId ||\r\n\t\t\t// loginData.userId,\r\n            // siteId, category, $scope.trucks.selectedType, \"ascending\")\r\n            // .then(function (response) {\r\n            // if(response.data.status === \"ERROR\"){\r\n            // return\r\n            // } else {\r\n            // var data = response.data.result;\r\n            // if(data){\r\n            // var xdata = [];\r\n            // for(var i=0; i<data.length; i++){\r\n            // xdata.push(JSON.parse(data[i]));\r\n            // }\r\n            // $scope.trucks.list = xdata;\r\n            // }\r\n            // }\r\n            // });\r\n        };\r\n\r\n        $scope.trucks.retrieveStableTrucksList = function (siteId, category) {\r\n            $scope.tabs = {};\r\n            $scope.tabs.activeTab = 'monitor';\r\n            $scope.trucks.category = 'Stable';\r\n            $scope.trucks.list = JSON.parse($window.localStorage.getItem(\"trucksList\") || '{}');\r\n            // for (var i in $scope.trucks.list) {\r\n                $scope.trucks.list = $scope.trucks.list.filter(function (ele) {\r\n                    return ele.category === category;\r\n                });\r\n            // }\r\n            /*\r\n\t\t\t * NOTE: commented out for demonstration purpose. Uncomment it in\r\n\t\t\t * production\r\n\t\t\t */\r\n            // $scope.trucks.list = [];\r\n            // SiteDetailsService.getAllTrucks($stateParams.userId ||\r\n\t\t\t// loginData.userId,\r\n            // siteId, category, $scope.trucks.selectedType, \"ascending\")\r\n            // .then(function (response) {\r\n            // if(response.data.status === \"ERROR\"){\r\n            // return\r\n            // } else {\r\n            // var data = response.data.result;\r\n            // if(data){\r\n            // var xdata = [];\r\n            // for(var i=0; i<data.length; i++){\r\n            // xdata.push(JSON.parse(data[i]));\r\n            // }\r\n            // $scope.trucks.list = xdata;\r\n            // }\r\n            // }\r\n            // });\r\n        };\r\n\r\n        $scope.trucks.retrieveGoodTrucksList = function (siteId, category) {\r\n            $scope.tabs = {};\r\n            $scope.tabs.activeTab = 'good';\r\n            $scope.trucks.category = 'Good';\r\n            $scope.trucks.list = JSON.parse($window.localStorage.getItem(\"trucksList\"));\r\n            // for (var i in $scope.trucks.list) {\r\n                $scope.trucks.list = $scope.trucks.list.filter(function (ele) {\r\n                    return ele.category === category;\r\n                });\r\n            // }\r\n            /*\r\n\t\t\t * NOTE: commented out for demonstration purpose. Uncomment it in\r\n\t\t\t * production\r\n\t\t\t */\r\n            // $scope.trucks.list = [];\r\n            // SiteDetailsService.getAllTrucks($stateParams.userId ||\r\n\t\t\t// loginData.userId,\r\n            // siteId, category, $scope.trucks.selectedType, \"ascending\")\r\n            // .then(function (response) {\r\n            // if(response.data.status === \"ERROR\"){\r\n            // return\r\n            // } else {\r\n            // var data = response.data.result;\r\n            // if(data){\r\n            // var xdata = [];\r\n            // for(var i=0; i<data.length; i++){\r\n            // xdata.push(JSON.parse(data[i]));\r\n            // }\r\n            // $scope.trucks.list = xdata;\r\n            // }\r\n            // }\r\n            // });\r\n        };\r\n\r\n        $scope.filterTrucks = function (truck) {\r\n            var result = (($scope.trucks.category === 'All') || (truck.category === $scope.trucks.category));\r\n            return result;\r\n        };   \r\n        }\r\n})();\r\n","'use strict';\n(function() {\n\tangular.module('cyient.geography',\n\t\t\t[ 'cyient.progressbar', 'cyient.progressarc' ]).controller(\n\t\t\t'Geography', Geography);\n\n\tGeography.$inject = [ '$scope','$rootScope', '$http', '$location', '$cookies', '$log',\n\t\t\t'GeographyService', 'LoginService', 'SiteDetailsService' ];\n\tfunction Geography($scope,$rootScope, $http, $location, $cookies, $log,\n\t\t\tGeographyService, LoginService, SiteDetailsService) {\n\t\t// Map View Data\n\t\t$rootScope.currentState = \"geography\";\n\t\t$scope.mapviews = [\n\t\t\t\t{\n\t\t\t\t\tname : \"OpenStreetMap\",\n\t\t\t\t\tdisplayName : \"Street View\",\n\t\t\t\t\turl : \"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname : \"WorldImagery\",\n\t\t\t\t\tdisplayName : \"Territory View\",\n\t\t\t\t\turl : \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n\n\t\t\t\t} ];\n\t\tvar viewMap = {};\n\t\tfor (var i = 0; i < $scope.mapviews.length; i++) {\n\t\t\tviewMap[$scope.mapviews[i].name] = $scope.mapviews[i].url;\n\t\t}\n\n\t\t$scope.currentAsset = 'all';\n\t\t$scope.wData = {\n\t\t\tcurrent : true,\n\t\t\tid : \"all\"\n\t\t};\n\t\t$scope.fpData = {\n\t\t\tlist : [],\n\t\t\tdisplayName : \"Frac Pump\",\n\t\t\tname : \"fracpump\",\n\t\t\tid : \"frac\",\n\t\t\ttotal : 0,\n\t\t\tcurrent : false,\n\t\t\tcritical : 0\n\t\t};\n\t\t$scope.cwData = {\n\t\t\tlist : [],\n\t\t\tdisplayName : \"CatWalk\",\n\t\t\tname : \"catwalk\",\n\t\t\tid : \"rig\",\n\t\t\ttotal : 0,\n\t\t\tcurrent : false,\n\t\t\tcritical : 0\n\t\t};\n\n\t\t$scope.getGeoData = function() {\n\t\t\tGeographyService.getGeoData().then(function(res) {\n\t\t\t\t$scope.geoData = res;\n\t\t\t\tprocessData();\n\t\t\t});\n\t\t}\n\n\t\tfunction processData() {\n\t\t\t$scope.geoData\n\t\t\t\t\t.forEach(function(asset) {\n\t\t\t\t\t\tif (asset.siteType == 'frac') {\n\t\t\t\t\t\t\t$scope.fpData.total = $scope.fpData.total\n\t\t\t\t\t\t\t\t\t+ (asset.assetsData[0].fracpump.totalAssets || 0);\n\t\t\t\t\t\t\t$scope.fpData.critical = $scope.fpData.critical\n\t\t\t\t\t\t\t\t\t+ (asset.assetsData[0].fracpump.critical || 0);\n\t\t\t\t\t\t\t$scope.fpData.list.push(asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (asset.siteType == 'rig') {\n\n\t\t\t\t\t\t\tif (asset.assetsData[0].catwalk) {\n\t\t\t\t\t\t\t\t$scope.cwData.total = $scope.cwData.total\n\t\t\t\t\t\t\t\t\t\t+ (asset.assetsData[0].catwalk.totalAssets || 0);\n\t\t\t\t\t\t\t\t$scope.cwData.critical = $scope.cwData.critical\n\t\t\t\t\t\t\t\t\t\t+ (asset.assetsData[0].catwalk.critical || 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$scope.cwData.list.push(asset);\n\n\t\t\t\t\t\t\t// TODO: Remove this once the RUL is removed from\n\t\t\t\t\t\t\t// response...\n\t\t\t\t\t\t\tasset.dataToShowOnHover = asset.dataToShowOnHover\n\t\t\t\t\t\t\t\t\t.filter(function(elem) {\n\t\t\t\t\t\t\t\t\t\treturn elem.name != \"RUL\";\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t})\n\t\t\t\t\t|| [];\n\t\t\tinitializeMap();\n\t\t}\n\t\tvar mymap = null;\n\n\t\t$scope.changeLocation = function(loc) {\n\t\t\t$scope.currentAsset = loc.id;\n\t\t\t$scope.wData.current = false;\n\t\t\t$scope.cwData.current = false;\n\t\t\t$scope.fpData.current = false;\n\t\t\tloc.current = true;\n\t\t\taType = loc.id;\n\t\t\tfor ( var ind in markersList) {\n\t\t\t\tmymap.removeLayer(markersList[ind]);\n\t\t\t}\n\t\t\tmarkersList = {};\n\t\t\tinitializeMap();\n\t\t}\n\n\t\tvar markersList = {};\n\t\tvar mymap = L.map('map').setView([ 37.0902, -95.7129 ], 5);\n\t\tvar view = L\n\t\t\t\t.tileLayer(\n\t\t\t\t\t\tviewMap.OpenStreetMap,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tattribution : '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n\t\t\t\t\t\t\tnoWrap : true\n\t\t\t\t\t\t});\n\n\t\tview.addTo(mymap);\n\t\t$(\".view\").on(\"change\", function() {\n\t\t\tvar val = $(this).val();\n\t\t\tview.setUrl(viewMap[val]);\n\t\t});\n\t\tvar aType = \"all\";\n\n\t\tfunction initializeMap() {\n\t\t\tfor (var i = 0; i < $scope.geoData.length; i++) {\n\n\t\t\t\tvar obj = $scope.geoData[i];\n\t\t\t\tvar template = '<div class=\"map-tooltip\" id=\"geo-tooltip\" ><div class=\"map-tooltip-section heading\"><span>'\n\t\t\t\t\t\t+ obj.location\n\t\t\t\t\t\t+ ' </span><span class=\"map-tooltip-location\"><svg><use xlink:href=\"#location\"></use></svg></span></div><div class=\"map-tooltip-section\"><div><div class=\"map-tt-heading\">Name: <span class=\"map-tt-value\">'\n\t\t\t\t\t\t+ obj.siteName + '</span></div></div></div>';\n\n\t\t\t\tfor (var j = 0; j < obj.dataToShowOnHover.length; j++) {\n\t\t\t\t\tif (obj.dataToShowOnHover[j].name == \"health\"\n\t\t\t\t\t\t\t|| obj.dataToShowOnHover[j].name == \"ROD\"\n\t\t\t\t\t\t\t|| obj.dataToShowOnHover[j].name == \"RUL\") {\n\t\t\t\t\t\tvar tval = obj.dataToShowOnHover[j].value.toFixed(2);\n\t\t\t\t\t} else if (obj.dataToShowOnHover[j].name == \"operationaldate\") {\n\t\t\t\t\t\tvar date = new Date(obj.dataToShowOnHover[j].value);\n\t\t\t\t\t\tvar tval = date.getDate() + \"-\" + date.getMonth() + \"-\"\n\t\t\t\t\t\t\t\t+ date.getFullYear();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar tval = obj.dataToShowOnHover[j].value;\n\t\t\t\t\t}\n\n\t\t\t\t\ttemplate += '<div class=\"map-tooltip-section\" ><div><span class=\"map-tt-heading\">'\n\t\t\t\t\t\t\t+ obj.dataToShowOnHover[j].displayName\n\t\t\t\t\t\t\t+ ': </span><span class=\"map-tt-value\">'\n\t\t\t\t\t\t\t+ tval\n\t\t\t\t\t\t\t+ '</span></div></div>';\n\t\t\t\t}\n\t\t\t\ttemplate += '<span class=\"tip\"></span><span class=\"tip-right\"></span></div>';\n\n\t\t\t\tif (obj.category == 'Good') {\n\t\t\t\t\tvar cIcon = L\n\t\t\t\t\t\t\t.divIcon({\n\t\t\t\t\t\t\t\tclassName : 'ship-div-icon',\n\t\t\t\t\t\t\t\thtml : '<span style=\"fill:green\"><svg><use xlink:href=\"#map-pin\"></use></svg></span>',\n\t\t\t\t\t\t\t\ticonSize : [ 25, 60 ]\n\t\t\t\t\t\t\t});\n\t\t\t\t} else if (obj.category == 'Stable') {\n\t\t\t\t\tvar cIcon = L\n\t\t\t\t\t\t\t.divIcon({\n\t\t\t\t\t\t\t\tclassName : 'ship-div-icon',\n\t\t\t\t\t\t\t\thtml : '<span style=\"fill:orange\"><svg><use xlink:href=\"#map-pin\"></use></svg></span>',\n\t\t\t\t\t\t\t\ticonSize : [ 25, 60 ]\n\t\t\t\t\t\t\t});\n\t\t\t\t} else if (obj.category == 'Critical') {\n\t\t\t\t\tvar cIcon = L\n\t\t\t\t\t\t\t.divIcon({\n\t\t\t\t\t\t\t\tclassName : 'ship-div-icon',\n\t\t\t\t\t\t\t\thtml : '<span style=\"fill:red\"><svg><use xlink:href=\"#map-pin\"></use></svg></span>',\n\t\t\t\t\t\t\t\ticonSize : [ 25, 60 ]\n\t\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tvar opacity = 1;\n\t\t\t\tif (aType != \"all\") {\n\t\t\t\t\tif (aType != obj.siteType) {\n\t\t\t\t\t\topacity = 0.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar mid = guid();\n\t\t\t\tmarkersList[mid] = L.marker(\n\t\t\t\t\t\t[ obj.coordinates.x, obj.coordinates.y ], {\n\t\t\t\t\t\t\ticon : cIcon,\n\t\t\t\t\t\t\t// icon: L.BeautifyIcon.icon(options),\n\t\t\t\t\t\t\tdraggable : true,\n\t\t\t\t\t\t\topacity : opacity\n\t\t\t\t\t\t}).addTo(mymap).bindPopup(template).on('mouseover',\n\t\t\t\t\t\tfunction(e) {\n\t\t\t\t\t\t\tthis.openPopup();\n\t\t\t\t\t\t}).on('mouseout', function(e) {\n\t\t\t\t\tthis.closePopup();\n\t\t\t\t}).on(\"click\", function(e) {\n\t\t\t\t\tvar odata = e.target;\n\t\t\t\t\t$scope.navigateToAssetsList(odata.jdata);\n\t\t\t\t});\n\t\t\t\tmarkersList[mid].jdata = obj;\n\t\t\t}\n\t\t}\n\n\t\t$scope.navigateToAssetsList = function(siteData) {\n\t\t\tvar paramObj = {};\n\n\t\t\tparamObj.assetGrpType = siteData.siteType;\n\t\t\tparamObj.assetGrpName = siteData.assetName;\n\t\t\tparamObj.assetGrpId = siteData.siteId;\n\t\t\tparamObj.navigateDirectly = true;\n\t\t\t$location.path(\"/assetgroupdetails\").search(paramObj);\n\t\t}\n\n\t\tfunction guid() {\n\t\t\tfunction s4() {\n\t\t\t\treturn Math.floor((1 + Math.random()) * 0x10000).toString(16)\n\t\t\t\t\t\t.substring(1);\n\t\t\t}\n\t\t\treturn s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-'\n\t\t\t\t\t+ s4() + s4() + s4();\n\t\t}\n\n\t\t$scope.getGeoData();\n\t}\n})();","'use strict';\r\n(function(){\r\n    angular.module('cyient.insights', [\r\n        'cyient.areachart',\r\n        'cyient.barcharthoriz',\r\n        'cyient.donut',\r\n        'cyient.onfinishrender',\r\n        'cyient.popup',\r\n        'cyient.scrolltowhen'\r\n    ])\r\n        .controller('Insights', Insights);\r\n\r\n    Insights.$inject = ['$scope', '$location', '$cookies', '$timeout', 'InsightsService', '$log', '$window', '$rootScope'];\r\n    function Insights($scope, $location, $cookies, $timeout, InsightsService, $log, $window, $rootScope){\r\n    \t$rootScope.currentState = \"insights\";\r\n    \t$scope.ins = {};\r\n        $window.scrollTo(0, 0);\r\n        // default data\r\n        // $scope.siteData = $cookies.getObject('siteData')[0];\r\n        var loginData = $cookies.getObject('loginData');\r\n        var params=$location.search();\r\n        var userId = loginData.userId;\r\n        var siteId = params.siteId;\r\n\r\n        $scope.truckId = params.truckId;\r\n        $scope.partName = params.partName;\r\n        $scope.categories = params.categories;\r\n        $scope.categoryId = params.categoryId;\r\n        $scope.variableName = params.variableName;\r\n        $scope.assetType = params.assetType;\r\n\r\n        $scope.popupData = {};\r\n\r\n        // $scope.variableName = 'Average Payload Tonns';\r\n\r\n        $scope.currIndex = _.findIndex($scope.categories, function(category) {\r\n            return category === $scope.categoryName;\r\n        });\r\n        if ($scope.currIndex === -1) {\r\n            $scope.currIndex = 0;\r\n        }\r\n\r\n        $scope.goToState = function(str){\r\n            $location.path(str);\r\n        }\r\n\r\n        $scope.changeCategory = function(index) {\r\n            $scope.currIndex = index;\r\n            $scope.getCategoryData($scope.categories[$scope.currIndex]);\r\n        };\r\n\r\n        $scope.firstTimeCall = true;\r\n        $scope.$on('ngRepeatFinished', function(ngRepeatFinishedEvent) {\r\n            $timeout(function() {\r\n                $scope.firstTimeCall = false;\r\n            }, 2000);\r\n        });\r\n\r\n        $scope.showGraphPopup = function(variable){\r\n            $log.log(variable);\r\n            var userId = loginData.userId;\r\n            var siteId = siteId;\r\n            var categoryId = $scope.categoryId;\r\n            var assetId = $scope.truckId;\r\n            var assetType = $scope.assetType;\r\n            var sensorName = [variable.name];\r\n\r\n            InsightsService.getDaysData(userId, siteId, categoryId, assetType, assetId, sensorName).then(function(data){\r\n                var variableData = data[0];\r\n                $scope.popupData.minOptimal = variableData.minOptimal;\r\n                $scope.popupData.maxOptimal = variableData.maxOptimal;\r\n                $scope.popupData.xLabel = variableData.xLabel;\r\n                $scope.popupData.yLabel = variableData.yLabel;\r\n                $scope.popupData.popupLineGraph = variableData.variableGraph;\r\n                var nowDate = Date.now();\r\n\r\n                var len = variableData.variableGraph.length;\r\n                for(var j = len; j > 0; j--) {\r\n                    nowDate = nowDate - (5 * 36000 * 1000);\t\r\n                    $scope.popupData.popupLineGraph[j-1].xValue = nowDate;\t\r\n                }\r\n                variable.showPopup = true;\r\n            });\r\n            \r\n        };\r\n\r\n        $scope.closePopup = function(variable){\r\n            variable.showPopup = false;\r\n            $scope.popupData = {};\r\n        }\r\n\r\n        $scope.getCategoryData = function(categoryName) {\r\n            var userId = loginData.userId;\r\n            var siteId = siteId;\r\n            var categoryId = $scope.categoryId;\r\n            var assetId = $scope.truckId;\r\n            var assetType = $scope.assetType;\r\n            var sensorNames = _.chain($scope.categories).filter(function (sensor) {\r\n                                return sensor;\r\n                            })\r\n                            .map(function (sensor) {\r\n                                return sensor.name;\r\n                            })\r\n                            .uniq()\r\n                            .value();\r\n            \r\n            InsightsService.getData(\r\n                userId,\r\n                siteId,\r\n                assetId,\r\n                categoryId,\r\n                assetType,\r\n                sensorNames\r\n            )\r\n                .then(function(data) {\r\n                if(data.status === \"ERROR\"){\r\n                    return\r\n                } else {\r\n                    $scope.variables = data.map(function(variable) {\r\n\r\n                        var result = {};\r\n\r\n                        // result.name = variable.variableName.replace(/_|-/g, \"\r\n\t\t\t\t\t\t// \");\r\n                        result.name = variable.variableName;\r\n                        result.displayName = categoryName.filter(function(sensor){\r\n                            return sensor.name == result.name;\r\n                        })\r\n                        result.paramtype = variable.paramtype;\r\n                        result.duration = variable.duration;\r\n                        result.varTrend = variable.varTrend;\r\n\r\n                        // result.trucks = {\r\n                        // min: variable.trucks.min,\r\n                        // max: variable.trucks.max,\r\n                        // avg: variable.trucks.avg,\r\n                        // };\r\n\r\n                        // result.site = {\r\n                        // min: variable.site.min,\r\n                        // max: variable.site.max,\r\n                        // avg: variable.site.avg,\r\n                        // };\r\n\r\n                        // Parsing area-chart\r\n                        // result.trendGraph = variable.trendGraph;\r\n                        // result.siteAvgGraph = variable.siteAvgGraph;\r\n                        \r\n                        // result.Graph = variable.Graph;\r\n\r\n                        result.lineGraph = variable.variableGraph;\r\n                        var nowDate = Date.now();\r\n\r\n                        var len = result.lineGraph.length\r\n                        for(var j =  len; j > 0; j--) {\r\n                            // if(j < 18000) {\r\n                                nowDate = nowDate - (10 * 1000);\r\n                                result.lineGraph[j-1].xValue = nowDate;\r\n                            // } else {\r\n                            // nowDate = nowDate - 36000 * 1000;\r\n                            // graphData[j].xValue = nowDate;\r\n                            // }\r\n                            // graphData[j].yValue = Math.random(80, 100)*100;\r\n                        }\r\n\r\n                        // $log.log(graphData);\r\n                        result.Graph = result.lineGraph;\r\n\r\n                        result.minOptimal = variable.minOptimal;\r\n                        result.maxOptimal = variable.maxOptimal;\r\n                        result.xLabel = variable.xLabel;\r\n                        result.yLabel = variable.yLabel;\r\n\r\n                        if (variable.paramtype === 'Total') {\r\n\r\n                            result.totalObj = variable.totalObj;\r\n\r\n                        } else if (variable.paramtype === 'Avg') {\r\n\r\n                            result.avgObj = variable.avgObj;\r\n\r\n                        } else if (variable.paramtype === 'Overload') {\r\n\r\n                            result.overLoadObj = variable.overLoadObj;\r\n\r\n                        }\r\n                        return result;\r\n                    });\r\n                }\r\n\r\n            }, function(err) {\r\n                $log.warn(err);\r\n            })\r\n        }; // End of getCategoryData function\r\n\r\n       \r\n        \r\n        $scope.navigateToOverview = function() {\r\n            $location.path(\"/assetdetails\").search({\"truckId\": $scope.truckId,\"assetType\":$scope.assetType});            \r\n        };\r\n\r\n        $scope.getCategoryData($scope.categories);\r\n\r\n    }; // End of controller\r\n})(); // End of IFFE\r\n","'use strict';\r\n(function () {\r\n  angular.module('cyient.login', [])\r\n    .controller('Login', Login);\r\n  Login.$inject = ['$scope','$rootScope', '$http','$location',  '$cookies', 'LoginService', '$log', '$window', 'ngOidcClient'];\r\n  function Login($scope,$rootScope, $http,$location, $cookies, LoginService, $log,  $window, ngOidcClient) {\r\n\t  $rootScope.currentState = \"login\";\r\n\t    $scope.header = false;\r\n    $scope.credentials = {\r\n      username: 'Shane.Richard@f-e-t.com',\r\n      password: 'R$hane123'\r\n    };\r\n    $scope.messages = {\r\n      invalidUser: false,\r\n      emailSent: false,\r\n      isLoginProgress: false,\r\n      loginError: null,\r\n    };\r\n      \r\n    $scope.token = \"Bearer  eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJTaGFuZS5SaWNoYXJkQGYtZS10LmNvbSIsImV4cCI6MTUzNDY3MzQ5Mn0.Bg8xVnrRDCALnXGTHGR0nTHXR8VwjcnIbPZ6jG29fdJ-2_PuPHjb1FfM2b9x_7qbqOSTLM3por5N_YdE5wgulg\";\r\n\r\n    function checkForAuthentication() {\r\n        \r\n        ngOidcClient.manager.getUser().then(function (user) {\r\n            if (user) {\r\n                user['profile']['Authorization'] = user.token_type+\" \"+user.access_token;// $scope.token;\r\n                $log.warn(\"User logged in\", user.profile);\r\n                $scope.userData = {\r\n                    Authorization : user.token_type+\" \"+user.access_token,\r\n                    firstName:user.profile.name,\r\n                    lastName:user.profile.name,\r\n                    userId :user.profile.sub,\r\n                    userName:user.profile.preferred_username\r\n                };\r\n                LoginService.authenticated = true;\r\n                LoginService.setData($scope.userData);\r\n                $cookies.putObject('login-token', user.token_type+\" \"+user.access_token);\r\n                var cookieObj = {\r\n                  userId: $scope.userData.userId,\r\n                  userFirstName: $scope.userData.firstName,\r\n                  userLastName: $scope.userData.lastName,\r\n                  userName: $scope.userData.userName,\r\n                  userImgUrl: ''\r\n                };\r\n                $cookies.putObject('loginData', cookieObj);\r\n                $location.path('/').search({});\r\n            }\r\n            else {\r\n                $log.warn(\"User not logged in\");\r\n                \r\n                angular.forEach($cookies, function(value, key) {\r\n                    $cookies.remove(key);\r\n                });\r\n            }\r\n        });\r\n\r\n        \r\n        /*\r\n\t\t * if (LoginService.isAuthenticated()) {\r\n\t\t * $state.go('cyient.protected.allsites'); } else {\r\n\t\t * angular.forEach($cookies, function(value, key) {\r\n\t\t * $cookies.remove(key); }); }\r\n\t\t */\r\n    }\r\n\r\n    checkForAuthentication();\r\n\r\n    $scope.oldLogin = function () {\r\n      $scope.messages.isLoginProgress = true;\r\n      var username = $scope.credentials.username;\r\n      var password = $scope.credentials.password;\r\n      $scope.messages.loginError = null;\r\n      if (username && password) {\r\n        var loginObj = {\r\n          \"userName\": username,\r\n          \"password\": password\r\n        };\r\n        LoginService.getUserDetails(loginObj).then(function (response) {\r\n          // $scope.messages.isLoginProgress = false;\r\n          if (!response) {\r\n            // $scope.messages.loginError = response.data.status + \" - \" +\r\n\t\t\t// response.status + \" - \" + response.statusText;\r\n            $scope.messages.loginError = \"Can not login at this moment\";\r\n          } else {\r\n            $scope.userData = response;\r\n            LoginService.setData($scope.userData);\r\n            var cookieObj = {\r\n              userId: $scope.userData.userId,\r\n              userFirstName: $scope.userData.firstName,\r\n              userLastName: $scope.userData.lastName,\r\n              userName: $scope.userData.userName,\r\n              userImgUrl: ''\r\n            };\r\n            $cookies.putObject('loginData', cookieObj);\r\n            $state.go('cyient.protected.allsites', { authStatus: true });\r\n          }\r\n        }, function() {\r\n          $scope.messages.loginError = \"Can not login at this moment\";\r\n        })\r\n          .catch(function (error) {\r\n            $log.warn(\"Cannot login at this moment ...\");\r\n            $scope.messages.loginError = \"Cannot login at this moment\";\r\n            // $scope.messages.isLoginProgress = false;\r\n          })\r\n          .finally(function () {\r\n            $scope.messages.isLoginProgress = false;\r\n          });\r\n      } else {\r\n        $scope.messages = {};\r\n        $scope.messages[\"invalidUser\"] = true;\r\n      }\r\n    };\r\n      \r\n    $scope.login = function() {\r\n        // $window.alert('new login');\r\n        ngOidcClient.signinRedirect();\r\n        \r\n    }\r\n    $scope.forgotPassword = function () {\r\n      var username = $scope.credentials.username;\r\n      if (username) {\r\n        LoginService.forgotPassword(username)\r\n          .then(function (response) {\r\n            if (response) {\r\n              $scope.messages = {};\r\n              $scope.messages[\"emailSent\"] = true;\r\n            }\r\n          });\r\n      }\r\n    };\r\n    // Get asset path\r\n    $scope.getPath = function (key) {\r\n      var key = key;\r\n      var path = AssetService.getAssetPath(key);\r\n      return path;\r\n    };\r\n  }\r\n})();\r\n"]}